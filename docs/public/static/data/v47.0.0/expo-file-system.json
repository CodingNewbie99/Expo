{"name":"expo-file-system","kind":1,"kindString":"Project","originalName":"","children":[{"name":"StorageAccessFramework","kind":4,"kindString":"Namespace","comment":{"shortText":"The `StorageAccessFramework` is a namespace inside of the `expo-file-system` module, which encapsulates all functions which can be used with [SAF URIs](#saf-uri).\nYou can read more about SAF in the [Android documentation](https://developer.android.com/guide/topics/providers/document-provider).","tags":[{"tag":"example","text":"\n# Basic Usage\n\n```ts\nimport { StorageAccessFramework } from 'expo-file-system';\n\n// Requests permissions for external directory\nconst permissions = await StorageAccessFramework.requestDirectoryPermissionsAsync();\n\nif (permissions.granted) {\n  // Gets SAF URI from response\n  const uri = permissions.directoryUri;\n\n  // Gets all files inside of selected directory\n  const files = await StorageAccessFramework.readDirectoryAsync(uri);\n  alert(`Files inside ${uri}:\\n\\n${JSON.stringify(files)}`);\n}\n```\n\n# Migrating an album\n\n```ts\nimport * as MediaLibrary from 'expo-media-library';\nimport * as FileSystem from 'expo-file-system';\nconst { StorageAccessFramework } = FileSystem;\n\nasync function migrateAlbum(albumName: string) {\n  // Gets SAF URI to the album\n  const albumUri = StorageAccessFramework.getUriForDirectoryInRoot(albumName);\n\n  // Requests permissions\n  const permissions = await StorageAccessFramework.requestDirectoryPermissionsAsync(albumUri);\n  if (!permissions.granted) {\n    return;\n  }\n\n  const permittedUri = permissions.directoryUri;\n  // Checks if users selected the correct folder\n  if (!permittedUri.includes(albumName)) {\n    return;\n  }\n\n  const mediaLibraryPermissions = await MediaLibrary.requestPermissionsAsync();\n  if (!mediaLibraryPermissions.granted) {\n    return;\n  }\n\n  // Moves files from external storage to internal storage\n  await StorageAccessFramework.moveAsync({\n    from: permittedUri,\n    to: FileSystem.documentDirectory!,\n  });\n\n  const outputDir = FileSystem.documentDirectory! + albumName;\n  const migratedFiles = await FileSystem.readDirectoryAsync(outputDir);\n\n  // Creates assets from local files\n  const [newAlbumCreator, ...assets] = await Promise.all(\n    migratedFiles.map<Promise<MediaLibrary.Asset>>(\n      async fileName => await MediaLibrary.createAssetAsync(outputDir + '/' + fileName)\n    )\n  );\n\n  // Album was empty\n  if (!newAlbumCreator) {\n    return;\n  }\n\n  // Creates a new album in the scoped directory\n  const newAlbum = await MediaLibrary.createAlbumAsync(albumName, newAlbumCreator, false);\n  if (assets.length) {\n    await MediaLibrary.addAssetsToAlbumAsync(assets, newAlbum, false);\n  }\n}\n```"},{"tag":"platform","text":"Android\n"}]},"children":[{"name":"copyAsync","kind":64,"kindString":"Function","signatures":[{"name":"copyAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Alias fro [`copyAsync`](#filesystemcopyasyncoptions) method."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RelocatingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"createFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new empty file.","returns":"A Promise that resolves to a [SAF URI](#saf-uri) to the created file.\n"},"parameters":[{"name":"parentUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The [SAF](#saf-uri) URI to the parent directory."},"type":{"type":"intrinsic","name":"string"}},{"name":"fileName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of new file **without the extension**."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":32768,"kindString":"Parameter","comment":{"shortText":"The MIME type of new file."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Alias for [`deleteAsync`](#filesystemdeleteasyncfileuri-options) method."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DeletingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getUriForDirectoryInRoot","kind":64,"kindString":"Function","signatures":[{"name":"getUriForDirectoryInRoot","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a [SAF URI](#saf-uri) pointing to a folder in the Android root directory. You can use this function to get URI for\n`StorageAccessFramework.requestDirectoryPermissionsAsync()` when you trying to migrate an album. In that case, the name of the album is the folder name.","returns":"Returns a [SAF URI](#saf-uri) to a folder.\n"},"parameters":[{"name":"folderName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of the folder which is located in the Android root directory."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"makeDirectoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"makeDirectoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new empty directory.","returns":"A Promise that resolves to a [SAF URI](#saf-uri) to the created directory.\n"},"parameters":[{"name":"parentUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The [SAF](#saf-uri) URI to the parent directory."},"type":{"type":"intrinsic","name":"string"}},{"name":"dirName","kind":32768,"kindString":"Parameter","comment":{"shortText":"The name of new directory."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"moveAsync","kind":64,"kindString":"Function","signatures":[{"name":"moveAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Alias for [`moveAsync`](#filesystemmoveasyncoptions) method."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"RelocatingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"readAsStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"readAsStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Alias for [`readAsStringAsync`](#filesystemreadasstringasyncfileuri-options) method."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ReadingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"readDirectoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"readDirectoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enumerate the contents of a directory.","returns":"A Promise that resolves to an array of strings, each containing the full [SAF URI](#saf-uri) of a file or directory contained in the directory at `fileUri`.\n"},"parameters":[{"name":"dirUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"(#saf-uri) URI to the directory."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestDirectoryPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestDirectoryPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Allows users to select a specific directory, granting your app access to all of the files and sub-directories within that directory.","returns":"Returns a Promise that resolves to `FileSystemRequestDirectoryPermissionsResult` object.\n","tags":[{"tag":"platform","text":"android 11+"}]},"parameters":[{"name":"initialFileUrl","kind":32768,"kindString":"Parameter","comment":{"shortText":"The [SAF URI](#saf-uri) of the directory that the file picker should display when it first loads.\nIf URI is incorrect or points to a non-existing folder, it's ignored."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FileSystemRequestDirectoryPermissionsResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"writeAsStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"writeAsStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Alias for [`writeAsStringAsync`](#filesystemwriteasstringasyncfileuri-contents-options) method."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"contents","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WritingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]},{"name":"EncodingType","kind":8,"kindString":"Enumeration","comment":{"shortText":"These values can be used to define how file system data is read / written."},"children":[{"name":"Base64","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Binary, radix-64 representation."},"defaultValue":"\"base64\""},{"name":"UTF8","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Standard encoding format."},"defaultValue":"\"utf8\""}]},{"name":"FileSystemSessionType","kind":8,"kindString":"Enumeration","comment":{"shortText":"These values can be used to define how sessions work on iOS.","tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"name":"BACKGROUND","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Using this mode means that the downloading/uploading session on the native side will work even if the application is moved to background.\nIf the task completes while the application is in background, the Promise will be either resolved immediately or (if the application execution has already been stopped) once the app is moved to foreground again.\n> Note: The background session doesn't fail if the server or your connection is down. Rather, it continues retrying until the task succeeds or is canceled manually."},"defaultValue":"0"},{"name":"FOREGROUND","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Using this mode means that downloading/uploading session on the native side will be terminated once the application becomes inactive (e.g. when it goes to background).\nBringing the application to foreground again would trigger Promise rejection."},"defaultValue":"1"}]},{"name":"FileSystemUploadType","kind":8,"kindString":"Enumeration","children":[{"name":"BINARY_CONTENT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The file will be sent as a request's body. The request can't contain additional data."},"defaultValue":"0"},{"name":"MULTIPART","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An [RFC 2387-compliant](https://www.ietf.org/rfc/rfc2387.txt) request body. The provided file will be encoded into HTTP request.\nThis request can contain additional data represented by [`UploadOptionsMultipart`](#uploadoptionsmultipart) type."},"defaultValue":"1"}]},{"name":"DownloadResumable","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new DownloadResumable","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"url","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"_fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"DownloadOptions"},"defaultValue":"{}"},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DownloadProgressData"}],"name":"FileSystemNetworkTaskProgressCallback"}},{"name":"resumeData","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"DownloadResumable"},"overwrites":{"type":"reference","name":"FileSystemCancellableNetworkTask.constructor"}}],"overwrites":{"type":"reference","name":"FileSystemCancellableNetworkTask.constructor"}},{"name":"fileUri","kind":262144,"kindString":"Accessor","flags":{"isPublic":true},"getSignature":[{"name":"fileUri","kind":524288,"kindString":"Get signature","type":{"type":"intrinsic","name":"string"}}]},{"name":"cancelAsync","kind":2048,"kindString":"Method","flags":{"isPublic":true},"signatures":[{"name":"cancelAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"FileSystemCancellableNetworkTask.cancelAsync"}}],"inheritedFrom":{"type":"reference","name":"FileSystemCancellableNetworkTask.cancelAsync"}},{"name":"downloadAsync","kind":2048,"kindString":"Method","signatures":[{"name":"downloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Download the contents at a remote URI to a file in the app's file system.","returns":"Returns a Promise that resolves to `FileSystemDownloadResult` object, or to `undefined` when task was cancelled.\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"FileSystemDownloadResult"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"pauseAsync","kind":2048,"kindString":"Method","signatures":[{"name":"pauseAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pause the current download operation. `resumeData` is added to the `DownloadResumable` object after a successful pause operation.\nReturns an object that can be saved with `AsyncStorage` for future retrieval (the same object that is returned from calling `FileSystem.DownloadResumable.savable()`).","returns":"Returns a Promise that resolves to `DownloadPauseState` object.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DownloadPauseState"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"resumeAsync","kind":2048,"kindString":"Method","signatures":[{"name":"resumeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resume a paused download operation.","returns":"Returns a Promise that resolves to `FileSystemDownloadResult` object, or to `undefined` when task was cancelled.\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"FileSystemDownloadResult"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"savable","kind":2048,"kindString":"Method","signatures":[{"name":"savable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Method to get the object which can be saved with `AsyncStorage` for future retrieval.","returns":"Returns object in shape of `DownloadPauseState` type.\n"},"type":{"type":"reference","name":"DownloadPauseState"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"DownloadProgressData"}],"name":"FileSystemCancellableNetworkTask"}]},{"name":"FileSystemCancellableNetworkTask","kind":128,"kindString":"Class","flags":{"isAbstract":true},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new FileSystemCancellableNetworkTask","kind":16384,"kindString":"Constructor signature","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"DownloadProgressData"},{"type":"reference","name":"UploadProgressData"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T"}],"name":"FileSystemCancellableNetworkTask"}}]},{"name":"cancelAsync","kind":2048,"kindString":"Method","flags":{"isPublic":true},"signatures":[{"name":"cancelAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"DownloadProgressData"},{"type":"reference","name":"UploadProgressData"}]}}],"extendedBy":[{"type":"reference","name":"UploadTask"},{"type":"reference","name":"DownloadResumable"}]},{"name":"UploadTask","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new UploadTask","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"url","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"FileSystemUploadOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UploadProgressData"}],"name":"FileSystemNetworkTaskProgressCallback"}}],"type":{"type":"reference","name":"UploadTask"},"overwrites":{"type":"reference","name":"FileSystemCancellableNetworkTask.constructor"}}],"overwrites":{"type":"reference","name":"FileSystemCancellableNetworkTask.constructor"}},{"name":"cancelAsync","kind":2048,"kindString":"Method","flags":{"isPublic":true},"signatures":[{"name":"cancelAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"},"inheritedFrom":{"type":"reference","name":"FileSystemCancellableNetworkTask.cancelAsync"}}],"inheritedFrom":{"type":"reference","name":"FileSystemCancellableNetworkTask.cancelAsync"}},{"name":"uploadAsync","kind":2048,"kindString":"Method","flags":{"isPublic":true},"signatures":[{"name":"uploadAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"FileSystemUploadResult"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"UploadProgressData"}],"name":"FileSystemCancellableNetworkTask"}]},{"name":"DeletingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"idempotent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, don't throw an error if there is no file or directory at this URI.","tags":[{"tag":"default","text":"false\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"DownloadOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cache","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object containing all the HTTP header fields and their values for the download network request. The keys and values of the object are the header names and values respectively."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"md5","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, include the MD5 hash of the file in the returned object. Provided for convenience since it is common to check the integrity of a file immediately after downloading.","tags":[{"tag":"default","text":"false\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"sessionType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A session type. Determines if tasks can be handled in the background. On Android, sessions always work in the background and you can't change it.","tags":[{"tag":"default","text":"FileSystemSessionType.BACKGROUND"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"FileSystemSessionType"}}]}}},{"name":"DownloadPauseState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fileUri","kind":1024,"kindString":"Property","comment":{"shortText":"The local URI of the file to download to. If there is no file at this URI, a new one is created. If there is a file at this URI, its contents are replaced."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":1024,"kindString":"Property","comment":{"shortText":"Object representing the file download options."},"type":{"type":"reference","name":"DownloadOptions"}},{"name":"resumeData","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The string which allows the API to resume a paused download."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","comment":{"shortText":"The remote URI to download from."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"DownloadProgressCallback","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"deprecated","text":"use `FileSystemNetworkTaskProgressCallback<DownloadProgressData>` instead.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DownloadProgressData"}],"name":"FileSystemNetworkTaskProgressCallback"}},{"name":"DownloadProgressData","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"totalBytesExpectedToWrite","kind":1024,"kindString":"Property","comment":{"shortText":"The total bytes expected to be written by the download operation. A value of `-1` means that the server did not return the `Content-Length` header\nand the total size is unknown. Without this header, you won't be able to track the download progress."},"type":{"type":"intrinsic","name":"number"}},{"name":"totalBytesWritten","kind":1024,"kindString":"Property","comment":{"shortText":"The total bytes written by the download operation."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"DownloadResult","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"deprecated","text":"Use `FileSystemDownloadResult` instead.\n"}]},"type":{"type":"reference","name":"FileSystemDownloadResult"}},{"name":"FileInfo","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","comment":{"shortText":"Object returned when file exist."},"children":[{"name":"exists","kind":1024,"kindString":"Property","comment":{"shortText":"Signifies that the requested file exist."},"type":{"type":"literal","value":true}},{"name":"isDirectory","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean set to `true` if this is a directory and `false` if it is a file."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"md5","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Present if the `md5` option was truthy. Contains the MD5 hash of the file."},"type":{"type":"intrinsic","name":"string"}},{"name":"modificationTime","kind":1024,"kindString":"Property","comment":{"shortText":"The last modification time of the file expressed in seconds since epoch."},"type":{"type":"intrinsic","name":"number"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the file in bytes. If operating on a source such as an iCloud file, only present if the `size` option was truthy."},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A `file://` URI pointing to the file. This is the same as the `fileUri` input parameter."},"type":{"type":"intrinsic","name":"string"}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","comment":{"shortText":"Object returned when file do not exist."},"children":[{"name":"exists","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"isDirectory","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"FileSystemAcceptedUploadHttpMethod","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"POST"},{"type":"literal","value":"PUT"},{"type":"literal","value":"PATCH"}]}},{"name":"FileSystemDownloadResult","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FileSystemHttpResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"md5","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Present if the `md5` option was truthy. Contains the MD5 hash of the file."},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","kind":1024,"kindString":"Property","comment":{"shortText":"A `file://` URI pointing to the file. This is the same as the `fileUri` input parameter."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"FileSystemHttpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","comment":{"shortText":"An object containing all the HTTP response header fields and their values for the download network request.\nThe keys and values of the object are the header names and values respectively."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"mimeType","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"The HTTP response status code for the download network request."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"FileSystemNetworkTaskProgressCallback","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter","type":{"type":"union","types":[{"type":"reference","name":"DownloadProgressData"},{"type":"reference","name":"UploadProgressData"}]}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"data","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"T"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"FileSystemRequestDirectoryPermissionsResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","comment":{"shortText":"If the permissions were not granted."},"children":[{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"literal","value":false}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","comment":{"shortText":"If the permissions were granted."},"children":[{"name":"directoryUri","kind":1024,"kindString":"Property","comment":{"shortText":"The [SAF URI](#saf-uri) to the user's selected directory. Available only if permissions were granted."},"type":{"type":"intrinsic","name":"string"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"literal","value":true}}]}}]}},{"name":"FileSystemUploadOptions","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"union","types":[{"type":"reference","name":"UploadOptionsBinary"},{"type":"reference","name":"UploadOptionsMultipart"}]},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"headers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An object containing all the HTTP header fields and their values for the upload network request.\nThe keys and values of the object are the header names and values respectively."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"httpMethod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The request method.","tags":[{"tag":"default","text":"FileSystemAcceptedUploadHttpMethod.POST\n"}]},"type":{"type":"reference","name":"FileSystemAcceptedUploadHttpMethod"}},{"name":"sessionType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A session type. Determines if tasks can be handled in the background. On Android, sessions always work in the background and you can't change it.","tags":[{"tag":"default","text":"FileSystemSessionType.BACKGROUND"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"FileSystemSessionType"}}]}}]}},{"name":"FileSystemUploadResult","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"FileSystemHttpResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"body","kind":1024,"kindString":"Property","comment":{"shortText":"The body of the server response."},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"InfoOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"md5","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to return the MD5 hash of the file.","tags":[{"tag":"default","text":"false\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"size","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Explicitly specify that the file size should be included. For example, skipping this can prevent downloading the file if it's stored in iCloud.\nThe size is always returned for `file://` locations."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MakeDirectoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"intermediates","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, don't throw an error if there is no file or directory at this URI.","tags":[{"tag":"default","text":"false\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"ProgressEvent","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"T","kind":131072,"kindString":"Type parameter"}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"data","kind":1024,"kindString":"Property","type":{"type":"reference","name":"T"}},{"name":"uuid","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ReadingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The encoding format to use when reading the file.","tags":[{"tag":"default","text":"EncodingType.UTF8\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"EncodingType"},{"type":"literal","value":"utf8"},{"type":"literal","value":"base64"}]}},{"name":"length","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional number of bytes to read. This option is only used when `encoding: FileSystem.EncodingType.Base64` and `position` is defined."},"type":{"type":"intrinsic","name":"number"}},{"name":"position","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Optional number of bytes to skip. This option is only used when `encoding: FileSystem.EncodingType.Base64` and `length` is defined."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"RelocatingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"from","kind":1024,"kindString":"Property","comment":{"shortText":"URI or [SAF](#saf-uri) URI to the asset, file, or directory. See [supported URI schemes](#supported-uri-schemes-1)."},"type":{"type":"intrinsic","name":"string"}},{"name":"to","kind":1024,"kindString":"Property","comment":{"shortText":"`file://` URI to the file or directory which should be its new location."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"UploadOptionsBinary","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Upload options when upload type is set to binary."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"uploadType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Upload type determines how the file will be sent to the server.\nValue will be `FileSystemUploadType.BINARY_CONTENT`."},"type":{"type":"reference","name":"FileSystemUploadType"}}]}}},{"name":"UploadOptionsMultipart","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Upload options when upload type is set to multipart."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"fieldName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The name of the field which will hold uploaded file. Defaults to the file name without an extension."},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The MIME type of the provided file. If not provided, the module will try to guess it based on the extension."},"type":{"type":"intrinsic","name":"string"}},{"name":"parameters","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional form properties. They will be located in the request body."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"qualifiedName":"Record","package":"typescript","name":"Record"}},{"name":"uploadType","kind":1024,"kindString":"Property","comment":{"shortText":"Upload type determines how the file will be sent to the server.\nValue will be `FileSystemUploadType.MULTIPART`."},"type":{"type":"reference","name":"FileSystemUploadType"}}]}}},{"name":"UploadProgressData","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"totalByteSent","kind":1024,"kindString":"Property","comment":{"shortText":"The total bytes sent by the upload operation."},"type":{"type":"intrinsic","name":"number"}},{"name":"totalBytesExpectedToSend","kind":1024,"kindString":"Property","comment":{"shortText":"The total bytes expected to be sent by the upload operation."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"WritingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The encoding format to use when writing the file.","tags":[{"tag":"default","text":"FileSystem.EncodingType.UTF8\n"}]},"type":{"type":"union","types":[{"type":"reference","name":"EncodingType"},{"type":"literal","value":"utf8"},{"type":"literal","value":"base64"}]}}]}}},{"name":"bundleDirectory","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"bundledAssets","kind":32,"kindString":"Variable","type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"cacheDirectory","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"`file://` URI pointing to the directory where temporary files used by this app will be stored.\nFiles stored here may be automatically deleted by the system when low on storage.\nExample uses are for downloaded or generated files that the app just needs for one-time usage."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"documentDirectory","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"`file://` URI pointing to the directory where user documents for this app will be stored.\nFiles stored here will remain until explicitly deleted by the app. Ends with a trailing `/`.\nExample uses are for files the user saves that they expect to see again."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"copyAsync","kind":64,"kindString":"Function","signatures":[{"name":"copyAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a copy of a file or directory. Directories are recursively copied with all of their contents.\nIt can be also used to copy content shared by other apps to local filesystem."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of move options represented by [`RelocatingOptions`](#relocatingoptions) type.\n"},"type":{"type":"reference","name":"RelocatingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createDownloadResumable","kind":64,"kindString":"Function","signatures":[{"name":"createDownloadResumable","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a `DownloadResumable` object which can start, pause, and resume a download of contents at a remote URI to a file in the app's file system.\n> Note: You need to call `downloadAsync()`, on a `DownloadResumable` instance to initiate the download.\nThe `DownloadResumable` object has a callback that provides download progress updates.\nDownloads can be resumed across app restarts by using `AsyncStorage` to store the `DownloadResumable.savable()` object for later retrieval.\nThe `savable` object contains the arguments required to initialize a new `DownloadResumable` object to resume the download after an app restart.\nThe directory for a local file uri must exist prior to calling this function."},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The remote URI to download from."},"type":{"type":"intrinsic","name":"string"}},{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The local URI of the file to download to. If there is no file at this URI, a new one is created.\nIf there is a file at this URI, its contents are replaced. The directory for the file must exist."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A map of download options represented by [`DownloadOptions`](#downloadoptions) type."},"type":{"type":"reference","name":"DownloadOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"This function is called on each data write to update the download progress.\n> **Note**: When the app has been moved to the background, this callback won't be fired until it's moved to the foreground."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DownloadProgressData"}],"name":"FileSystemNetworkTaskProgressCallback"}},{"name":"resumeData","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The string which allows the api to resume a paused download. This is set on the `DownloadResumable` object automatically when a download is paused.\nWhen initializing a new `DownloadResumable` this should be `null`.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"DownloadResumable"}}]},{"name":"createUploadTask","kind":64,"kindString":"Function","signatures":[{"name":"createUploadTask","kind":4096,"kindString":"Call signature","parameters":[{"name":"url","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"fileUri","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"FileSystemUploadOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UploadProgressData"}],"name":"FileSystemNetworkTaskProgressCallback"}}],"type":{"type":"reference","name":"UploadTask"}}]},{"name":"deleteAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete a file or directory. If the URI points to a directory, the directory and all its contents are recursively deleted."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` or [SAF](#saf-uri) URI to the file or directory."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of write options represented by [`DeletingOptions`](#deletingoptions) type.\n"},"type":{"type":"reference","name":"DeletingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"deleteLegacyDocumentDirectoryAndroid","kind":64,"kindString":"Function","signatures":[{"name":"deleteLegacyDocumentDirectoryAndroid","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"downloadAsync","kind":64,"kindString":"Function","signatures":[{"name":"downloadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Download the contents at a remote URI to a file in the app's file system. The directory for a local file uri must exist prior to calling this function.","returns":"Returns a Promise that resolves to a `FileSystemDownloadResult` object.\n","tags":[{"tag":"example","text":"\n```js\nFileSystem.downloadAsync(\n  'http://techslides.com/demos/sample-videos/small.mp4',\n  FileSystem.documentDirectory + 'small.mp4'\n)\n  .then(({ uri }) => {\n    console.log('Finished downloading to ', uri);\n  })\n  .catch(error => {\n    console.error(error);\n  });\n```"}]},"parameters":[{"name":"uri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The remote URI to download from."},"type":{"type":"intrinsic","name":"string"}},{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The local URI of the file to download to. If there is no file at this URI, a new one is created.\nIf there is a file at this URI, its contents are replaced. The directory for the file must exist."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of download options represented by [`DownloadOptions`](#downloadoptions) type."},"type":{"type":"reference","name":"DownloadOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FileSystemDownloadResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getContentUriAsync","kind":64,"kindString":"Function","signatures":[{"name":"getContentUriAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Takes a `file://` URI and converts it into content URI (`content://`) so that it can be accessed by other applications outside of Expo.","returns":"Returns a Promise that resolves to a `string` containing a `content://` URI pointing to the file.\nThe URI is the same as the `fileUri` input parameter but in a different format.\n","tags":[{"tag":"example","text":"\n```js\nFileSystem.getContentUriAsync(uri).then(cUri => {\n  console.log(cUri);\n  IntentLauncher.startActivityAsync('android.intent.action.VIEW', {\n    data: cUri,\n    flags: 1,\n  });\n});\n```"}]},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The local URI of the file. If there is no file at this URI, an exception will be thrown."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getFreeDiskStorageAsync","kind":64,"kindString":"Function","signatures":[{"name":"getFreeDiskStorageAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the available internal disk storage size, in bytes. This returns the free space on the data partition that hosts all of the internal storage for all apps on the device.","returns":"Returns a Promise that resolves to the number of bytes available on the internal disk, or JavaScript's [`MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\nif the capacity is greater than 2<sup>53</sup> - 1 bytes.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getInfoAsync","kind":64,"kindString":"Function","signatures":[{"name":"getInfoAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get metadata information about a file, directory or external content/asset.","returns":"A Promise that resolves to a `FileInfo` object. If no item exists at this URI,\nthe returned Promise resolves to `FileInfo` object in form of `{ exists: false, isDirectory: false }`.\n"},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"URI to the file or directory. See [supported URI schemes](#supported-uri-schemes)."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of options represented by [`GetInfoAsyncOptions`](#getinfoasyncoptions) type."},"type":{"type":"reference","name":"InfoOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FileInfo"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getTotalDiskCapacityAsync","kind":64,"kindString":"Function","signatures":[{"name":"getTotalDiskCapacityAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets total internal disk storage size, in bytes. This is the total capacity of the data partition that hosts all the internal storage for all apps on the device.","returns":"Returns a Promise that resolves to a number that specifies the total internal disk storage capacity in bytes, or JavaScript's [`MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\nif the capacity is greater than 2<sup>53</sup> - 1 bytes.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"makeDirectoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"makeDirectoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new empty directory."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` URI to the new directory to create."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of create directory options represented by [`MakeDirectoryOptions`](#makedirectoryoptions) type.\n"},"type":{"type":"reference","name":"MakeDirectoryOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"moveAsync","kind":64,"kindString":"Function","signatures":[{"name":"moveAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Move a file or directory to a new location."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of move options represented by [`RelocatingOptions`](#relocatingoptions) type.\n"},"type":{"type":"reference","name":"RelocatingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"readAsStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"readAsStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Read the entire contents of a file as a string. Binary will be returned in raw format, you will need to append `data:image/png;base64,` to use it as Base64.","returns":"A Promise that resolves to a string containing the entire contents of the file.\n"},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` or [SAF](#saf-uri) URI to the file or directory."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of read options represented by [`ReadingOptions`](#readingoptions) type."},"type":{"type":"reference","name":"ReadingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"readDirectoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"readDirectoryAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Enumerate the contents of a directory.","returns":"A Promise that resolves to an array of strings, each containing the name of a file or directory contained in the directory at `fileUri`.\n"},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` URI to the directory."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"uploadAsync","kind":64,"kindString":"Function","signatures":[{"name":"uploadAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Upload the contents of the file pointed by `fileUri` to the remote url.","returns":"Returns a Promise that resolves to `FileSystemUploadResult` object.\n","tags":[{"tag":"example","text":"\n**Client**\n\n```js\nimport * as FileSystem from 'expo-file-system';\n\ntry {\n  const response = await FileSystem.uploadAsync(`http://192.168.0.1:1234/binary-upload`, fileUri, {\n    fieldName: 'file',\n    httpMethod: 'PATCH',\n    uploadType: FileSystem.FileSystemUploadType.BINARY_CONTENT,\n  });\n  console.log(JSON.stringify(response, null, 4));\n} catch (error) {\n  console.log(error);\n}\n```\n\n**Server**\n\nPlease refer to the \"[Server: Handling multipart requests](#server-handling-multipart-requests)\" example - there is code for a simple Node.js server."}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"The remote URL, where the file will be sent."},"type":{"type":"intrinsic","name":"string"}},{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"The local URI of the file to send. The file must exist."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of download options represented by [`FileSystemUploadOptions`](#filesystemuploadoptions) type."},"type":{"type":"reference","name":"FileSystemUploadOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"FileSystemUploadResult"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"writeAsStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"writeAsStringAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Write the entire contents of a file as a string."},"parameters":[{"name":"fileUri","kind":32768,"kindString":"Parameter","comment":{"shortText":"`file://` or [SAF](#saf-uri) URI to the file or directory.\n> Note: when you're using SAF URI the file needs to exist. You can't create a new file."},"type":{"type":"intrinsic","name":"string"}},{"name":"contents","kind":32768,"kindString":"Parameter","comment":{"shortText":"The string to replace the contents of the file with."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"A map of write options represented by [`WritingOptions`](#writingoptions) type.\n"},"type":{"type":"reference","name":"WritingOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}