// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`APISectionUtils.CommentTextBlock component basic comment 1`] = `
.emotion-0 {
  font-family: Inter-Regular,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  color: var(--expo-theme-text-default);
  margin-bottom: 16px;
}

<div>
  <p
    class="emotion-0"
    data-text="true"
  >
    This is the basic comment.
  </p>
</div>
`;

exports[`APISectionUtils.CommentTextBlock component basic inline comment 1`] = `
<div>
   - 
  <span>
    This is the basic comment.
  </span>
</div>
`;

exports[`APISectionUtils.CommentTextBlock component comment with example 1`] = `
.emotion-0 {
  font-family: Inter-Regular,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  color: var(--expo-theme-text-default);
  margin-bottom: 16px;
}

.emotion-1 {
  font-family: Inter-Regular,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  color: var(--expo-theme-text-default);
  margin-bottom: 16px;
  font-size: inherit;
  font-family: Inter-SemiBold;
}

.emotion-2 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-2:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-2 code {
  color: var(--expo-theme-link-default);
}

.emotion-3 {
  font-family: Menlo-Regular,Monaco,Consolas,'Liberation Mono','Courier New',monospace,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 400;
  font-size: 0.8125rem;
  line-height: 1.6153846;
  letter-spacing: -0.003rem;
  color: var(--expo-theme-text-default);
  white-space: pre-wrap;
  display: inline;
  padding: 2px 4px;
  max-width: 100%;
  word-wrap: break-word;
  background-color: var(--expo-theme-background-secondary);
  border: 1px solid var(--expo-theme-border-default);
  border-radius: 4px;
  vertical-align: middle;
  overflow-x: auto;
}

a .emotion-3 {
  border-color: var(--expo-theme-border-default);
}

h2 .emotion-3,
h3 .emotion-3,
h4 .emotion-3 {
  position: relative;
  top: -2px;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid var(--expo-theme-border-default);
  border-bottom: 1px solid var(--expo-theme-border-default);
  margin: 24px -20px 16px;
  padding: 10px 20px;
  background-color: var(--expo-theme-background-secondary);
}

.emotion-4 h4 {
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  font-family: Inter-Medium;
  margin-bottom: 0;
  margin-top: 0;
  color: var(--expo-theme-text-secondary);
}

.emotion-5 {
  font-family: Inter-SemiBold,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 500;
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  color: var(--expo-theme-text-default);
  margin-top: 24px;
  margin-bottom: 4px;
}

.emotion-5 code {
  font-family: Inter-SemiBold,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 500;
  font-size: 1rem;
  line-height: 1.625;
  letter-spacing: -0.011rem;
  color: var(--expo-theme-text-default);
  font-family: Menlo-Regular;
  padding: 1px 6px;
  border-radius: 4px;
}

.emotion-6 {
  border: 1px solid var(--expo-theme-border-default);
  padding: 16px;
  margin: 16px 0;
  white-space: pre;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  background-color: var(--expo-theme-background-secondary);
  line-height: 120%;
  border-radius: 4px;
}

.emotion-7 {
  font-family: Menlo-Regular,Monaco,Consolas,'Liberation Mono','Courier New',monospace,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol','Noto Color Emoji';
  font-weight: 400;
  font-size: 0.8125rem;
  line-height: 1.6153846;
  letter-spacing: -0.003rem;
  color: var(--expo-theme-text-default);
  white-space: inherit;
  padding: 0;
  margin: 0;
}

.emotion-7 .code-annotation {
  -webkit-transition: 200ms ease all;
  transition: 200ms ease all;
  transition-property: text-shadow,opacity;
  text-shadow: var(--expo-theme-highlight-emphasis) 0 0 10px,var(--expo-theme-highlight-emphasis) 0 0 10px,var(--expo-theme-highlight-emphasis) 0 0 10px,var(--expo-theme-highlight-emphasis) 0 0 10px;
}

.emotion-7 .code-annotation.with-tooltip:hover {
  cursor: pointer;
  -webkit-animation: none;
  animation: none;
  opacity: 0.8;
}

.emotion-7 .code-hidden {
  display: none;
}

.emotion-7 .code-placeholder {
  opacity: 0.5;
}

<div>
  <p
    class="emotion-0"
    data-text="true"
  >
    <strong
      class="emotion-1"
    >
      Android only.
    </strong>
     Gets the referrer URL of the installed app with the 
    <a
      class="emotion-2"
      href="https://developer.android.com/google/play/installreferrer"
      rel="noopener noreferrer"
    >
      <code
        class="inline emotion-3"
      >
        Install Referrer API
      </code>
    </a>
    
from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.
  </p>
  <div
    class="emotion-4"
  >
    <h4
      class="emotion-5"
      data-heading="true"
    >
      Example
    </h4>
  </div>
  <pre>
    <pre
      class="emotion-6"
      data-text="true"
    >
      <code
        class="emotion-7"
      >
        <span
          class="token keyword"
        >
          await
        </span>
         
        <span
          class="token maybe-class-name"
        >
          Application
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token method function property-access"
        >
          getInstallReferrerAsync
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        

        <span
          class="token comment"
        >
          // "utm_source=google-play&utm_medium=organic"
        </span>
        

      </code>
    </pre>
  </pre>
</div>
`;

exports[`APISectionUtils.CommentTextBlock component no comment 1`] = `<div />`;

exports[`APISectionUtils.resolveTypeName Promise 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    rel="noopener noreferrer"
  >
    Promise
  </a>
  &lt;
  <span>
    void
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName Promise with custom type 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

.emotion-1 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-1 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    rel="noopener noreferrer"
  >
    Promise
  </a>
  &lt;
  <span>
    <a
      class="emotion-1"
      href="/#appleauthenticationcredential"
    >
      AppleAuthenticationCredential
    </a>
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName Record 1`] = `
<div>
  Record
  &lt;
  <span>
    string
    , 
  </span>
  <span>
    any
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName Record with union 1`] = `
<div>
  Record
  &lt;
  <span>
    string
    , 
  </span>
  <span>
    <span>
      number
       | 
    </span>
    <span>
      boolean
       | 
    </span>
    <span>
      string
    </span>
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName alternative generic object notation 1`] = `
<div>
  { [column]: any }
</div>
`;

exports[`APISectionUtils.resolveTypeName custom type 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="/#speechsynthesisevent"
  >
    SpeechSynthesisEvent
  </a>
</div>
`;

exports[`APISectionUtils.resolveTypeName custom type array 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="/#appleauthenticationscope"
  >
    AppleAuthenticationScope
    []
  </a>
</div>
`;

exports[`APISectionUtils.resolveTypeName custom type non-linkable array 1`] = `
<div>
  T[]
</div>
`;

exports[`APISectionUtils.resolveTypeName custom type with single pick 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

.emotion-1 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-1 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"
    rel="noopener noreferrer"
  >
    Pick
  </a>
  &lt;
  <span>
    <a
      class="emotion-1"
      href="/#fontresource"
    >
      FontResource
    </a>
    , 
  </span>
  <span>
    'display'
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName function 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  () =&gt;
   
  <span>
    void
     | 
  </span>
  <span>
    <a
      class="emotion-0"
      href="/#speecheventcallback"
    >
      SpeechEventCallback
    </a>
  </span>
</div>
`;

exports[`APISectionUtils.resolveTypeName function with arguments 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

.emotion-1 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-1 code {
  color: var(--expo-theme-link-default);
}

<div>
  (
  <span>
    error
    : 
    <a
      class="emotion-0"
      href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"
      rel="noopener noreferrer"
    >
      Error
    </a>
  </span>
  ) 
  =&gt;
   
  <span>
    void
     | 
  </span>
  <span>
    <a
      class="emotion-1"
      href="/#speecheventcallback"
    >
      SpeechEventCallback
    </a>
  </span>
</div>
`;

exports[`APISectionUtils.resolveTypeName function with non-linkable custom type 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  (
  <span>
    error
    : 
    <a
      class="emotion-0"
      href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"
      rel="noopener noreferrer"
    >
      Error
    </a>
  </span>
  ) 
  =&gt;
   
  void
</div>
`;

exports[`APISectionUtils.resolveTypeName generic type 1`] = `
<div>
  string
</div>
`;

exports[`APISectionUtils.resolveTypeName generic type 2`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="/#pagedinfo"
  >
    PagedInfo
  </a>
  &lt;
  <span>
    <a
      class="emotion-0"
      href="/#asset"
    >
      Asset
    </a>
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName generic type in Promise 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

.emotion-1 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-1 code {
  color: var(--expo-theme-link-default);
}

<div>
  <a
    class="emotion-0"
    href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"
    rel="noopener noreferrer"
  >
    Promise
  </a>
  &lt;
  <span>
    <a
      class="emotion-1"
      href="/#pagedinfo"
    >
      PagedInfo
    </a>
    &lt;
    <span>
      <a
        class="emotion-1"
        href="/#asset"
      >
        Asset
      </a>
    </span>
    &gt;
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName object reflection 1`] = `
<div>
  {

  <span>
      
    target: 
    number
    , 
    

  </span>
  <span>
      
    value: 
    boolean
    

  </span>
  }
</div>
`;

exports[`APISectionUtils.resolveTypeName props with multiple omits 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

.emotion-1 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-1 code {
  color: var(--expo-theme-link-default);
}

<div>
  StyleProp
  &lt;
  <span>
    <a
      class="emotion-0"
      href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"
      rel="noopener noreferrer"
    >
      Omit
    </a>
    &lt;
    <span>
      <a
        class="emotion-1"
        href="/versions/latest/react-native/view-style-props"
      >
        ViewStyle
      </a>
      , 
    </span>
    <span>
      <span>
        'backgroundColor'
         | 
      </span>
      <span>
        'borderRadius'
      </span>
    </span>
    &gt;
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName query type 1`] = `
<div>
  React.ComponentProps
  &lt;
  <span>
    View
  </span>
  &gt;
</div>
`;

exports[`APISectionUtils.resolveTypeName tuple type 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  [
  <span>
    <a
      class="emotion-0"
      href="/#sortbykey"
    >
      SortByKey
    </a>
    , 
  </span>
  <span>
    boolean
  </span>
  ]
</div>
`;

exports[`APISectionUtils.resolveTypeName union 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <span>
    <a
      class="emotion-0"
      href="/#speecheventcallback"
    >
      SpeechEventCallback
    </a>
     | 
  </span>
  <span>
    null
  </span>
</div>
`;

exports[`APISectionUtils.resolveTypeName union of array values 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  (
  <span>
    <a
      class="emotion-0"
      href="/#resultseterror"
    >
      ResultSetError
    </a>
     | 
  </span>
  <span>
    <a
      class="emotion-0"
      href="/#resultset"
    >
      ResultSet
    </a>
  </span>
  )
  []
</div>
`;

exports[`APISectionUtils.resolveTypeName union with array 1`] = `
<div>
  <span>
    number[]
     | 
  </span>
  <span>
    null
  </span>
</div>
`;

exports[`APISectionUtils.resolveTypeName union with custom type and array 1`] = `
.emotion-0 {
  color: var(--expo-theme-link-default);
  font-size: inherit;
}

.emotion-0:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 code {
  color: var(--expo-theme-link-default);
}

<div>
  <span>
    <a
      class="emotion-0"
      href="/#assetref"
    >
      AssetRef
      []
    </a>
     | 
  </span>
  <span>
    <a
      class="emotion-0"
      href="/#assetref"
    >
      AssetRef
    </a>
  </span>
</div>
`;

exports[`APISectionUtils.resolveTypeName void 1`] = `
<div>
  void
</div>
`;
