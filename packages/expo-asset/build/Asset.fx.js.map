{"version":3,"file":"Asset.fx.js","sourceRoot":"","sources":["../src/Asset.fx.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,0BAA0B,EAAE,MAAM,sBAAsB,CAAC;AAElE,+FAA+F;AAC/F,0BAA0B,CAAC,QAAQ,CAAC,EAAE;IACpC,IAAI;QACF,2FAA2F;QAC3F,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE;YAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjD,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,QAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5E;aAAM;YACL,OAAO,QAAQ,CAAC,YAAY,EAAE,CAAC;SAChC;KACF;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,QAAQ,CAAC,YAAY,EAAE,CAAC;KAChC;AACH,CAAC,CAAC,CAAC","sourcesContent":["import { Asset } from './Asset';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nsetCustomSourceTransformer(resolver => {\n  try {\n    // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n    if (resolver.asset.fileHashes) {\n      const asset = Asset.fromMetadata(resolver.asset);\n      return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n    } else {\n      return resolver.defaultAsset();\n    }\n  } catch (e) {\n    return resolver.defaultAsset();\n  }\n});\n"]}