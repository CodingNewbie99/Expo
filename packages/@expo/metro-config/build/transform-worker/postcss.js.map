{"version":3,"file":"postcss.js","names":["_jsonFile","data","_interopRequireDefault","require","_fs","_path","_resolveFrom","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","CONFIG_FILE_NAME","debug","requireUncachedPostcssFile","moduleId","resolve","error","Error","message","resolvePostcssConfig","projectRoot","jsConfigPath","path","join","fs","existsSync","jsonConfigPath","JsonFile","read","json5","transformPostCssModule","props","inputConfig","options","src","processWithPostcssInputConfigAsync","filename","plugins","processOptions","parsePostcssConfigAsync","config","resourcePath","postcss","Promise","then","processor","results","process","content","file","inputPlugins","map","parser","stringifier","syntax","factory","pluginFactory","item","plugin","loadPlugin","from","to","tryRequireThenImport","inline","requireError","importESM","Function","code","loadedPlugin","resolveFrom","keys","length","listOfPlugins","Map","Array","isArray","name","undefined","delete","objectPlugins","entries"],"sources":["../../src/transform-worker/postcss.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n * Copyright JS Foundation and other contributors\n *\n * https://github.com/webpack-contrib/postcss-loader/\n */\nimport JsonFile from '@expo/json-file';\nimport fs from 'fs';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport type { BabelTransformerArgs } from 'metro-babel-transformer';\nimport type { AcceptedPlugin, ProcessOptions } from 'postcss';\nconst CONFIG_FILE_NAME = 'postcss.config';\n\nconst debug = require('debug')('expo:metro:transformer:postcss');\n\ntype PostCSSInputConfig = {\n  plugins?: any[];\n  from?: string;\n  to?: string;\n  syntax?: string;\n  map?: boolean;\n  parser?: string;\n  stringifier?: string;\n};\n\nfunction requireUncachedPostcssFile(moduleId: string) {\n  try {\n    delete require.cache[require.resolve(moduleId)];\n  } catch {}\n  try {\n    return require(moduleId);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      error.message = `Cannot load postcss config file ${moduleId}: ${error.message}`;\n    }\n    throw error;\n  }\n}\n\nfunction resolvePostcssConfig(projectRoot: string): PostCSSInputConfig | null {\n  // TODO: Maybe support platform-specific postcss config files in the future.\n  const jsConfigPath = path.join(projectRoot, CONFIG_FILE_NAME + '.js');\n\n  if (fs.existsSync(jsConfigPath)) {\n    debug('load file:', jsConfigPath);\n    return requireUncachedPostcssFile(jsConfigPath);\n  }\n\n  const jsonConfigPath = path.join(projectRoot, CONFIG_FILE_NAME + '.json');\n\n  if (fs.existsSync(jsonConfigPath)) {\n    debug('load file:', jsonConfigPath);\n    return JsonFile.read(jsonConfigPath, { json5: true });\n  }\n\n  return null;\n}\n\nexport async function transformPostCssModule(\n  props: BabelTransformerArgs\n): Promise<BabelTransformerArgs> {\n  const inputConfig = resolvePostcssConfig(props.options.projectRoot);\n\n  if (!inputConfig) {\n    return props;\n  }\n\n  props.src = await processWithPostcssInputConfigAsync(props.options.projectRoot, {\n    inputConfig,\n    src: props.src,\n    filename: props.filename,\n  });\n\n  return props;\n}\n\nasync function processWithPostcssInputConfigAsync(\n  projectRoot: string,\n  { src, filename, inputConfig }: { src: string; filename: string; inputConfig: PostCSSInputConfig }\n) {\n  const { plugins, processOptions } = await parsePostcssConfigAsync(projectRoot, {\n    config: inputConfig,\n    resourcePath: filename,\n  });\n\n  debug('options:', processOptions);\n  debug('plugins:', plugins);\n\n  // TODO: Surely this can be cached...\n  const postcss = await import('postcss');\n  const processor = postcss.default(plugins);\n  const results = await processor.process(src, processOptions);\n\n  return results.content;\n}\n\nasync function parsePostcssConfigAsync(\n  projectRoot: string,\n  {\n    resourcePath: file,\n    config: { plugins: inputPlugins, map, parser, stringifier, syntax, ...config } = {},\n  }: {\n    resourcePath: string;\n    config: PostCSSInputConfig;\n  }\n): Promise<{ plugins: AcceptedPlugin[]; processOptions: ProcessOptions }> {\n  const factory = pluginFactory();\n\n  factory(inputPlugins);\n  // delete config.plugins;\n\n  const plugins = [...factory()].map((item) => {\n    const [plugin, options] = item;\n\n    if (typeof plugin === 'string') {\n      return loadPlugin(projectRoot, plugin, options, file);\n    }\n\n    return plugin;\n  });\n\n  if (config.from) {\n    config.from = path.resolve(projectRoot, config.from);\n  }\n\n  if (config.to) {\n    config.to = path.resolve(projectRoot, config.to);\n  }\n\n  const processOptions: Partial<ProcessOptions> = {\n    from: file,\n    to: file,\n    map: false,\n  };\n\n  if (typeof parser === 'string') {\n    try {\n      processOptions.parser = await tryRequireThenImport(parser);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        throw new Error(\n          `Loading PostCSS \"${parser}\" parser failed: ${error.message}\\n\\n(@${file})`\n        );\n      }\n      throw error;\n    }\n  }\n\n  if (typeof stringifier === 'string') {\n    try {\n      processOptions.stringifier = await tryRequireThenImport(stringifier);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        throw new Error(\n          `Loading PostCSS \"${stringifier}\" stringifier failed: ${error.message}\\n\\n(@${file})`\n        );\n      }\n      throw error;\n    }\n  }\n\n  if (typeof syntax === 'string') {\n    try {\n      processOptions.syntax = await tryRequireThenImport(syntax);\n    } catch (error: any) {\n      throw new Error(`Loading PostCSS \"${syntax}\" syntax failed: ${error.message}\\n\\n(@${file})`);\n    }\n  }\n\n  if (map === true) {\n    // https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n    processOptions.map = { inline: true };\n  }\n\n  return { plugins, processOptions };\n}\n\nasync function tryRequireThenImport<TModule>(moduleId: string): Promise<TModule> {\n  try {\n    return require(moduleId);\n  } catch (requireError: any) {\n    let importESM;\n    try {\n      // eslint-disable-next-line no-new-func\n      importESM = new Function('id', 'return import(id);');\n    } catch {\n      importESM = null;\n    }\n\n    if (requireError?.code === 'ERR_REQUIRE_ESM' && importESM) {\n      return (await importESM(moduleId)).default;\n    }\n\n    throw requireError;\n  }\n}\n\nfunction loadPlugin(projectRoot: string, plugin: string, options: unknown, file: string) {\n  try {\n    debug('load plugin:', plugin);\n\n    // e.g. `tailwindcss`\n    let loadedPlugin = require(resolveFrom(projectRoot, plugin));\n\n    if (loadedPlugin.default) {\n      loadedPlugin = loadedPlugin.default;\n    }\n\n    if (!options || !Object.keys(options).length) {\n      return loadedPlugin;\n    }\n\n    return loadedPlugin(options);\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      throw new Error(`Loading PostCSS \"${plugin}\" plugin failed: ${error.message}\\n\\n(@${file})`);\n    }\n    throw error;\n  }\n}\n\nfunction pluginFactory() {\n  const listOfPlugins = new Map<string, any>();\n\n  return (plugins?: any) => {\n    if (typeof plugins === 'undefined') {\n      return listOfPlugins;\n    }\n\n    if (Array.isArray(plugins)) {\n      for (const plugin of plugins) {\n        if (Array.isArray(plugin)) {\n          const [name, options] = plugin;\n\n          listOfPlugins.set(name, options);\n        } else if (plugin && typeof plugin === 'function') {\n          listOfPlugins.set(plugin, undefined);\n        } else if (\n          plugin &&\n          Object.keys(plugin).length === 1 &&\n          (typeof plugin[Object.keys(plugin)[0]] === 'object' ||\n            typeof plugin[Object.keys(plugin)[0]] === 'boolean') &&\n          plugin[Object.keys(plugin)[0]] !== null\n        ) {\n          const [name] = Object.keys(plugin);\n          const options = plugin[name];\n\n          if (options === false) {\n            listOfPlugins.delete(name);\n          } else {\n            listOfPlugins.set(name, options);\n          }\n        } else if (plugin) {\n          listOfPlugins.set(plugin, undefined);\n        }\n      }\n    } else {\n      const objectPlugins = Object.entries(plugins);\n\n      for (const [name, options] of objectPlugins) {\n        if (options === false) {\n          listOfPlugins.delete(name);\n        } else {\n          listOfPlugins.set(name, options);\n        }\n      }\n    }\n\n    return listOfPlugins;\n  };\n}\n"],"mappings":"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"}