{"version":3,"file":"ExpoMetroConfig.js","names":["_config","data","require","_paths","_chalk","_interopRequireDefault","_metroCache","_metroConfig","_path","_resolveFrom","_customizeFrame","_env","_getModulesPaths","_getWatchFolders","_rewriteRequestUrl","_postcss","obj","__esModule","default","getProjectBabelConfigFile","projectRoot","resolveFrom","silent","getAssetPlugins","hashAssetFilesPath","Error","hasWarnedAboutExotic","getDefaultConfig","options","isExotic","mode","env","EXPO_USE_EXOTIC","console","log","chalk","gray","bold","reactNativePath","path","dirname","babelPresetFbjsPath","process","EXPO_METRO_CACHE_KEY_VERSION","String","version","sourceExtsConfig","isTS","isReact","isModern","sourceExts","getBareExtensions","isCSSEnabled","push","babelConfigPath","isCustomBabelConfigDefined","resolverMainFields","pkg","getPackageJson","watchFolders","getWatchFolders","nodeModulesPaths","getModulesPaths","EXPO_DEBUG","join","reporter","metroDefaultValues","getDefaultMetroConfig","getDefaultValues","mergeConfig","resolver","platforms","assetExts","concat","filter","assetExt","includes","serializer","getModulesRunBeforeMainModule","resolve","getPolyfills","server","rewriteRequestUrl","getRewriteRequestUrl","port","Number","RCT_METRO_PORT","unstable_serverRoot","getServerRoot","symbolicator","customizeFrame","getDefaultCustomizeFrame","transformerPath","transformer","postcssHash","getPostcssConfigHash","browserslistHash","browserslist","stableHash","JSON","stringify","toString","unstable_allowRequireContext","allowOptionalDependencies","babelTransformerPath","assetRegistryPath","assetPlugins","loadAsync","metroOptions","defaultConfig","loadConfig","cwd","exports"],"sources":["../src/ExpoMetroConfig.ts"],"sourcesContent":["// Copyright 2023-present 650 Industries (Expo). All rights reserved.\nimport { getPackageJson } from '@expo/config';\nimport { getBareExtensions } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport { Reporter } from 'metro';\n// @ts-expect-error: incorrectly typed\nimport { stableHash } from 'metro-cache';\nimport {\n  ConfigT as MetroConfig,\n  getDefaultConfig as getDefaultMetroConfig,\n  InputConfigT,\n  loadConfig,\n  mergeConfig,\n} from 'metro-config';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { getDefaultCustomizeFrame, INTERNAL_CALLSITES_REGEX } from './customizeFrame';\nimport { env } from './env';\nimport { getModulesPaths, getServerRoot } from './getModulesPaths';\nimport { getWatchFolders } from './getWatchFolders';\nimport { getRewriteRequestUrl } from './rewriteRequestUrl';\nimport { getPostcssConfigHash } from './transform-worker/postcss';\n\nexport interface LoadOptions {\n  config?: string;\n  maxWorkers?: number;\n  port?: number;\n  reporter?: Reporter;\n  resetCache?: boolean;\n}\n\nexport interface DefaultConfigOptions {\n  mode?: 'exotic';\n  /**\n   * **Experimental:** Enable CSS support for Metro web, and shim on native.\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change, and native support for CSS Modules may be added in the future during a non-major SDK release.\n   */\n  isCSSEnabled?: boolean;\n}\n\nfunction getProjectBabelConfigFile(projectRoot: string): string | undefined {\n  return (\n    resolveFrom.silent(projectRoot, './babel.config.js') ||\n    resolveFrom.silent(projectRoot, './.babelrc') ||\n    resolveFrom.silent(projectRoot, './.babelrc.js')\n  );\n}\n\nfunction getAssetPlugins(projectRoot: string): string[] {\n  const hashAssetFilesPath = resolveFrom.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n\n  if (!hashAssetFilesPath) {\n    throw new Error(`The required package \\`expo-asset\\` cannot be found`);\n  }\n\n  return [hashAssetFilesPath];\n}\n\nlet hasWarnedAboutExotic = false;\n\nexport function getDefaultConfig(\n  projectRoot: string,\n  options: DefaultConfigOptions = {}\n): InputConfigT {\n  const isExotic = options.mode === 'exotic' || env.EXPO_USE_EXOTIC;\n\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(\n      chalk.gray(\n        `\\u203A Unstable feature ${chalk.bold`EXPO_USE_EXOTIC`} is enabled. Bundling may not work as expected, and is subject to breaking changes.`\n      )\n    );\n  }\n\n  const reactNativePath = path.dirname(resolveFrom(projectRoot, 'react-native/package.json'));\n\n  try {\n    // Set the `EXPO_METRO_CACHE_KEY_VERSION` variable for use in the custom babel transformer.\n    // This hack is used because there doesn't appear to be anyway to resolve\n    // `babel-preset-fbjs` relative to the project root later (in `metro-expo-babel-transformer`).\n    const babelPresetFbjsPath = resolveFrom(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch {\n    // noop -- falls back to a hardcoded value.\n  }\n\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts = getBareExtensions([], sourceExtsConfig);\n\n  if (options.isCSSEnabled) {\n    sourceExts.push('css');\n  }\n\n  if (isExotic) {\n    // Add support for cjs (without platform extensions).\n    sourceExts.push('cjs');\n  }\n\n  const babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  const isCustomBabelConfigDefined = !!babelConfigPath;\n\n  const resolverMainFields: string[] = [];\n\n  // Disable `react-native` in exotic mode, since library authors\n  // use it to ship raw application code to the project.\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n\n  const pkg = getPackageJson(projectRoot);\n  const watchFolders = getWatchFolders(projectRoot);\n  // TODO: nodeModulesPaths does not work with the new Node.js package.json exports API, this causes packages like uuid to fail. Disabling for now.\n  const nodeModulesPaths = getModulesPaths(projectRoot);\n  if (env.EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require('../package.json').version}`);\n    } catch {}\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Babel config: ${babelConfigPath || 'babel-preset-expo (default)'}`);\n    console.log(`- Resolver Fields: ${resolverMainFields.join(', ')}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Exotic: ${isExotic}`);\n    console.log();\n  }\n  const {\n    // Remove the default reporter which metro always resolves to be the react-native-community/cli reporter.\n    // This prints a giant React logo which is less accessible to users on smaller terminals.\n    reporter,\n    ...metroDefaultValues\n  } = getDefaultMetroConfig.getDefaultValues(projectRoot);\n\n  // Merge in the default config from Metro here, even though loadConfig uses it as defaults.\n  // This is a convenience for getDefaultConfig use in metro.config.js, e.g. to modify assetExts.\n  return mergeConfig(metroDefaultValues, {\n    watchFolders,\n    resolver: {\n      resolverMainFields,\n      platforms: ['ios', 'android'],\n      assetExts: metroDefaultValues.resolver.assetExts\n        .concat(\n          // Add default support for `expo-image` file types.\n          ['heic', 'avif']\n        )\n        .filter((assetExt) => !sourceExts.includes(assetExt)),\n      sourceExts,\n      nodeModulesPaths,\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: () => [\n        require.resolve(path.join(reactNativePath, 'Libraries/Core/InitializeCore')),\n        // TODO: Bacon: load Expo side-effects\n      ],\n      getPolyfills: () => require(path.join(reactNativePath, 'rn-get-polyfills'))(),\n    },\n    server: {\n      rewriteRequestUrl: getRewriteRequestUrl(projectRoot),\n      port: Number(env.RCT_METRO_PORT) || 8081,\n      // NOTE(EvanBacon): Moves the server root down to the monorepo root.\n      // This enables proper monorepo support for web.\n      unstable_serverRoot: getServerRoot(projectRoot),\n    },\n    symbolicator: {\n      customizeFrame: getDefaultCustomizeFrame(),\n    },\n    transformerPath: options.isCSSEnabled\n      ? // Custom worker that adds CSS support for Metro web.\n        require.resolve('./transform-worker/transform-worker')\n      : metroDefaultValues.transformerPath,\n\n    transformer: {\n      // Custom: These are passed to `getCacheKey`\n      // @ts-expect-error: not on type.\n      postcssHash: getPostcssConfigHash(projectRoot),\n      browserslistHash: pkg.browserslist\n        ? stableHash(JSON.stringify(pkg.browserslist)).toString('hex')\n        : null,\n\n      // `require.context` support\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic\n        ? require.resolve('./transformer/metro-expo-exotic-babel-transformer')\n        : isCustomBabelConfigDefined\n        ? // If the user defined a babel config file in their project,\n          // then use the default transformer.\n          // Try to use the project copy before falling back on the global version\n          resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer')\n        : // Otherwise, use a custom transformer that uses `babel-preset-expo` by default for projects.\n          require.resolve('./transformer/metro-expo-babel-transformer'),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot),\n    },\n  });\n}\n\nexport async function loadAsync(\n  projectRoot: string,\n  { reporter, ...metroOptions }: LoadOptions = {}\n): Promise<MetroConfig> {\n  let defaultConfig = getDefaultConfig(projectRoot);\n  if (reporter) {\n    defaultConfig = { ...defaultConfig, reporter };\n  }\n  return await loadConfig({ cwd: projectRoot, projectRoot, ...metroOptions }, defaultConfig);\n}\n\n// re-export for use in config files.\nexport { MetroConfig, INTERNAL_CALLSITES_REGEX };\n\n// re-export for legacy cases.\nexport const EXPO_DEBUG = env.EXPO_DEBUG;\n"],"mappings":"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"}