{"version":3,"file":"ExpoMetroConfig.js","names":["EXPO_DEBUG","boolish","EXPO_USE_EXOTIC","INTERNAL_CALLSITES_REGEX","RegExp","join","isUrl","value","URL","getProjectBabelConfigFile","projectRoot","resolveFrom","silent","getAssetPlugins","assetPlugins","hashAssetFilesPath","push","hasWarnedAboutExotic","getDefaultConfig","options","isExotic","mode","console","log","chalk","gray","bold","MetroConfig","importMetroConfigFromProject","reactNativePath","path","dirname","babelPresetFbjsPath","process","env","EXPO_METRO_CACHE_KEY_VERSION","String","require","version","sourceExtsConfig","isTS","isReact","isModern","sourceExts","getBareExtensions","babelConfigPath","isCustomBabelConfigDefined","resolverMainFields","watchFolders","getWatchFolders","nodeModulesPaths","getModulesPaths","reporter","metroDefaultValues","getDefaultValues","mergeConfig","resolver","platforms","assetExts","filter","assetExt","includes","serializer","getModulesRunBeforeMainModule","resolve","getPolyfills","server","port","Number","RCT_METRO_PORT","symbolicator","customizeFrame","frame","file","lineNumber","column","collapse","Boolean","test","methodName","match","transformer","unstable_allowRequireContext","allowOptionalDependencies","babelTransformerPath","assetRegistryPath","loadAsync","metroOptions","defaultConfig","loadConfig","cwd"],"sources":["../src/ExpoMetroConfig.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nimport { getBareExtensions } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport { boolish } from 'getenv';\nimport { Reporter } from 'metro';\nimport type MetroConfig from 'metro-config';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { URL } from 'url';\n\nimport { getModulesPaths } from './getModulesPaths';\nimport { getWatchFolders } from './getWatchFolders';\nimport { importMetroConfigFromProject } from './importMetroFromProject';\n\nexport const EXPO_DEBUG = boolish('EXPO_DEBUG', false);\nconst EXPO_USE_EXOTIC = boolish('EXPO_USE_EXOTIC', false);\n\n// Import only the types here, the values will be imported from the project, at runtime.\nexport const INTERNAL_CALLSITES_REGEX = new RegExp(\n  [\n    '/Libraries/Renderer/implementations/.+\\\\.js$',\n    '/Libraries/BatchedBridge/MessageQueue\\\\.js$',\n    '/Libraries/YellowBox/.+\\\\.js$',\n    '/Libraries/LogBox/.+\\\\.js$',\n    '/Libraries/Core/Timers/.+\\\\.js$',\n    'node_modules/react-devtools-core/.+\\\\.js$',\n    'node_modules/react-refresh/.+\\\\.js$',\n    'node_modules/scheduler/.+\\\\.js$',\n    // Metro replaces `require()` with a different method,\n    // we want to omit this method from the stack trace.\n    // This is akin to most React tooling.\n    '/metro/.*/polyfills/require.js$',\n    // Hide frames related to a fast refresh.\n    '/metro/.*/lib/bundle-modules/.+\\\\.js$',\n    'node_modules/react-native/Libraries/Utilities/HMRClient.js$',\n    'node_modules/eventemitter3/index.js',\n    'node_modules/event-target-shim/dist/.+\\\\.js$',\n    // Ignore the log forwarder used in the expo package.\n    '/expo/build/logs/RemoteConsole.js$',\n    // Improve errors thrown by invariant (ex: `Invariant Violation: \"main\" has not been registered`).\n    'node_modules/invariant/.+\\\\.js$',\n    // Remove babel runtime additions\n    'node_modules/regenerator-runtime/.+\\\\.js$',\n    // Remove react native setImmediate ponyfill\n    'node_modules/promise/setimmediate/.+\\\\.js$',\n    // Babel helpers that implement language features\n    'node_modules/@babel/runtime/.+\\\\.js$',\n    // Hide Hermes internal bytecode\n    '/InternalBytecode/InternalBytecode\\\\.js$',\n    // Block native code invocations\n    `\\\\[native code\\\\]`,\n  ].join('|')\n);\n\nfunction isUrl(value: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport interface DefaultConfigOptions {\n  mode?: 'exotic';\n}\n\nfunction getProjectBabelConfigFile(projectRoot: string): string | undefined {\n  return (\n    resolveFrom.silent(projectRoot, './babel.config.js') ||\n    resolveFrom.silent(projectRoot, './.babelrc') ||\n    resolveFrom.silent(projectRoot, './.babelrc.js')\n  );\n}\n\nfunction getAssetPlugins(projectRoot: string): string[] {\n  const assetPlugins: string[] = [];\n\n  let hashAssetFilesPath;\n  try {\n    hashAssetFilesPath = resolveFrom(projectRoot, 'expo-asset/tools/hashAssetFiles');\n  } catch {\n    // TODO: we should warn/throw an error if the user has expo-updates installed but does not\n    // have hashAssetFiles available, or if the user is in managed workflow and does not have\n    // hashAssetFiles available. but in a bare app w/o expo-updates, just using dev-client,\n    // it is not needed\n  }\n\n  if (hashAssetFilesPath) {\n    assetPlugins.push(hashAssetFilesPath);\n  }\n\n  return assetPlugins;\n}\n\nlet hasWarnedAboutExotic = false;\n\nexport function getDefaultConfig(\n  projectRoot: string,\n  options: DefaultConfigOptions = {}\n): MetroConfig.InputConfigT {\n  const isExotic = options.mode === 'exotic' || EXPO_USE_EXOTIC;\n\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(\n      chalk.gray(\n        `\\u203A Unstable feature ${chalk.bold`EXPO_USE_EXOTIC`} is enabled. Bundling may not work as expected, and is subject to breaking changes.`\n      )\n    );\n  }\n  const MetroConfig = importMetroConfigFromProject(projectRoot);\n\n  const reactNativePath = path.dirname(resolveFrom(projectRoot, 'react-native/package.json'));\n\n  try {\n    // Set the `EXPO_METRO_CACHE_KEY_VERSION` variable for use in the custom babel transformer.\n    // This hack is used because there doesn't appear to be anyway to resolve\n    // `babel-preset-fbjs` relative to the project root later (in `metro-expo-babel-transformer`).\n    const babelPresetFbjsPath = resolveFrom(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch {\n    // noop -- falls back to a hardcoded value.\n  }\n\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts = getBareExtensions([], sourceExtsConfig);\n\n  if (isExotic) {\n    // Add support for cjs (without platform extensions).\n    sourceExts.push('cjs');\n  }\n\n  const babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  const isCustomBabelConfigDefined = !!babelConfigPath;\n\n  const resolverMainFields: string[] = [];\n\n  // Disable `react-native` in exotic mode, since library authors\n  // use it to ship raw application code to the project.\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n\n  const watchFolders = getWatchFolders(projectRoot);\n  // TODO: nodeModulesPaths does not work with the new Node.js package.json exports API, this causes packages like uuid to fail. Disabling for now.\n  const nodeModulesPaths = getModulesPaths(projectRoot);\n  if (EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require('../package.json').version}`);\n    } catch {}\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Babel config: ${babelConfigPath || 'babel-preset-expo (default)'}`);\n    console.log(`- Resolver Fields: ${resolverMainFields.join(', ')}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Exotic: ${isExotic}`);\n    console.log();\n  }\n  const {\n    // Remove the default reporter which metro always resolves to be the react-native-community/cli reporter.\n    // This prints a giant React logo which is less accessible to users on smaller terminals.\n    reporter,\n    ...metroDefaultValues\n  } = MetroConfig.getDefaultConfig.getDefaultValues(projectRoot);\n\n  // Merge in the default config from Metro here, even though loadConfig uses it as defaults.\n  // This is a convenience for getDefaultConfig use in metro.config.js, e.g. to modify assetExts.\n  return MetroConfig.mergeConfig(metroDefaultValues, {\n    watchFolders,\n    resolver: {\n      resolverMainFields,\n      platforms: ['ios', 'android', 'native', 'testing'],\n      assetExts: metroDefaultValues.resolver.assetExts.filter(\n        (assetExt) => !sourceExts.includes(assetExt)\n      ),\n      sourceExts,\n      nodeModulesPaths,\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: () => [\n        require.resolve(path.join(reactNativePath, 'Libraries/Core/InitializeCore')),\n        // TODO: Bacon: load Expo side-effects\n      ],\n      getPolyfills: () => require(path.join(reactNativePath, 'rn-get-polyfills'))(),\n    },\n    server: {\n      port: Number(process.env.RCT_METRO_PORT) || 8081,\n    },\n    symbolicator: {\n      customizeFrame: (frame) => {\n        if (frame.file && isUrl(frame.file)) {\n          return {\n            ...frame,\n            // HACK: This prevents Metro from attempting to read the invalid file URL it sent us.\n            lineNumber: null,\n            column: null,\n            // This prevents the invalid frame from being shown by default.\n            collapse: true,\n          };\n        }\n        let collapse = Boolean(frame.file && INTERNAL_CALLSITES_REGEX.test(frame.file));\n\n        if (!collapse) {\n          // This represents the first frame of the stacktrace.\n          // Often this looks like: `__r(0);`.\n          // The URL will also be unactionable in the app and therefore not very useful to the developer.\n          if (\n            frame.column === 3 &&\n            frame.methodName === 'global code' &&\n            frame.file?.match(/^https?:\\/\\//g)\n          ) {\n            collapse = true;\n          }\n        }\n\n        return { ...(frame || {}), collapse };\n      },\n    },\n    transformer: {\n      // `require.context` support\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic\n        ? require.resolve('./transformer/metro-expo-exotic-babel-transformer')\n        : isCustomBabelConfigDefined\n        ? // If the user defined a babel config file in their project,\n          // then use the default transformer.\n          // Try to use the project copy before falling back on the global version\n          resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer')\n        : // Otherwise, use a custom transformer that uses `babel-preset-expo` by default for projects.\n          require.resolve('./transformer/metro-expo-babel-transformer'),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot),\n    },\n  });\n}\n\nexport interface LoadOptions {\n  config?: string;\n  maxWorkers?: number;\n  port?: number;\n  reporter?: Reporter;\n  resetCache?: boolean;\n}\n\nexport async function loadAsync(\n  projectRoot: string,\n  { reporter, ...metroOptions }: LoadOptions = {}\n): Promise<MetroConfig.ConfigT> {\n  let defaultConfig = getDefaultConfig(projectRoot);\n  if (reporter) {\n    defaultConfig = { ...defaultConfig, reporter };\n  }\n  const MetroConfig = importMetroConfigFromProject(projectRoot);\n  return await MetroConfig.loadConfig(\n    { cwd: projectRoot, projectRoot, ...metroOptions },\n    defaultConfig\n  );\n}\n"],"mappings":"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"}