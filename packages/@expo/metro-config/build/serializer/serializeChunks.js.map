{"version":3,"file":"serializeChunks.js","names":["_assert","data","_interopRequireDefault","require","_getAssets","_sourceMapString","_bundleToString","_path","_pathToRegexp","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","graphToSerialAssetsAsync","config","includeMaps","props","_config$serializer","_assetPlugins","_getPlatformOption","entryFile","preModules","graph","options","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","_chunks","Set","test","pathToRegExp","map","chunkSettings","gatherChunks","jsAssets","serializeChunksAsync","serializer","includeSourceMaps","metroAssets","getMetroAssets","assetPlugins","transformer","platform","getPlatformOption","publicPath","artifacts","assets","Chunk","constructor","name","entries","isAsync","deps","getPlatform","assert","transformOptions","getFilename","dev","getExportPathForDependencyWithOptions","serverRoot","serializeToCode","serializerConfig","_serializerConfig$get","_serializerConfig$get2","fileName","path","basename","jsSplitBundle","baseJSBundleWithDependencies","values","runBeforeMainModule","getModulesRunBeforeMainModule","relative","runModule","modulesOnly","size","sourceMapUrl","baseUrl","getBaseUrlOption","splitChunks","getSplitChunksOption","bundleToString","code","serializeToAssetsAsync","jsCode","relativeEntry","outputFile","jsAsset","filename","originFilename","type","metadata","requires","requiredChunks","chunk","source","modules","getSortedModules","createModuleId","module","startsWith","_this$options$serverR","sourceMap","sourceMapString","push","isHermesEnabled","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","replace","sourcemap","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","filter","chunkIdForModules","sort","join","chunks","entryModules","existingChunks","find","includes","length","entryChunk","preChunk","add","includeModule","entryModule","dependency","asyncType","absolutePath","get","has","Promise","all","a","b"],"sources":["../../src/serializer/serializeChunks.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport {\n  AssetData,\n  MetroConfig,\n  MixedOutput,\n  Module,\n  ReadOnlyGraph,\n  SerializerOptions,\n} from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { ConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport pathToRegExp from 'path-to-regexp';\n\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport {\n  baseJSBundleWithDependencies,\n  getBaseUrlOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\n// import baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\n// import { toFixture } from './__tests__/fixtures/toFixture';\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  { includeMaps }: { includeMaps: boolean },\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  // Create chunks for splitting.\n  const _chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegExp(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(_chunks, chunkSettings, preModules, graph, options, false));\n\n  // console.log('Chunks:');\n  // console.log(inspect([..._chunks], { depth: 3, colors: true }));\n  // Optimize the chunks\n  // dedupeChunks(_chunks);\n\n  const jsAssets = await serializeChunksAsync(_chunks, config.serializer ?? {}, {\n    includeSourceMaps: includeMaps,\n  });\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer!.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath: config.transformer!.publicPath!,\n  })) as AssetData[];\n\n  return { artifacts: [...jsAssets, ...cssDeps], assets: metroAssets };\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: SerializerOptions<MixedOutput>,\n    public isAsync: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  getFilename() {\n    // TODO: Content hash is needed\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  serializeToCode(serializerConfig: Partial<SerializerConfigT>) {\n    const entryFile = this.name;\n    const fileName = path.basename(entryFile, '.js');\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule:\n          serializerConfig?.getModulesRunBeforeMainModule?.(\n            path.relative(this.options.projectRoot, entryFile)\n          ) ?? [],\n        // searchParams.set('modulesOnly', 'true');\n        // searchParams.set('runModule', 'false');\n\n        // TODO: Test cases when an async module has global side-effects that should be run.\n        // This should be fine as those side-effects would be defined in the module itself, which would be executed upon loading.\n        runModule: !this.isAsync,\n        modulesOnly: this.preModules.size === 0,\n        platform: this.getPlatform(),\n        sourceMapUrl: `${fileName}.map`,\n        baseUrl: getBaseUrlOption(this.graph, this.options),\n        splitChunks: getSplitChunksOption(this.graph, this.options),\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    { includeSourceMaps }: { includeSourceMaps?: boolean }\n  ): Promise<SerialAsset[]> {\n    const jsCode = this.serializeToCode(serializerConfig);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n    const outputFile = this.getFilename();\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) => chunk.getFilename()),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        ...this.options,\n      });\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (this.isHermesEnabled()) {\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: jsAsset.source,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        assets[1].source = hermesBundleOutput.sourcemap;\n      }\n    }\n\n    return assets;\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.getPlatform() !== 'web' &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // if (!entryModules.length) {\n  //   throw new Error('Entry module not found in graph: ' + entryFile);\n  // }\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    if (graph.transformOptions.platform === 'web' && !isAsync) {\n      // On web, add a new required chunk that will be included in the HTML.\n      const preChunk = new Chunk(\n        chunkIdForModules([...preModules]),\n        [...preModules],\n        graph,\n        options\n      );\n      // for (const module of preModules.values()) {\n      //   preChunk.deps.add(module);\n      // }\n      chunks.add(preChunk);\n      entryChunk.requiredChunks.add(preChunk);\n    } else {\n      // On native, use the preModules in insert code in the entry chunk.\n      for (const module of preModules.values()) {\n        entryChunk.preModules.add(module);\n      }\n    }\n  }\n\n  const splitChunks = getSplitChunksOption(graph, options);\n  chunks.add(entryChunk);\n\n  // entryChunk.deps.add(entryModule);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegExp(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  { includeSourceMaps }: { includeSourceMaps: boolean }\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  await Promise.all(\n    [...chunks].map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, { includeSourceMaps }))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n"],"mappings":"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"}