{"version":3,"file":"serializeChunks.js","names":["_assert","data","_interopRequireDefault","require","_getAssets","_sourceMapString","_bundleToString","_path","_pathToRegexp","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","graphToSerialAssetsAsync","config","serializeChunkOptions","props","_config$serializer","_assetPlugins","_getPlatformOption","entryFile","preModules","graph","options","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","chunks","Set","test","pathToRegExp","map","chunkSettings","gatherChunks","jsAssets","serializeChunksAsync","serializer","metroAssets","getMetroAssets","assetPlugins","transformer","platform","getPlatformOption","publicPath","artifacts","assets","Chunk","constructor","name","entries","isAsync","deps","getPlatform","assert","transformOptions","getFilename","src","dev","getExportPathForDependencyWithOptions","serverRoot","getFilenameForConfig","serializerConfig","serializeToCodeWithTemplates","_serializerConfig$get","_serializerConfig$get2","fileName","path","basename","jsSplitBundle","baseJSBundleWithDependencies","values","runBeforeMainModule","getModulesRunBeforeMainModule","relative","runModule","modulesOnly","size","sourceMapUrl","baseUrl","getBaseUrlOption","splitChunks","getSplitChunksOption","skipWrapping","computedAsyncModulePaths","bundleToString","code","hasAbsolutePath","absolutePath","some","module","getComputedPathsForAsyncDependencies","includeAsyncPaths","forEach","dependency","asyncType","chunkContainingModule","find","chunk","moduleIdName","serializeToCode","serializeToAssetsAsync","includeSourceMaps","includeBytecode","jsCode","relativeEntry","outputFile","jsAsset","filename","originFilename","type","metadata","requires","requiredChunks","source","modules","getSortedModules","createModuleId","startsWith","_this$options$serverR","sourceMap","sourceMapString","push","isHermesEnabled","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","replace","sourcemap","supportsBytecode","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","filter","chunkIdForModules","sort","join","entryModules","existingChunks","includes","length","entryChunk","add","includeModule","entryModule","get","has","chunksArray","Promise","all","a","b"],"sources":["../../src/serializer/serializeChunks.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport {\n  AssetData,\n  MetroConfig,\n  MixedOutput,\n  Module,\n  ReadOnlyGraph,\n  SerializerOptions,\n} from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { ConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport pathToRegExp from 'path-to-regexp';\n\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport {\n  ExpoSerializerOptions,\n  baseJSBundleWithDependencies,\n  getBaseUrlOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport type SerializeChunkOptions = {\n  includeSourceMaps: boolean;\n  includeBytecode: boolean;\n};\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  serializeChunkOptions: SerializeChunkOptions,\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  // Create chunks for splitting.\n  const chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegExp(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(chunks, chunkSettings, preModules, graph, options, false));\n\n  const jsAssets = await serializeChunksAsync(\n    chunks,\n    config.serializer ?? {},\n    serializeChunkOptions\n  );\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer!.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath: config.transformer!.publicPath!,\n  })) as AssetData[];\n\n  return { artifacts: [...jsAssets, ...cssDeps], assets: metroAssets };\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: ExpoSerializerOptions,\n    public isAsync: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  private getFilename(src: string) {\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          src,\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  private getFilenameForConfig(serializerConfig: Partial<SerializerConfigT>) {\n    return this.getFilename(\n      this.options.dev ? '' : this.serializeToCodeWithTemplates(serializerConfig)\n    );\n  }\n\n  private serializeToCodeWithTemplates(\n    serializerConfig: Partial<SerializerConfigT>,\n    options: Partial<Parameters<typeof baseJSBundleWithDependencies>[3]> = {}\n  ) {\n    const entryFile = this.name;\n    const fileName = path.basename(entryFile, '.js');\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule:\n          serializerConfig?.getModulesRunBeforeMainModule?.(\n            path.relative(this.options.projectRoot, entryFile)\n          ) ?? [],\n        runModule: !this.isAsync,\n        modulesOnly: this.preModules.size === 0,\n        platform: this.getPlatform(),\n        sourceMapUrl: `${fileName}.map`,\n        baseUrl: getBaseUrlOption(this.graph, this.options),\n        splitChunks: getSplitChunksOption(this.graph, this.options),\n        skipWrapping: true,\n        computedAsyncModulePaths: null,\n        ...options,\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  hasAbsolutePath(absolutePath: string): boolean {\n    return [...this.deps].some((module) => module.path === absolutePath);\n  }\n\n  private getComputedPathsForAsyncDependencies(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[]\n  ) {\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    // Only calculate production paths when all chunks are being exported.\n    if (this.options.includeAsyncPaths) {\n      return null;\n    }\n    const computedAsyncModulePaths: Record<string, string> = {};\n\n    this.deps.forEach((module) => {\n      module.dependencies.forEach((dependency) => {\n        if (dependency.data.data.asyncType === 'async') {\n          const chunkContainingModule = chunks.find((chunk) =>\n            chunk.hasAbsolutePath(dependency.absolutePath)\n          );\n          assert(\n            chunkContainingModule,\n            'Chunk containing module not found: ' + dependency.absolutePath\n          );\n          const moduleIdName = chunkContainingModule.getFilenameForConfig(serializerConfig);\n          computedAsyncModulePaths![dependency.absolutePath] = (baseUrl ?? '/') + moduleIdName;\n        }\n      });\n    });\n    return computedAsyncModulePaths;\n  }\n\n  private serializeToCode(serializerConfig: Partial<SerializerConfigT>, chunks: Chunk[]) {\n    return this.serializeToCodeWithTemplates(serializerConfig, {\n      skipWrapping: false,\n      computedAsyncModulePaths: this.getComputedPathsForAsyncDependencies(serializerConfig, chunks),\n    });\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[],\n    {\n      includeSourceMaps,\n      includeBytecode,\n    }: { includeSourceMaps?: boolean; includeBytecode?: boolean }\n  ): Promise<SerialAsset[]> {\n    const jsCode = this.serializeToCode(serializerConfig, chunks);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n    const outputFile = this.getFilenameForConfig(\n      // Create hash without wrapping to prevent it changing when the wrapping changes.\n      serializerConfig\n    );\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) =>\n          chunk.getFilenameForConfig(serializerConfig)\n        ),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        ...this.options,\n      });\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (includeBytecode && this.isHermesEnabled()) {\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: jsAsset.source,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        assets[1].source = hermesBundleOutput.sourcemap;\n      }\n    }\n\n    return assets;\n  }\n\n  private supportsBytecode() {\n    return this.getPlatform() !== 'web';\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.supportsBytecode() &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    // On native, use the preModules in insert code in the entry chunk.\n    for (const module of preModules.values()) {\n      entryChunk.preModules.add(module);\n    }\n  }\n\n  chunks.add(entryChunk);\n\n  const splitChunks = getSplitChunksOption(graph, options);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegExp(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  { includeSourceMaps, includeBytecode }: SerializeChunkOptions\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  const chunksArray = [...chunks.values()];\n  await Promise.all(\n    chunksArray.map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, chunksArray, {\n          includeSourceMaps,\n          includeBytecode,\n        }))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n"],"mappings":";;;;;;AAMA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AASA,SAAAG,WAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,UAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,iBAAA;EAAA,MAAAJ,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAE,gBAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,gBAAA;EAAA,MAAAL,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAG,eAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAM,MAAA;EAAA,MAAAN,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAI,KAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,cAAA;EAAA,MAAAP,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAK,aAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAQ,cAAA;EAAA,MAAAR,IAAA,GAAAE,OAAA;EAAAM,aAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,YAAA;EAAA,MAAAT,IAAA,GAAAE,OAAA;EAAAO,WAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAU,cAAA;EAAA,MAAAV,IAAA,GAAAE,OAAA;EAAAQ,aAAA,YAAAA,CAAA;IAAA,OAAAV,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAOA,SAAAW,YAAA;EAAA,MAAAX,IAAA,GAAAE,OAAA;EAAAS,WAAA,YAAAA,CAAA;IAAA,OAAAX,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAkD,SAAAC,uBAAAW,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,gBAAAH,GAAA,EAAAI,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAJ,GAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAR,GAAA,EAAAI,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAX,GAAA,CAAAI,GAAA,IAAAC,KAAA,WAAAL,GAAA;AAAA,SAAAM,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAiB3C,eAAeU,wBAAwBA,CAC5CC,MAAmB,EACnBC,qBAA4C,EAC5C,GAAGC,KAA2B,EACqC;EAAA,IAAAC,kBAAA,EAAAC,aAAA,EAAAC,kBAAA;EACnE,MAAM,CAACC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,CAAC,GAAGP,KAAK;EAErD,MAAMQ,OAAO,GAAG,IAAAC,gCAAkB,EAAcH,KAAK,CAACI,YAAY,EAAE;IAClEC,WAAW,EAAEJ,OAAO,CAACI,WAAW;IAChCC,mBAAmB,EAAEL,OAAO,CAACK;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAMC,MAAM,GAAG,IAAIC,GAAG,EAAS;EAE/B,CACE;IACEC,IAAI,EAAE,IAAAC,uBAAY,EAACZ,SAAS;EAC9B,CAAC,CACF,CAACa,GAAG,CAAEC,aAAa,IAAKC,YAAY,CAACN,MAAM,EAAEK,aAAa,EAAEb,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAE,KAAK,CAAC,CAAC;EAEhG,MAAMa,QAAQ,GAAG,MAAMC,oBAAoB,CACzCR,MAAM,GAAAZ,kBAAA,GACNH,MAAM,CAACwB,UAAU,cAAArB,kBAAA,cAAAA,kBAAA,GAAI,CAAC,CAAC,EACvBF,qBAAqB,CACtB;;EAED;EACA;EACA,MAAMwB,WAAW,GAAI,MAAM,IAAAC,oBAAc,EAAClB,KAAK,CAACI,YAAY,EAAE;IAC5DE,mBAAmB,EAAEL,OAAO,CAACK,mBAAmB;IAChDa,YAAY,GAAAvB,aAAA,GAAEJ,MAAM,CAAC4B,WAAW,CAAED,YAAY,cAAAvB,aAAA,cAAAA,aAAA,GAAI,EAAE;IACpDyB,QAAQ,GAAAxB,kBAAA,GAAE,IAAAyB,iCAAiB,EAACtB,KAAK,EAAEC,OAAO,CAAC,cAAAJ,kBAAA,cAAAA,kBAAA,GAAI,KAAK;IACpDQ,WAAW,EAAEJ,OAAO,CAACI,WAAW;IAAE;IAClCkB,UAAU,EAAE/B,MAAM,CAAC4B,WAAW,CAAEG;EAClC,CAAC,CAAiB;EAElB,OAAO;IAAEC,SAAS,EAAE,CAAC,GAAGV,QAAQ,EAAE,GAAGZ,OAAO,CAAC;IAAEuB,MAAM,EAAER;EAAY,CAAC;AACtE;AAEA,MAAMS,KAAK,CAAC;EAIV;EACA;;EAGAC,WAAWA,CACFC,IAAY,EACZC,OAA8B,EAC9B7B,KAAiC,EACjCC,OAA8B,EAC9B6B,OAAgB,GAAG,KAAK,EAC/B;IAAA,KALOF,IAAY,GAAZA,IAAY;IAAA,KACZC,OAA8B,GAA9BA,OAA8B;IAAA,KAC9B7B,KAAiC,GAAjCA,KAAiC;IAAA,KACjCC,OAA8B,GAA9BA,OAA8B;IAAA,KAC9B6B,OAAgB,GAAhBA,OAAgB;IAAA7D,eAAA,eAZE,IAAIuC,GAAG,EAAE;IAAAvC,eAAA,qBACH,IAAIuC,GAAG,EAAE;IAAAvC,eAAA,yBAIN,IAAIuC,GAAG,EAAE;IAS3C,IAAI,CAACuB,IAAI,GAAG,IAAIvB,GAAG,CAACqB,OAAO,CAAC;EAC9B;EAEQG,WAAWA,CAAA,EAAG;IACpB,IAAAC,iBAAM,EACJ,IAAI,CAACjC,KAAK,CAACkC,gBAAgB,CAACb,QAAQ,EACpC,wDAAwD,CACzD;IACD,OAAO,IAAI,CAACrB,KAAK,CAACkC,gBAAgB,CAACb,QAAQ;EAC7C;EAEQc,WAAWA,CAACC,GAAW,EAAE;IAC/B,OAAO,IAAI,CAACnC,OAAO,CAACoC,GAAG,GACnB,IAAI,CAACT,IAAI,GACT,IAAAU,mDAAqC,EAAC,IAAI,CAACV,IAAI,EAAE;MAC/CP,QAAQ,EAAE,IAAI,CAACW,WAAW,EAAE;MAC5BI,GAAG;MACHG,UAAU,EAAE,IAAI,CAACtC,OAAO,CAACsC;IAC3B,CAAC,CAAC;EACR;EAEQC,oBAAoBA,CAACC,gBAA4C,EAAE;IACzE,OAAO,IAAI,CAACN,WAAW,CACrB,IAAI,CAAClC,OAAO,CAACoC,GAAG,GAAG,EAAE,GAAG,IAAI,CAACK,4BAA4B,CAACD,gBAAgB,CAAC,CAC5E;EACH;EAEQC,4BAA4BA,CAClCD,gBAA4C,EAC5CxC,OAAoE,GAAG,CAAC,CAAC,EACzE;IAAA,IAAA0C,qBAAA,EAAAC,sBAAA;IACA,MAAM9C,SAAS,GAAG,IAAI,CAAC8B,IAAI;IAC3B,MAAMiB,QAAQ,GAAGC,eAAI,CAACC,QAAQ,CAACjD,SAAS,EAAE,KAAK,CAAC;IAEhD,MAAMkD,aAAa,GAAG,IAAAC,4CAA4B,EAChDnD,SAAS,EACT,CAAC,GAAG,IAAI,CAACC,UAAU,CAACmD,MAAM,EAAE,CAAC,EAC7B,CAAC,GAAG,IAAI,CAACnB,IAAI,CAAC,EACd;MACE,GAAG,IAAI,CAAC9B,OAAO;MACfkD,mBAAmB,GAAAR,qBAAA,GACjBF,gBAAgB,aAAhBA,gBAAgB,wBAAAG,sBAAA,GAAhBH,gBAAgB,CAAEW,6BAA6B,cAAAR,sBAAA,uBAA/CA,sBAAA,CAAAxD,IAAA,CAAAqD,gBAAgB,EACdK,eAAI,CAACO,QAAQ,CAAC,IAAI,CAACpD,OAAO,CAACI,WAAW,EAAEP,SAAS,CAAC,CACnD,cAAA6C,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MACTW,SAAS,EAAE,CAAC,IAAI,CAACxB,OAAO;MACxByB,WAAW,EAAE,IAAI,CAACxD,UAAU,CAACyD,IAAI,KAAK,CAAC;MACvCnC,QAAQ,EAAE,IAAI,CAACW,WAAW,EAAE;MAC5ByB,YAAY,EAAG,GAAEZ,QAAS,MAAK;MAC/Ba,OAAO,EAAE,IAAAC,gCAAgB,EAAC,IAAI,CAAC3D,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC;MACnD2D,WAAW,EAAE,IAAAC,oCAAoB,EAAC,IAAI,CAAC7D,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC;MAC3D6D,YAAY,EAAE,IAAI;MAClBC,wBAAwB,EAAE,IAAI;MAC9B,GAAG9D;IACL,CAAC,CACF;IAED,OAAO,IAAA+D,yBAAc,EAAChB,aAAa,CAAC,CAACiB,IAAI;EAC3C;EAEAC,eAAeA,CAACC,YAAoB,EAAW;IAC7C,OAAO,CAAC,GAAG,IAAI,CAACpC,IAAI,CAAC,CAACqC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACvB,IAAI,KAAKqB,YAAY,CAAC;EACtE;EAEQG,oCAAoCA,CAC1C7B,gBAA4C,EAC5ClC,MAAe,EACf;IACA,MAAMmD,OAAO,GAAG,IAAAC,gCAAgB,EAAC,IAAI,CAAC3D,KAAK,EAAE,IAAI,CAACC,OAAO,CAAC;IAC1D;IACA,IAAI,IAAI,CAACA,OAAO,CAACsE,iBAAiB,EAAE;MAClC,OAAO,IAAI;IACb;IACA,MAAMR,wBAAgD,GAAG,CAAC,CAAC;IAE3D,IAAI,CAAChC,IAAI,CAACyC,OAAO,CAAEH,MAAM,IAAK;MAC5BA,MAAM,CAACjE,YAAY,CAACoE,OAAO,CAAEC,UAAU,IAAK;QAC1C,IAAIA,UAAU,CAACvH,IAAI,CAACA,IAAI,CAACwH,SAAS,KAAK,OAAO,EAAE;UAC9C,MAAMC,qBAAqB,GAAGpE,MAAM,CAACqE,IAAI,CAAEC,KAAK,IAC9CA,KAAK,CAACX,eAAe,CAACO,UAAU,CAACN,YAAY,CAAC,CAC/C;UACD,IAAAlC,iBAAM,EACJ0C,qBAAqB,EACrB,qCAAqC,GAAGF,UAAU,CAACN,YAAY,CAChE;UACD,MAAMW,YAAY,GAAGH,qBAAqB,CAACnC,oBAAoB,CAACC,gBAAgB,CAAC;UACjFsB,wBAAwB,CAAEU,UAAU,CAACN,YAAY,CAAC,GAAG,CAACT,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,GAAG,IAAIoB,YAAY;QACtF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOf,wBAAwB;EACjC;EAEQgB,eAAeA,CAACtC,gBAA4C,EAAElC,MAAe,EAAE;IACrF,OAAO,IAAI,CAACmC,4BAA4B,CAACD,gBAAgB,EAAE;MACzDqB,YAAY,EAAE,KAAK;MACnBC,wBAAwB,EAAE,IAAI,CAACO,oCAAoC,CAAC7B,gBAAgB,EAAElC,MAAM;IAC9F,CAAC,CAAC;EACJ;EAEA,MAAMyE,sBAAsBA,CAC1BvC,gBAA4C,EAC5ClC,MAAe,EACf;IACE0E,iBAAiB;IACjBC;EAC0D,CAAC,EACrC;IACxB,MAAMC,MAAM,GAAG,IAAI,CAACJ,eAAe,CAACtC,gBAAgB,EAAElC,MAAM,CAAC;IAE7D,MAAM6E,aAAa,GAAGtC,eAAI,CAACO,QAAQ,CAAC,IAAI,CAACpD,OAAO,CAACI,WAAW,EAAE,IAAI,CAACuB,IAAI,CAAC;IACxE,MAAMyD,UAAU,GAAG,IAAI,CAAC7C,oBAAoB;IAC1C;IACAC,gBAAgB,CACjB;IAED,MAAM6C,OAAoB,GAAG;MAC3BC,QAAQ,EAAEF,UAAU;MACpBG,cAAc,EAAEJ,aAAa;MAC7BK,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;QACR5D,OAAO,EAAE,IAAI,CAACA,OAAO;QACrB6D,QAAQ,EAAE,CAAC,GAAG,IAAI,CAACC,cAAc,CAAC1C,MAAM,EAAE,CAAC,CAACvC,GAAG,CAAEkE,KAAK,IACpDA,KAAK,CAACrC,oBAAoB,CAACC,gBAAgB,CAAC;MAEhD,CAAC;MACDoD,MAAM,EAAEV;IACV,CAAC;IAED,MAAM1D,MAAqB,GAAG,CAAC6D,OAAO,CAAC;IAEvC;IACE;IACAL,iBAAiB,IACjB,IAAI,CAAChF,OAAO,CAACwD,YAAY,EACzB;MACA,MAAMqC,OAAO,GAAG,CACd,GAAG,IAAI,CAAC/F,UAAU,EAClB,GAAGgG,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAChE,IAAI,CAAC,EAAE;QAClCiE,cAAc,EAAE,IAAI,CAAC/F,OAAO,CAAC+F;MAC/B,CAAC,CAAC,CACH,CAACrF,GAAG,CAAE0D,MAAM,IAAK;QAChB;;QAEA;QACA,IAAIA,MAAM,CAACvB,IAAI,CAACmD,UAAU,CAAC,GAAG,CAAC,EAAE;UAAA,IAAAC,qBAAA;UAC/B,OAAO;YACL,GAAG7B,MAAM;YACTvB,IAAI,EACF,GAAG,GAAGA,eAAI,CAACO,QAAQ,EAAA6C,qBAAA,GAAC,IAAI,CAACjG,OAAO,CAACsC,UAAU,cAAA2D,qBAAA,cAAAA,qBAAA,GAAI,IAAI,CAACjG,OAAO,CAACI,WAAW,EAAEgE,MAAM,CAACvB,IAAI;UACxF,CAAC;QACH;QACA,OAAOuB,MAAM;MACf,CAAC,CAAC;MAEF,MAAM8B,SAAS,GAAG,IAAAC,0BAAe,EAACN,OAAO,EAAE;QACzC,GAAG,IAAI,CAAC7F;MACV,CAAC,CAAC;MAEFwB,MAAM,CAAC4E,IAAI,CAAC;QACVd,QAAQ,EAAE,IAAI,CAACtF,OAAO,CAACoC,GAAG,GAAGiD,OAAO,CAACC,QAAQ,GAAG,MAAM,GAAGF,UAAU,GAAG,MAAM;QAC5EG,cAAc,EAAEF,OAAO,CAACE,cAAc;QACtCC,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE,CAAC,CAAC;QACZG,MAAM,EAAEM;MACV,CAAC,CAAC;IACJ;IAEA,IAAIjB,eAAe,IAAI,IAAI,CAACoB,eAAe,EAAE,EAAE;MAC7C;MACA,MAAMC,kBAAkB,GAAG,MAAM,IAAAC,sCAAsB,EAAC;QACtDjB,QAAQ,EAAE,IAAI,CAAC3D,IAAI;QACnBqC,IAAI,EAAEqB,OAAO,CAACO,MAAM;QACpBlF,GAAG,EAAEc,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAACoE,MAAM,GAAG,IAAI;QACxC;QACAY,MAAM,EAAE,IAAI,CAAE;MAChB,CAAC,CAAC;;MAEF,IAAIF,kBAAkB,CAACG,GAAG,EAAE;QAC1B;QACA;QACA;QACApB,OAAO,CAACO,MAAM,GAAGU,kBAAkB,CAACG,GAAG;QACvCpB,OAAO,CAACC,QAAQ,GAAGD,OAAO,CAACC,QAAQ,CAACoB,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;MAC9D;MACA,IAAIlF,MAAM,CAAC,CAAC,CAAC,IAAI8E,kBAAkB,CAACK,SAAS,EAAE;QAC7C;QACAnF,MAAM,CAAC,CAAC,CAAC,CAACoE,MAAM,GAAGU,kBAAkB,CAACK,SAAS;MACjD;IACF;IAEA,OAAOnF,MAAM;EACf;EAEQoF,gBAAgBA,CAAA,EAAG;IACzB,OAAO,IAAI,CAAC7E,WAAW,EAAE,KAAK,KAAK;EACrC;EAEAsE,eAAeA,CAAA,EAAG;IAAA,IAAAQ,qBAAA;IAChB;IACA;IACA;IACA,OACE,CAAC,IAAI,CAAC7G,OAAO,CAACoC,GAAG,IACjB,IAAI,CAACwE,gBAAgB,EAAE,IACvB,EAAAC,qBAAA,OAAI,CAAC9G,KAAK,CAACkC,gBAAgB,CAAC6E,sBAAsB,cAAAD,qBAAA,uBAAlDA,qBAAA,CAAoDE,MAAM,MAAK,QAAQ;EAE3E;AACF;AAEA,SAASC,+BAA+BA,CAACjH,KAAoB,EAAEkH,QAAuB,EAAE;EACtF,OAAO,CAAC,GAAGlH,KAAK,CAACI,YAAY,CAACyB,OAAO,EAAE,CAAC,CACrCsF,MAAM,CAAC,CAAC,CAACrE,IAAI,CAAC,KAAKoE,QAAQ,CAACzG,IAAI,CAACA,IAAI,CAACqC,IAAI,CAAC,CAAC,CAC5CnC,GAAG,CAAC,CAAC,GAAG0D,MAAM,CAAC,KAAKA,MAAM,CAAC;AAChC;AAEA,SAAS+C,iBAAiBA,CAACtB,OAAiB,EAAE;EAC5C,OAAOA,OAAO,CACXnF,GAAG,CAAE0D,MAAM,IAAKA,MAAM,CAACvB,IAAI,CAAC,CAC5BuE,IAAI,EAAE,CACNC,IAAI,CAAC,IAAI,CAAC;AACf;AAEA,SAASzG,YAAYA,CACnBN,MAAkB,EAClB2G,QAAuB,EACvBnH,UAA6B,EAC7BC,KAAoB,EACpBC,OAAuC,EACvC6B,OAAgB,GAAG,KAAK,EACZ;EACZ,IAAIyF,YAAY,GAAGN,+BAA+B,CAACjH,KAAK,EAAEkH,QAAQ,CAAC;EAEnE,MAAMM,cAAc,GAAG,CAAC,GAAGjH,MAAM,CAAC2C,MAAM,EAAE,CAAC;EAE3CqE,YAAY,GAAGA,YAAY,CAACJ,MAAM,CAAE9C,MAAM,IAAK;IAC7C,OAAO,CAACmD,cAAc,CAAC5C,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAChD,OAAO,CAAC4F,QAAQ,CAACpD,MAAM,CAAC,CAAC;EACxE,CAAC,CAAC;;EAEF;EACA,IAAI,CAACkD,YAAY,CAACG,MAAM,EAAE;IACxB,OAAOnH,MAAM;EACf;EAEA,MAAMoH,UAAU,GAAG,IAAIjG,KAAK,CAC1B0F,iBAAiB,CAACG,YAAY,CAAC,EAC/BA,YAAY,EACZvH,KAAK,EACLC,OAAO,EACP6B,OAAO,CACR;;EAED;EACA,IAAI/B,UAAU,CAAC2H,MAAM,EAAE;IACrB;IACA,KAAK,MAAMrD,MAAM,IAAItE,UAAU,CAACmD,MAAM,EAAE,EAAE;MACxCyE,UAAU,CAAC5H,UAAU,CAAC6H,GAAG,CAACvD,MAAM,CAAC;IACnC;EACF;EAEA9D,MAAM,CAACqH,GAAG,CAACD,UAAU,CAAC;EAEtB,MAAM/D,WAAW,GAAG,IAAAC,oCAAoB,EAAC7D,KAAK,EAAEC,OAAO,CAAC;EAExD,SAAS4H,aAAaA,CAACC,WAAgC,EAAE;IACvD,KAAK,MAAMrD,UAAU,IAAIqD,WAAW,CAAC1H,YAAY,CAAC8C,MAAM,EAAE,EAAE;MAC1D,IACEuB,UAAU,CAACvH,IAAI,CAACA,IAAI,CAACwH,SAAS,KAAK,OAAO;MAC1C;MACAd,WAAW,EACX;QACA/C,YAAY,CACVN,MAAM,EACN;UAAEE,IAAI,EAAE,IAAAC,uBAAY,EAAC+D,UAAU,CAACN,YAAY;QAAE,CAAC,EAC/C,EAAE,EACFnE,KAAK,EACLC,OAAO,EACP,IAAI,CACL;MACH,CAAC,MAAM;QACL,MAAMoE,MAAM,GAAGrE,KAAK,CAACI,YAAY,CAAC2H,GAAG,CAACtD,UAAU,CAACN,YAAY,CAAC;QAC9D,IAAIE,MAAM,EAAE;UACV;UACA,IAAI,CAACsD,UAAU,CAAC5F,IAAI,CAACiG,GAAG,CAAC3D,MAAM,CAAC,EAAE;YAChCsD,UAAU,CAAC5F,IAAI,CAAC6F,GAAG,CAACvD,MAAM,CAAC;YAC3BwD,aAAa,CAACxD,MAAM,CAAC;UACvB;QACF;MACF;IACF;EACF;EAEA,KAAK,MAAMyD,WAAW,IAAIP,YAAY,EAAE;IACtCM,aAAa,CAACC,WAAW,CAAC;EAC5B;EAEA,OAAOvH,MAAM;AACf;AAEA,eAAeQ,oBAAoBA,CACjCR,MAAkB,EAClBkC,gBAA4C,EAC5C;EAAEwC,iBAAiB;EAAEC;AAAuC,CAAC,EAC7D;EACA,MAAMpE,QAAuB,GAAG,EAAE;EAElC,MAAMmH,WAAW,GAAG,CAAC,GAAG1H,MAAM,CAAC2C,MAAM,EAAE,CAAC;EACxC,MAAMgF,OAAO,CAACC,GAAG,CACfF,WAAW,CAACtH,GAAG,CAAC,MAAOkE,KAAK,IAAK;IAC/B/D,QAAQ,CAACuF,IAAI,CACX,IAAI,MAAMxB,KAAK,CAACG,sBAAsB,CAACvC,gBAAgB,EAAEwF,WAAW,EAAE;MACpEhD,iBAAiB;MACjBC;IACF,CAAC,CAAC,CAAC,CACJ;EACH,CAAC,CAAC,CACH;EAED,OAAOpE,QAAQ;AACjB;AAEA,SAASiF,gBAAgBA,CACvBD,OAA8B,EAC9B;EACEE;AAGF,CAAC,EACuB;EACxB;EACA,KAAK,MAAM3B,MAAM,IAAIyB,OAAO,EAAE;IAC5BE,cAAc,CAAC3B,MAAM,CAACvB,IAAI,CAAC;EAC7B;EACA;EACA,OAAOgD,OAAO,CAACuB,IAAI,CACjB,CAACe,CAAc,EAAEC,CAAc,KAAKrC,cAAc,CAACoC,CAAC,CAACtF,IAAI,CAAC,GAAGkD,cAAc,CAACqC,CAAC,CAACvF,IAAI,CAAC,CACpF;AACH"}