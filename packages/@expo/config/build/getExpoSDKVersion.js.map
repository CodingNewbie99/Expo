{"version":3,"file":"getExpoSDKVersion.js","names":["getExpoSDKVersion","projectRoot","exp","sdkVersion","getExpoSDKVersionFromPackage","packageJsonPath","resolveFrom","silent","ConfigError","expoPackageJson","JsonFile","read","json5","version","packageVersion","majorVersion","split","shift"],"sources":["../src/getExpoSDKVersion.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport resolveFrom from 'resolve-from';\n\nimport { ExpoConfig } from './Config.types';\nimport { ConfigError } from './Errors';\n\n/**\n * Resolve the Expo SDK Version either from the input Expo config or from the installed\n * version of the `expo` package.\n */\nexport function getExpoSDKVersion(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'> = {}\n): string {\n  return exp?.sdkVersion ?? getExpoSDKVersionFromPackage(projectRoot);\n}\n\n/**\n * Resolve the Expo SDK Version either from the input Expo config or from the installed\n * version of the `expo` package.\n */\nfunction getExpoSDKVersionFromPackage(projectRoot: string): string {\n  const packageJsonPath = resolveFrom.silent(projectRoot, 'expo/package.json');\n  if (!packageJsonPath) {\n    throw new ConfigError(\n      `Cannot determine which native SDK version your project uses because the module \\`expo\\` is not installed. Please install it with \\`yarn add expo\\` and try again.`,\n      'MODULE_NOT_FOUND'\n    );\n  }\n  const expoPackageJson = JsonFile.read(packageJsonPath, { json5: true });\n  const { version: packageVersion } = expoPackageJson;\n\n  if (!(typeof packageVersion === 'string')) {\n    // This is technically impossible.\n    throw new ConfigError(\n      `Cannot determine which native SDK version your project uses because the module \\`expo\\` has an invalid package.json (missing \\`version\\` field). Try reinstalling node modules and trying again.`,\n      'MODULE_NOT_FOUND'\n    );\n  }\n\n  const majorVersion = packageVersion.split('.').shift();\n  return `${majorVersion}.0.0`;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CACLC,WADK,EAELC,GAAmC,GAAG,EAFjC,EAGG;EAAA;;EACR,0BAAOA,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEC,UAAZ,6DAA0BC,4BAA4B,CAACH,WAAD,CAAtD;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,4BAAT,CAAsCH,WAAtC,EAAmE;EACjE,MAAMI,eAAe,GAAGC,sBAAA,CAAYC,MAAZ,CAAmBN,WAAnB,EAAgC,mBAAhC,CAAxB;;EACA,IAAI,CAACI,eAAL,EAAsB;IACpB,MAAM,KAAIG,qBAAJ,EACH,mKADG,EAEJ,kBAFI,CAAN;EAID;;EACD,MAAMC,eAAe,GAAGC,mBAAA,CAASC,IAAT,CAAcN,eAAd,EAA+B;IAAEO,KAAK,EAAE;EAAT,CAA/B,CAAxB;;EACA,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAA8BL,eAApC;;EAEA,IAAI,EAAE,OAAOK,cAAP,KAA0B,QAA5B,CAAJ,EAA2C;IACzC;IACA,MAAM,KAAIN,qBAAJ,EACH,kMADG,EAEJ,kBAFI,CAAN;EAID;;EAED,MAAMO,YAAY,GAAGD,cAAc,CAACE,KAAf,CAAqB,GAArB,EAA0BC,KAA1B,EAArB;EACA,OAAQ,GAAEF,YAAa,MAAvB;AACD"}