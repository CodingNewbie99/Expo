{"version":3,"file":"apple-plugins.js","names":["_withMod","data","require","_errors","_obj","_warnings","createInfoPlistPlugin","applePlatform","action","name","withInfoPlistForPlatform","withInfoPlist","withUnknown","config","modResults","Object","defineProperty","value","exports","createInfoPlistPluginWithPropertyGuard","settings","existingProperty","expoPropertyGetter","get","expoConfigProperty","modRawConfig","infoPlist","infoPlistProperty","undefined","addWarningIOS","PluginError","createEntitlementsPlugin","withEntitlementsPlistForPlatform","withEntitlementsPlist","withAppDelegate","withMod","platform","mod","entitlements","withExpoPlist","withXcodeProject","withPodfile","withPodfileProperties"],"sources":["../../src/plugins/apple-plugins.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport type { JSONObject } from '@expo/json-file';\nimport type { XcodeProject } from 'xcode';\n\nimport { withMod } from './withMod';\nimport type { ConfigPlugin, Mod } from '../Plugin.types';\nimport type { ExpoPlist, InfoPlist } from '../ios/IosConfig.types';\nimport type { AppDelegateProjectFile, PodfileProjectFile } from '../ios/Paths';\nimport { PluginError } from '../utils/errors';\nimport { get } from '../utils/obj';\nimport { addWarningIOS } from '../utils/warnings';\n\ntype MutateInfoPlistAction = (\n  expo: ExpoConfig,\n  infoPlist: InfoPlist\n) => Promise<InfoPlist> | InfoPlist;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport const createInfoPlistPlugin =\n  (applePlatform: 'ios' | 'macos') =>\n  (action: MutateInfoPlistAction, name?: string): ConfigPlugin => {\n    const withInfoPlistForPlatform = withInfoPlist(applePlatform);\n\n    const withUnknown: ConfigPlugin = (config) =>\n      withInfoPlistForPlatform(config, async (config) => {\n        config.modResults = await action(config, config.modResults);\n        return config;\n      });\n    if (name) {\n      Object.defineProperty(withUnknown, 'name', {\n        value: name,\n      });\n    }\n    return withUnknown;\n  };\n\nexport const createInfoPlistPluginWithPropertyGuard =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    action: MutateInfoPlistAction,\n    settings: {\n      infoPlistProperty: string;\n      expoConfigProperty: string;\n      expoPropertyGetter?: (config: ExpoConfig) => string;\n    },\n    name?: string\n  ): ConfigPlugin => {\n    const withInfoPlistForPlatform = withInfoPlist(applePlatform);\n\n    const withUnknown: ConfigPlugin = (config) =>\n      withInfoPlistForPlatform(config, async (config) => {\n        const existingProperty = settings.expoPropertyGetter\n          ? settings.expoPropertyGetter(config)\n          : get(config, settings.expoConfigProperty);\n        // If the user explicitly sets a value in the infoPlist, we should respect that.\n        if (\n          config.modRawConfig[applePlatform]?.infoPlist?.[settings.infoPlistProperty] === undefined\n        ) {\n          config.modResults = await action(config, config.modResults);\n        } else if (existingProperty !== undefined) {\n          // Only warn if there is a conflict.\n          switch (applePlatform) {\n            case 'ios':\n              addWarningIOS(\n                settings.expoConfigProperty,\n                `\"${applePlatform}.infoPlist.${settings.infoPlistProperty}\" is set in the config. Ignoring abstract property \"${settings.expoConfigProperty}\": ${existingProperty}`\n              );\n              break;\n            case 'macos':\n              addWarningIOS(\n                settings.expoConfigProperty,\n                `\"${applePlatform}.infoPlist.${settings.infoPlistProperty}\" is set in the config. Ignoring abstract property \"${settings.expoConfigProperty}\": ${existingProperty}`\n              );\n              break;\n\n            default:\n              throw new PluginError(\n                `Unsupported platform: ${applePlatform}`,\n                'UNSUPPORTED_PLATFORM'\n              );\n          }\n        }\n\n        return config;\n      });\n    if (name) {\n      Object.defineProperty(withUnknown, 'name', {\n        value: name,\n      });\n    }\n    return withUnknown;\n  };\n\ntype MutateEntitlementsPlistAction = (expo: ExpoConfig, entitlements: JSONObject) => JSONObject;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport const createEntitlementsPlugin =\n  (applePlatform: 'ios' | 'macos') =>\n  (action: MutateEntitlementsPlistAction, name: string): ConfigPlugin => {\n    const withEntitlementsPlistForPlatform = withEntitlementsPlist(applePlatform);\n\n    const withUnknown: ConfigPlugin = (config) =>\n      withEntitlementsPlistForPlatform(config, async (config) => {\n        config.modResults = await action(config, config.modResults);\n        return config;\n      });\n    if (name) {\n      Object.defineProperty(withUnknown, 'name', {\n        value: name,\n      });\n    }\n    return withUnknown;\n  };\n\n/**\n * Provides the AppDelegate file for modification.\n *\n * @param config\n * @param action\n */\nexport const withAppDelegate: (\n  applePlatform: 'ios' | 'macos'\n) => ConfigPlugin<Mod<AppDelegateProjectFile>> =\n  (applePlatform: 'ios' | 'macos') => (config, action) => {\n    return withMod(config, {\n      platform: applePlatform,\n      mod: 'appDelegate',\n      action,\n    });\n  };\n\n/**\n * Provides the Info.plist file for modification.\n * Keeps the config's expo.ios.infoPlist object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withInfoPlist: (applePlatform: 'ios' | 'macos') => ConfigPlugin<Mod<InfoPlist>> =\n  (applePlatform: 'ios' | 'macos') => (config, action) => {\n    return withMod<InfoPlist>(config, {\n      platform: applePlatform,\n      mod: 'infoPlist',\n      async action(config) {\n        config = await action(config);\n        if (!config[applePlatform]) {\n          config[applePlatform] = {};\n        }\n        config[applePlatform]!.infoPlist = config.modResults;\n        return config;\n      },\n    });\n  };\n\n/**\n * Provides the main .entitlements file for modification.\n * Keeps the config's expo.ios.entitlements object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withEntitlementsPlist: (\n  applePlatform: 'ios' | 'macos'\n) => ConfigPlugin<Mod<JSONObject>> = (applePlatform: 'ios' | 'macos') => (config, action) => {\n  return withMod<JSONObject>(config, {\n    platform: applePlatform,\n    mod: 'entitlements',\n    async action(config) {\n      config = await action(config);\n      if (!config[applePlatform]) {\n        config[applePlatform] = {};\n      }\n      config[applePlatform]!.entitlements = config.modResults;\n      return config;\n    },\n  });\n};\n\n/**\n * Provides the Expo.plist for modification.\n *\n * @param config\n * @param action\n */\nexport const withExpoPlist: (applePlatform: 'ios' | 'macos') => ConfigPlugin<Mod<ExpoPlist>> =\n  (applePlatform: 'ios' | 'macos') => (config, action) => {\n    return withMod(config, {\n      platform: applePlatform,\n      mod: 'expoPlist',\n      action,\n    });\n  };\n\n/**\n * Provides the main .xcodeproj for modification.\n *\n * @param config\n * @param action\n */\nexport const withXcodeProject: (\n  applePlatform: 'ios' | 'macos'\n) => ConfigPlugin<Mod<XcodeProject>> = (applePlatform: 'ios' | 'macos') => (config, action) => {\n  return withMod(config, {\n    platform: applePlatform,\n    mod: 'xcodeproj',\n    action,\n  });\n};\n\n/**\n * Provides the Podfile for modification.\n *\n * @param config\n * @param action\n */\nexport const withPodfile: (\n  applePlatform: 'ios' | 'macos'\n) => ConfigPlugin<Mod<PodfileProjectFile>> =\n  (applePlatform: 'ios' | 'macos') => (config, action) => {\n    return withMod(config, {\n      platform: applePlatform,\n      mod: 'podfile',\n      action,\n    });\n  };\n\n/**\n * Provides the Podfile.properties.json for modification.\n *\n * @param config\n * @param action\n */\nexport const withPodfileProperties: (\n  applePlatform: 'ios' | 'macos'\n) => ConfigPlugin<Mod<Record<string, string>>> =\n  (applePlatform: 'ios' | 'macos') => (config, action) => {\n    return withMod(config, {\n      platform: applePlatform,\n      mod: 'podfileProperties',\n      action,\n    });\n  };\n"],"mappings":"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"}