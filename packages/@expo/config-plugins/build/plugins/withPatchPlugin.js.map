{"version":3,"file":"withPatchPlugin.js","names":["_getenv","data","require","_glob","_path","_interopRequireDefault","_withMod","_withRunOnce","_gitPatch","_warnings","obj","__esModule","default","DEFAULT_PATCH_ROOT","DEFAULT_CHANGED_LINES_LIMIT","EXPO_DEBUG","boolish","withPatchMod","config","platform","withMod","mod","action","_config$_internal$tem","_config$_internal","props","createPropsFromConfig","projectRoot","modRequest","templateChecksum","_internal","patchFilePath","determinePatchFilePathAsync","_props$changedLinesLi","changedLines","getPatchChangedLinesAsync","changedLinesLimit","addWarningForPlatform","applyPatchAsync","createPatchPlugin","platformName","charAt","toUpperCase","slice","pluginName","withUnknown","withRunOnce","plugin","name","Object","defineProperty","value","_props$patchRoot","patchRoot","path","join","patchFiles","getPatchFilesAsync","patchExists","includes","basename","length","firstPatchFilePath","console","log","Promise","resolve","reject","glob","cwd","error","matches","_config$plugins$find$","_config$plugins","_config$plugins$find","_patchPluginConfig$pa","_patchPluginConfig$ch","patchPluginConfig","plugins","find","Array","isArray"],"sources":["../../src/plugins/withPatchPlugin.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport { boolish } from 'getenv';\nimport { glob } from 'glob';\nimport path from 'path';\n\nimport { withMod } from './withMod';\nimport { withRunOnce } from './withRunOnce';\nimport type { ConfigPlugin, ModPlatform } from '../Plugin.types';\nimport { applyPatchAsync, getPatchChangedLinesAsync } from '../utils/gitPatch';\nimport { addWarningForPlatform } from '../utils/warnings';\n\nconst DEFAULT_PATCH_ROOT = 'cng-patches';\nconst DEFAULT_CHANGED_LINES_LIMIT = 300;\nconst EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\ninterface PatchPluginProps {\n  /** The directory to search for patch files in. */\n  patchRoot: string;\n  /** The maximum changed lines allowed in the patch file, if exceeded the patch will show a warning. */\n  changedLinesLimit: number;\n}\n\nconst withPatchMod: ConfigPlugin<ModPlatform> = (config, platform) => {\n  return withMod(config, {\n    platform,\n    mod: 'patch',\n    action: async (config) => {\n      const props = createPropsFromConfig(config);\n      const projectRoot = config.modRequest.projectRoot;\n      const templateChecksum = config._internal?.templateChecksum ?? '';\n      const patchFilePath = await determinePatchFilePathAsync(\n        projectRoot,\n        platform,\n        templateChecksum,\n        props\n      );\n      if (patchFilePath != null) {\n        const changedLines = await getPatchChangedLinesAsync(patchFilePath);\n        const changedLinesLimit = props.changedLinesLimit ?? DEFAULT_CHANGED_LINES_LIMIT;\n        if (changedLines > changedLinesLimit) {\n          addWarningForPlatform(\n            platform,\n            'withPatchPlugin',\n            `The patch file \"${patchFilePath}\" has ${changedLines} changed lines, which exceeds the limit of ${changedLinesLimit}.`\n          );\n        }\n\n        await applyPatchAsync(projectRoot, patchFilePath);\n      }\n      return config;\n    },\n  });\n};\n\nexport function createPatchPlugin(platform: ModPlatform): ConfigPlugin {\n  const platformName = platform.charAt(0).toUpperCase() + platform.slice(1);\n  const pluginName = `with${platformName}PatchPlugin`;\n  const withUnknown: ConfigPlugin = (config) => {\n    return withRunOnce(config, {\n      plugin: (config) => withPatchMod(config, platform),\n      name: pluginName,\n    });\n  };\n  Object.defineProperty(withUnknown, 'name', {\n    value: pluginName,\n  });\n  return withUnknown;\n}\n\nasync function determinePatchFilePathAsync(\n  projectRoot: string,\n  platform: ModPlatform,\n  templateChecksum: string,\n  props: PatchPluginProps\n): Promise<string | null> {\n  const patchRoot = path.join(projectRoot, props.patchRoot ?? DEFAULT_PATCH_ROOT);\n  let patchFilePath = path.join(patchRoot, `${platform}+${templateChecksum}.patch`);\n\n  const patchFiles = await getPatchFilesAsync(patchRoot, platform, props);\n  let patchExists = patchFiles.includes(path.basename(patchFilePath));\n  if (patchFiles.length > 0 && !patchExists) {\n    const firstPatchFilePath = path.join(patchRoot, patchFiles[0]);\n    addWarningForPlatform(\n      platform,\n      'withPatchPlugin',\n      `Having patch files in ${patchRoot} but none matching \"${patchFilePath}\", using \"${firstPatchFilePath}\" instead.`\n    );\n    patchFilePath = firstPatchFilePath;\n    patchExists = true;\n  } else if (patchFiles.length > 1) {\n    addWarningForPlatform(\n      platform,\n      'withPatchPlugin',\n      `Having multiple patch files in ${patchRoot} is not supported. Only matched patch file \"${patchFilePath}\" will be applied.`\n    );\n  }\n\n  if (EXPO_DEBUG) {\n    console.log(\n      patchExists\n        ? `[withPatchPlugin] Applying patch from ${patchFilePath}`\n        : `[WithPatchPlugin] No patch found: ${patchFilePath}`\n    );\n  }\n  if (!patchExists) {\n    return null;\n  }\n  return patchFilePath;\n}\n\nasync function getPatchFilesAsync(\n  patchRoot: string,\n  platform: ModPlatform,\n  props: PatchPluginProps\n): Promise<string[]> {\n  return await new Promise<string[]>((resolve, reject) => {\n    glob(`${platform}*.patch`, { cwd: patchRoot }, (error, matches) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(matches);\n      }\n    });\n  });\n}\n\nfunction createPropsFromConfig(config: ExpoConfig): PatchPluginProps {\n  const patchPluginConfig =\n    config.plugins?.find(\n      (plugin) => Array.isArray(plugin) && plugin[0] === 'withPatchPlugin'\n    )?.[1] ?? {};\n  return {\n    patchRoot: patchPluginConfig.patchRoot ?? 'cng-patches',\n    changedLinesLimit: patchPluginConfig.changedLinesLimit ?? 300,\n  };\n}\n"],"mappings":"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"}