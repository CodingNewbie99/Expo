{"version":3,"file":"withPatchPlugin.js","names":["_spawnAsync","data","_interopRequireDefault","require","_getenv","_path","_withMod","_withRunOnce","_modules","obj","__esModule","default","DEFAULT_PATCH_ROOT","EXPO_DEBUG","boolish","withPatchMod","config","platform","props","withMod","mod","action","applyPatchAsync","modRequest","projectRoot","createPatchPlugin","platformName","charAt","toUpperCase","slice","pluginName","withUnknown","withRunOnce","plugin","name","Object","defineProperty","value","_props$patchRoot","patchFilePath","path","join","patchRoot","patchExists","fileExistsAsync","console","log","stdout","stderr","spawnAsync","cwd","e","code","message"],"sources":["../../src/plugins/withPatchPlugin.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { boolish } from 'getenv';\nimport path from 'path';\n\nimport { withMod } from './withMod';\nimport { withRunOnce } from './withRunOnce';\nimport type { ConfigPlugin, ModPlatform } from '../Plugin.types';\nimport { fileExistsAsync } from '../utils/modules';\n\nconst DEFAULT_PATCH_ROOT = 'cng-patches';\nconst EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\nexport interface PatchPluginProps {\n  /** The directory to search for patch files in. */\n  patchRoot?: string;\n}\n\nconst withPatchMod: ConfigPlugin<[ModPlatform, PatchPluginProps]> = (config, [platform, props]) => {\n  return withMod(config, {\n    platform,\n    mod: 'patch',\n    action: async (config) => {\n      await applyPatchAsync(config.modRequest.projectRoot, platform, props);\n      return config;\n    },\n  });\n};\n\nexport function createPatchPlugin(\n  platform: ModPlatform,\n  props: PatchPluginProps = {}\n): ConfigPlugin {\n  const platformName = platform.charAt(0).toUpperCase() + platform.slice(1);\n  const pluginName = `with${platformName}PatchPlugin`;\n  const withUnknown: ConfigPlugin = (config) => {\n    return withRunOnce(config, {\n      plugin: (config) => withPatchMod(config, [platform, props]),\n      name: pluginName,\n    });\n  };\n  Object.defineProperty(withUnknown, 'name', {\n    value: pluginName,\n  });\n  return withUnknown;\n}\n\nasync function applyPatchAsync(\n  projectRoot: string,\n  platform: ModPlatform,\n  props: PatchPluginProps\n) {\n  const patchFilePath = path.join(\n    projectRoot,\n    props.patchRoot ?? DEFAULT_PATCH_ROOT,\n    `${platform}.patch`\n  );\n  const patchExists = await fileExistsAsync(patchFilePath);\n  if (EXPO_DEBUG) {\n    console.log(\n      patchExists\n        ? `[withPatchPlugin] Applying patch from ${patchFilePath}`\n        : `[WithPatchPlugin] No patch found: ${patchFilePath}`\n    );\n  }\n  if (!patchExists) {\n    return;\n  }\n  try {\n    const { stdout, stderr } = await spawnAsync('git', ['apply', patchFilePath], {\n      cwd: projectRoot,\n    });\n    if (EXPO_DEBUG) {\n      console.log(`[withPatchPlugin] outputs\\nstdout:\\n${stdout}\\nstderr:\\n${stderr}`);\n    }\n  } catch (e: any) {\n    if (e.code === 'ENOENT') {\n      e.message += `\\nGit is required to apply patches. Install Git and try again.`;\n    } else if (e.stderr) {\n      e.message += `\\nstderr:\\n${e.stderr}`;\n    }\n    throw e;\n  }\n}\n"],"mappings":"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"}