{"version":3,"file":"DeviceFamily.js","names":["_","data","require","getSupportsScreen","config","android","supportsScreens","setSupportsScreens","supportsScreensConfig","supportsScreensAttributes","smallScreens","undefined","toString","normalScreens","largeScreens","xlargeScreens","anyDensity","requiresSmallestWidthDp","compatibleWidthLimitDp","largestWidthLimitDp","Object","keys","length","modResults","manifest","$","exports","withDeviceFamily","withAndroidManifest","_default","default"],"sources":["../../src/android/DeviceFamily.ts"],"sourcesContent":["import { StringBoolean } from './Manifest';\nimport { ConfigPlugin } from '../Plugin.types';\nimport { ExportedConfigWithProps, withAndroidManifest } from '..';\nimport { ExpoConfig } from '@expo/config-types';\n\ntype AndroidScreenSizesConfig = {\n  smallScreens?: boolean;\n  normalScreens?: boolean;\n  largeScreens?: boolean;\n  xlargeScreens?: boolean;\n  anyDensity?: boolean;\n  requiresSmallestWidthDp?: number;\n  compatibleWidthLimitDp?: number;\n  largestWidthLimitDp?: number;\n};\n\nexport function getSupportsScreen(config: Pick<ExpoConfig, 'android'>): AndroidScreenSizesConfig {\n  return config.android?.supportsScreens ?? {};\n}\n\nexport const setSupportsScreens = (\n  config: ExportedConfigWithProps,\n  supportsScreensConfig: AndroidScreenSizesConfig\n) =>  {\n  const supportsScreensAttributes = {\n    ...(supportsScreensConfig.smallScreens !== undefined && {\n      'android:smallScreens': supportsScreensConfig.smallScreens?.toString(),\n    }),\n    ...(supportsScreensConfig.normalScreens !== undefined && {\n      'android:normalScreens': supportsScreensConfig.normalScreens?.toString(),\n    }),\n    ...(supportsScreensConfig.largeScreens !== undefined && {\n      'android:largeScreens': supportsScreensConfig.largeScreens?.toString(),\n    }),\n    ...(supportsScreensConfig.xlargeScreens !== undefined && {\n      'android:xlargeScreens': supportsScreensConfig.xlargeScreens?.toString(),\n    }),\n    ...(supportsScreensConfig.anyDensity !== undefined && {\n      'android:anyDensity': supportsScreensConfig.anyDensity?.toString(),\n    }),\n    ...(supportsScreensConfig.requiresSmallestWidthDp !== undefined && {\n      'android:requiresSmallestWidthDp': supportsScreensConfig.requiresSmallestWidthDp?.toString(),\n    }),\n    ...(supportsScreensConfig.compatibleWidthLimitDp !== undefined && {\n      'android:compatibleWidthLimitDp': supportsScreensConfig.compatibleWidthLimitDp?.toString(),\n    }),\n    ...(supportsScreensConfig.largestWidthLimitDp !== undefined && {\n      'android:largestWidthLimitDp': supportsScreensConfig.largestWidthLimitDp?.toString(),\n    }),\n  };\n\n  if(Object.keys(supportsScreensAttributes).length > 0){\n    config.modResults.manifest['supports-screens'] = [\n      {\n        $: supportsScreensAttributes,\n      },\n    ];\n  }\n\n  return config;\n}\n\n\nexport const withDeviceFamily: ConfigPlugin<AndroidScreenSizesConfig | void> = (config) => {\n  const supportsScreensConfig = getSupportsScreen(config);\n\n  return withAndroidManifest(config, async (config) => {\n    return setSupportsScreens(config, supportsScreensConfig)\n  });\n};\n\nexport default withDeviceFamily;\n"],"mappings":";;;;;;;;AAEA,SAAAA,EAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,CAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAcO,SAASE,iBAAiBA,CAACC,MAAmC,EAA4B;EAC/F,OAAOA,MAAM,CAACC,OAAO,EAAEC,eAAe,IAAI,CAAC,CAAC;AAC9C;AAEO,MAAMC,kBAAkB,GAAGA,CAChCH,MAA+B,EAC/BI,qBAA+C,KAC3C;EACJ,MAAMC,yBAAyB,GAAG;IAChC,IAAID,qBAAqB,CAACE,YAAY,KAAKC,SAAS,IAAI;MACtD,sBAAsB,EAAEH,qBAAqB,CAACE,YAAY,EAAEE,QAAQ,CAAC;IACvE,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACK,aAAa,KAAKF,SAAS,IAAI;MACvD,uBAAuB,EAAEH,qBAAqB,CAACK,aAAa,EAAED,QAAQ,CAAC;IACzE,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACM,YAAY,KAAKH,SAAS,IAAI;MACtD,sBAAsB,EAAEH,qBAAqB,CAACM,YAAY,EAAEF,QAAQ,CAAC;IACvE,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACO,aAAa,KAAKJ,SAAS,IAAI;MACvD,uBAAuB,EAAEH,qBAAqB,CAACO,aAAa,EAAEH,QAAQ,CAAC;IACzE,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACQ,UAAU,KAAKL,SAAS,IAAI;MACpD,oBAAoB,EAAEH,qBAAqB,CAACQ,UAAU,EAAEJ,QAAQ,CAAC;IACnE,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACS,uBAAuB,KAAKN,SAAS,IAAI;MACjE,iCAAiC,EAAEH,qBAAqB,CAACS,uBAAuB,EAAEL,QAAQ,CAAC;IAC7F,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACU,sBAAsB,KAAKP,SAAS,IAAI;MAChE,gCAAgC,EAAEH,qBAAqB,CAACU,sBAAsB,EAAEN,QAAQ,CAAC;IAC3F,CAAC,CAAC;IACF,IAAIJ,qBAAqB,CAACW,mBAAmB,KAAKR,SAAS,IAAI;MAC7D,6BAA6B,EAAEH,qBAAqB,CAACW,mBAAmB,EAAEP,QAAQ,CAAC;IACrF,CAAC;EACH,CAAC;EAED,IAAGQ,MAAM,CAACC,IAAI,CAACZ,yBAAyB,CAAC,CAACa,MAAM,GAAG,CAAC,EAAC;IACnDlB,MAAM,CAACmB,UAAU,CAACC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAC/C;MACEC,CAAC,EAAEhB;IACL,CAAC,CACF;EACH;EAEA,OAAOL,MAAM;AACf,CAAC;AAAAsB,OAAA,CAAAnB,kBAAA,GAAAA,kBAAA;AAGM,MAAMoB,gBAA+D,GAAIvB,MAAM,IAAK;EACzF,MAAMI,qBAAqB,GAAGL,iBAAiB,CAACC,MAAM,CAAC;EAEvD,OAAO,IAAAwB,uBAAmB,EAACxB,MAAM,EAAE,MAAOA,MAAM,IAAK;IACnD,OAAOG,kBAAkB,CAACH,MAAM,EAAEI,qBAAqB,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC;AAACkB,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAAA,IAAAE,QAAA,GAAAH,OAAA,CAAAI,OAAA,GAEaH,gBAAgB"}