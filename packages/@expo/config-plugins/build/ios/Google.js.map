{"version":3,"file":"Google.js","names":["withGoogle","config","withInfoPlist","modResults","setGoogleConfig","modRequest","withGoogleServicesFile","withXcodeProject","setGoogleServicesFile","projectRoot","project","readGoogleServicesInfoPlist","relativePath","googleServiceFilePath","path","resolve","contents","fs","readFileSync","assert","plist","parse","getGoogleSignInReservedClientId","reservedClientId","ios","googleSignIn","googleServicesFileRelativePath","getGoogleServicesFile","infoPlist","REVERSED_CLIENT_ID","googleServicesFile","setGoogleSignInReservedClientId","appendScheme","copyFileSync","join","getSourceRoot","projectName","getProjectName","plistFilePath","hasFile","addResourceFileToGroup","filepath","groupName","isBuildFile","verbose"],"sources":["../../src/ios/Google.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport plist from '@expo/plist';\nimport assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\nimport { XcodeProject } from 'xcode';\n\nimport { ConfigPlugin, ModProps } from '../Plugin.types';\nimport { withInfoPlist, withXcodeProject } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\nimport { getSourceRoot } from './Paths';\nimport { appendScheme } from './Scheme';\nimport { addResourceFileToGroup, getProjectName } from './utils/Xcodeproj';\n\nexport const withGoogle: ConfigPlugin = (config) => {\n  return withInfoPlist(config, (config) => {\n    config.modResults = setGoogleConfig(config, config.modResults, config.modRequest);\n    return config;\n  });\n};\n\nexport const withGoogleServicesFile: ConfigPlugin = (config) => {\n  return withXcodeProject(config, (config) => {\n    config.modResults = setGoogleServicesFile(config, {\n      projectRoot: config.modRequest.projectRoot,\n      project: config.modResults,\n    });\n    return config;\n  });\n};\n\nfunction readGoogleServicesInfoPlist(\n  relativePath: string,\n  { projectRoot }: { projectRoot: string }\n) {\n  const googleServiceFilePath = path.resolve(projectRoot, relativePath);\n  const contents = fs.readFileSync(googleServiceFilePath, 'utf8');\n  assert(contents, 'GoogleService-Info.plist is empty');\n  return plist.parse(contents);\n}\n\nexport function getGoogleSignInReservedClientId(\n  config: Pick<ExpoConfig, 'ios'>,\n  modRequest: Pick<ModProps<InfoPlist>, 'projectRoot'>\n): string | null {\n  const reservedClientId = config.ios?.config?.googleSignIn?.reservedClientId ?? null;\n  if (reservedClientId) {\n    return reservedClientId;\n  }\n\n  const googleServicesFileRelativePath = getGoogleServicesFile(config);\n  if (googleServicesFileRelativePath === null) {\n    return null;\n  }\n\n  const infoPlist = readGoogleServicesInfoPlist(googleServicesFileRelativePath, modRequest);\n\n  return infoPlist.REVERSED_CLIENT_ID ?? null;\n}\n\nexport function getGoogleServicesFile(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.googleServicesFile ?? null;\n}\n\nexport function setGoogleSignInReservedClientId(\n  config: Pick<ExpoConfig, 'ios'>,\n  infoPlist: InfoPlist,\n  modRequest: Pick<ModProps<InfoPlist>, 'projectRoot'>\n): InfoPlist {\n  const reservedClientId = getGoogleSignInReservedClientId(config, modRequest);\n\n  if (reservedClientId === null) {\n    return infoPlist;\n  }\n\n  return appendScheme(reservedClientId, infoPlist);\n}\n\nexport function setGoogleConfig(\n  config: Pick<ExpoConfig, 'ios'>,\n  infoPlist: InfoPlist,\n  modRequest: ModProps<InfoPlist>\n): InfoPlist {\n  infoPlist = setGoogleSignInReservedClientId(config, infoPlist, modRequest);\n  return infoPlist;\n}\n\nexport function setGoogleServicesFile(\n  config: Pick<ExpoConfig, 'ios'>,\n  { projectRoot, project }: { project: XcodeProject; projectRoot: string }\n): XcodeProject {\n  const googleServicesFileRelativePath = getGoogleServicesFile(config);\n  if (googleServicesFileRelativePath === null) {\n    return project;\n  }\n\n  const googleServiceFilePath = path.resolve(projectRoot, googleServicesFileRelativePath);\n  fs.copyFileSync(\n    googleServiceFilePath,\n    path.join(getSourceRoot(projectRoot), 'GoogleService-Info.plist')\n  );\n\n  const projectName = getProjectName(projectRoot);\n  const plistFilePath = `${projectName}/GoogleService-Info.plist`;\n  if (!project.hasFile(plistFilePath)) {\n    project = addResourceFileToGroup({\n      filepath: plistFilePath,\n      groupName: projectName,\n      project,\n      isBuildFile: true,\n      verbose: true,\n    });\n  }\n  return project;\n}\n"],"mappings":"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"}