{"version":3,"sources":["../../src/ios/UsesNonExemptEncryption.ts"],"names":["withUsesNonExemptEncryption","setUsesNonExemptEncryption","infoPlistProperty","expoConfigProperty","getUsesNonExemptEncryption","config","ios","usesNonExemptEncryption","ITSAppUsesNonExemptEncryption","infoPlist"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,2BAA2B,GAAG,0DACzCC,0BADyC,EAEzC;AACEC,EAAAA,iBAAiB,EAAE,+BADrB;AAEEC,EAAAA,kBAAkB,EAAE;AAFtB,CAFyC,EAMzC,6BANyC,CAApC;;;AASA,SAASC,0BAAT,CAAoCC,MAApC,EAAqE;AAAA;;AAC1E,kCAAOA,MAAP,aAAOA,MAAP,sCAAOA,MAAM,CAAEC,GAAf,sEAAO,YAAaD,MAApB,uDAAO,mBAAqBE,uBAA5B,yEAAuD,IAAvD;AACD;;AAEM,SAASN,0BAAT,CACLI,MADK,EAEL;AAAEG,EAAAA,6BAAF;AAAiC,KAAGC;AAApC,CAFK,EAGM;AACX,QAAMF,uBAAuB,GAAGH,0BAA0B,CAACC,MAAD,CAA1D,CADW,CAGX;;AACA,MAAIE,uBAAuB,KAAK,IAAhC,EAAsC;AACpC,WAAOE,SAAP;AACD;;AAED,SAAO,EACL,GAAGA,SADE;AAELD,IAAAA,6BAA6B,EAAED;AAF1B,GAAP;AAID","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPluginWithPropertyGuard } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withUsesNonExemptEncryption = createInfoPlistPluginWithPropertyGuard(\n  setUsesNonExemptEncryption,\n  {\n    infoPlistProperty: 'ITSAppUsesNonExemptEncryption',\n    expoConfigProperty: 'ios.config.usesNonExemptEncryption',\n  },\n  'withUsesNonExemptEncryption'\n);\n\nexport function getUsesNonExemptEncryption(config: Pick<ExpoConfig, 'ios'>) {\n  return config?.ios?.config?.usesNonExemptEncryption ?? null;\n}\n\nexport function setUsesNonExemptEncryption(\n  config: Pick<ExpoConfig, 'ios'>,\n  { ITSAppUsesNonExemptEncryption, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n\n  // Make no changes if the key is left blank\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption,\n  };\n}\n"],"file":"UsesNonExemptEncryption.js"}