{"version":3,"file":"Google.js","names":["_plist","data","_interopRequireDefault","require","_assert","_fs","_path","_Paths","_Scheme","_Xcodeproj","_applePlugins","obj","__esModule","default","withGoogle","applePlatform","config","withInfoPlist","modResults","setGoogleConfig","modRequest","exports","withGoogleServicesFile","withXcodeProject","setGoogleServicesFile","projectRoot","project","readGoogleServicesInfoPlist","relativePath","googleServiceFilePath","path","resolve","contents","fs","readFileSync","assert","plist","parse","getGoogleSignInReversedClientId","googleServicesFileRelativePath","getGoogleServicesFile","infoPlist","REVERSED_CLIENT_ID","googleServicesFile","setGoogleSignInReversedClientId","reversedClientId","appendScheme","copyFileSync","join","getSourceRoot","projectName","getProjectName","plistFilePath","hasFile","addResourceFileToGroup","filepath","groupName","isBuildFile","verbose"],"sources":["../../src/apple/Google.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport plist from '@expo/plist';\nimport assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\nimport { XcodeProject } from 'xcode';\n\nimport { InfoPlist } from './AppleConfig.types';\nimport { getSourceRoot } from './Paths';\nimport { appendScheme } from './Scheme';\nimport { addResourceFileToGroup, getProjectName } from './utils/Xcodeproj';\nimport { ConfigPlugin, ModProps } from '../Plugin.types';\nimport { withInfoPlist, withXcodeProject } from '../plugins/apple-plugins';\n\nexport const withGoogle: (applePlatform: 'ios' | 'macos') => ConfigPlugin =\n  (applePlatform: 'ios' | 'macos') => (config) => {\n    return withInfoPlist(applePlatform)(config, (config) => {\n      config.modResults = setGoogleConfig(applePlatform)(\n        config,\n        config.modResults,\n        config.modRequest\n      );\n      return config;\n    });\n  };\n\nexport const withGoogleServicesFile: (applePlatform: 'ios' | 'macos') => ConfigPlugin =\n  (applePlatform: 'ios' | 'macos') => (config) => {\n    return withXcodeProject(applePlatform)(config, (config) => {\n      config.modResults = setGoogleServicesFile(applePlatform)(config, {\n        projectRoot: config.modRequest.projectRoot,\n        project: config.modResults,\n      });\n      return config;\n    });\n  };\n\nfunction readGoogleServicesInfoPlist(\n  relativePath: string,\n  { projectRoot }: { projectRoot: string }\n) {\n  const googleServiceFilePath = path.resolve(projectRoot, relativePath);\n  const contents = fs.readFileSync(googleServiceFilePath, 'utf8');\n  assert(contents, 'GoogleService-Info.plist is empty');\n  return plist.parse(contents);\n}\n\nexport const getGoogleSignInReversedClientId =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    config: Pick<ExpoConfig, typeof applePlatform>,\n    modRequest: Pick<ModProps<InfoPlist>, 'projectRoot'>\n  ): string | null => {\n    const googleServicesFileRelativePath = getGoogleServicesFile(applePlatform)(config);\n    if (googleServicesFileRelativePath === null) {\n      return null;\n    }\n\n    const infoPlist = readGoogleServicesInfoPlist(googleServicesFileRelativePath, modRequest);\n\n    return infoPlist.REVERSED_CLIENT_ID ?? null;\n  };\n\nexport const getGoogleServicesFile =\n  (applePlatform: 'ios' | 'macos') => (config: Pick<ExpoConfig, typeof applePlatform>) => {\n    return config[applePlatform]?.googleServicesFile ?? null;\n  };\n\nexport const setGoogleSignInReversedClientId =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    config: Pick<ExpoConfig, typeof applePlatform>,\n    infoPlist: InfoPlist,\n    modRequest: Pick<ModProps<InfoPlist>, 'projectRoot'>\n  ): InfoPlist => {\n    const reversedClientId = getGoogleSignInReversedClientId(applePlatform)(config, modRequest);\n\n    if (reversedClientId === null) {\n      return infoPlist;\n    }\n\n    return appendScheme(reversedClientId, infoPlist);\n  };\n\nexport const setGoogleConfig =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    config: Pick<ExpoConfig, typeof applePlatform>,\n    infoPlist: InfoPlist,\n    modRequest: ModProps<InfoPlist>\n  ): InfoPlist => {\n    infoPlist = setGoogleSignInReversedClientId(applePlatform)(config, infoPlist, modRequest);\n    return infoPlist;\n  };\n\nexport const setGoogleServicesFile =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    config: Pick<ExpoConfig, typeof applePlatform>,\n    { projectRoot, project }: { project: XcodeProject; projectRoot: string }\n  ): XcodeProject => {\n    const googleServicesFileRelativePath = getGoogleServicesFile(applePlatform)(config);\n    if (googleServicesFileRelativePath === null) {\n      return project;\n    }\n\n    const googleServiceFilePath = path.resolve(projectRoot, googleServicesFileRelativePath);\n    fs.copyFileSync(\n      googleServiceFilePath,\n      path.join(getSourceRoot(applePlatform)(projectRoot), 'GoogleService-Info.plist')\n    );\n\n    const projectName = getProjectName(applePlatform)(projectRoot);\n    const plistFilePath = `${projectName}/GoogleService-Info.plist`;\n    if (!project.hasFile(plistFilePath)) {\n      project = addResourceFileToGroup(applePlatform)({\n        filepath: plistFilePath,\n        groupName: projectName,\n        project,\n        isBuildFile: true,\n        verbose: true,\n      });\n    }\n    return project;\n  };\n"],"mappings":"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"}