{"version":3,"file":"BuildProperties.js","names":["_applePlugins","data","require","createBuildPodfilePropsConfigPlugin","applePlatform","configToPropertyRules","name","withUnknown","config","sourceConfig","withPodfileProperties","modResults","updateAppleBuildPropertiesFromConfig","Object","defineProperty","value","exports","withJsEnginePodfileProps","propName","propValueGetter","jsEngine","podfileProperties","configToProperty","updateAppleBuildProperty","options","removePropWhenValueIsNull"],"sources":["../../src/apple/BuildProperties.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\n\nimport type { ConfigPlugin } from '../Plugin.types';\nimport { withPodfileProperties } from '../plugins/apple-plugins';\nimport { BuildPropertiesConfig, ConfigToPropertyRuleType } from '../utils/BuildProperties.types';\n\n/**\n * Creates a `withPodfileProperties` config-plugin based on given config to property mapping rules.\n *\n * The factory supports two modes from generic type inference\n * ```ts\n * // config-plugin without `props`, it will implicitly use the expo config as source config.\n * createBuildPodfilePropsConfigPlugin<ExpoConfig>(): ConfigPlugin<void>;\n *\n * // config-plugin with a parameter `props: CustomType`, it will use the `props` as source config.\n * createBuildPodfilePropsConfigPlugin<CustomType>(): ConfigPlugin<CustomType>;\n * ```\n *\n * @param configToPropertyRules config to property mapping rules\n * @param name the config plugin name\n */\nexport const createBuildPodfilePropsConfigPlugin =\n  (applePlatform: 'ios' | 'macos') =>\n  <SourceConfigType extends BuildPropertiesConfig>(\n    configToPropertyRules: ConfigToPropertyRuleType<SourceConfigType>[],\n    name?: string\n  ) => {\n    const withUnknown: ConfigPlugin<\n      SourceConfigType extends ExpoConfig ? void : SourceConfigType\n    > = (config, sourceConfig) =>\n      withPodfileProperties(applePlatform)(config, (config) => {\n        config.modResults = updateAppleBuildPropertiesFromConfig(\n          (sourceConfig ?? config) as SourceConfigType,\n          config.modResults,\n          configToPropertyRules\n        );\n        return config;\n      });\n    if (name) {\n      Object.defineProperty(withUnknown, 'name', {\n        value: name,\n      });\n    }\n    return withUnknown;\n  };\n\n/**\n * A config-plugin to update `ios/Podfile.properties.json` from the `jsEngine` in expo config\n */\nexport const withJsEnginePodfileProps = (applePlatform: 'ios' | 'macos') =>\n  createBuildPodfilePropsConfigPlugin(applePlatform)<ExpoConfig>(\n    [\n      {\n        propName: 'expo.jsEngine',\n        propValueGetter: (config) => config[applePlatform]?.jsEngine ?? config.jsEngine ?? 'hermes',\n      },\n    ],\n    'withJsEnginePodfileProps'\n  );\n\nexport function updateAppleBuildPropertiesFromConfig<\n  SourceConfigType extends BuildPropertiesConfig,\n>(\n  config: SourceConfigType,\n  podfileProperties: Record<string, string>,\n  configToPropertyRules: ConfigToPropertyRuleType<SourceConfigType>[]\n) {\n  for (const configToProperty of configToPropertyRules) {\n    const value = configToProperty.propValueGetter(config);\n    updateAppleBuildProperty(podfileProperties, configToProperty.propName, value);\n  }\n  return podfileProperties;\n}\n\nexport function updateAppleBuildProperty(\n  podfileProperties: Record<string, string>,\n  name: string,\n  value: string | null | undefined,\n  options?: { removePropWhenValueIsNull?: boolean }\n) {\n  if (value) {\n    podfileProperties[name] = value;\n  } else if (options?.removePropWhenValueIsNull) {\n    delete podfileProperties[name];\n  }\n  return podfileProperties;\n}\n"],"mappings":";;;;;;;;;AAGA,SAAAA,cAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,aAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,mCAAmC,GAC7CC,aAA8B,IAC/B,CACEC,qBAAmE,EACnEC,IAAa,KACV;EACH,MAAMC,WAEL,GAAGA,CAACC,MAAM,EAAEC,YAAY,KACvB,IAAAC,qCAAqB,EAACN,aAAa,CAAC,CAACI,MAAM,EAAGA,MAAM,IAAK;IACvDA,MAAM,CAACG,UAAU,GAAGC,oCAAoC,CACrDH,YAAY,IAAID,MAAM,EACvBA,MAAM,CAACG,UAAU,EACjBN,qBACF,CAAC;IACD,OAAOG,MAAM;EACf,CAAC,CAAC;EACJ,IAAIF,IAAI,EAAE;IACRO,MAAM,CAACC,cAAc,CAACP,WAAW,EAAE,MAAM,EAAE;MACzCQ,KAAK,EAAET;IACT,CAAC,CAAC;EACJ;EACA,OAAOC,WAAW;AACpB,CAAC;;AAEH;AACA;AACA;AAFAS,OAAA,CAAAb,mCAAA,GAAAA,mCAAA;AAGO,MAAMc,wBAAwB,GAAIb,aAA8B,IACrED,mCAAmC,CAACC,aAAa,CAAC,CAChD,CACE;EACEc,QAAQ,EAAE,eAAe;EACzBC,eAAe,EAAGX,MAAM,IAAKA,MAAM,CAACJ,aAAa,CAAC,EAAEgB,QAAQ,IAAIZ,MAAM,CAACY,QAAQ,IAAI;AACrF,CAAC,CACF,EACD,0BACF,CAAC;AAACJ,OAAA,CAAAC,wBAAA,GAAAA,wBAAA;AAEG,SAASL,oCAAoCA,CAGlDJ,MAAwB,EACxBa,iBAAyC,EACzChB,qBAAmE,EACnE;EACA,KAAK,MAAMiB,gBAAgB,IAAIjB,qBAAqB,EAAE;IACpD,MAAMU,KAAK,GAAGO,gBAAgB,CAACH,eAAe,CAACX,MAAM,CAAC;IACtDe,wBAAwB,CAACF,iBAAiB,EAAEC,gBAAgB,CAACJ,QAAQ,EAAEH,KAAK,CAAC;EAC/E;EACA,OAAOM,iBAAiB;AAC1B;AAEO,SAASE,wBAAwBA,CACtCF,iBAAyC,EACzCf,IAAY,EACZS,KAAgC,EAChCS,OAAiD,EACjD;EACA,IAAIT,KAAK,EAAE;IACTM,iBAAiB,CAACf,IAAI,CAAC,GAAGS,KAAK;EACjC,CAAC,MAAM,IAAIS,OAAO,EAAEC,yBAAyB,EAAE;IAC7C,OAAOJ,iBAAiB,CAACf,IAAI,CAAC;EAChC;EACA,OAAOe,iBAAiB;AAC1B"}