{"version":3,"file":"Scheme.js","names":["_applePlugins","data","require","withScheme","applePlatform","createInfoPlistPluginWithPropertyGuard","config","infoPlist","setScheme","infoPlistProperty","expoConfigProperty","exports","getScheme","Array","isArray","scheme","validate","value","filter","bundleIdentifier","push","length","CFBundleURLTypes","CFBundleURLSchemes","appendScheme","existingSchemes","some","includes","removeScheme","map","bundleUrlType","index","indexOf","splice","undefined","Boolean","hasScheme","schemes","getSchemesFromPlist","reduce"],"sources":["../../src/apple/Scheme.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { InfoPlist, URLScheme } from './AppleConfig.types';\nimport { createInfoPlistPluginWithPropertyGuard } from '../plugins/apple-plugins';\n\nexport const withScheme = (applePlatform: 'ios' | 'macos') =>\n  createInfoPlistPluginWithPropertyGuard(applePlatform)(\n    (config: Partial<Pick<ExpoConfig, 'scheme' | typeof applePlatform>>, infoPlist: InfoPlist) =>\n      setScheme(applePlatform)(config, infoPlist),\n    {\n      infoPlistProperty: 'CFBundleURLTypes',\n      expoConfigProperty: 'scheme',\n    },\n    'withScheme'\n  );\n\nexport function getScheme(config: { scheme?: string | string[] }): string[] {\n  if (Array.isArray(config.scheme)) {\n    const validate = (value: any): value is string => {\n      return typeof value === 'string';\n    };\n    return config.scheme.filter<string>(validate);\n  } else if (typeof config.scheme === 'string') {\n    return [config.scheme];\n  }\n  return [];\n}\n\nexport const setScheme =\n  (applePlatform: 'ios' | 'macos') =>\n  (\n    config: Partial<Pick<ExpoConfig, 'scheme' | typeof applePlatform>>,\n    infoPlist: InfoPlist\n  ): InfoPlist => {\n    const scheme = [\n      ...getScheme(config),\n      // @ts-ignore: TODO: `ios.scheme` / `macos.scheme` is an unreleased -- harder to add to turtle v1.\n      ...getScheme(config[applePlatform] ?? {}),\n    ];\n    // Add the bundle identifier to the list of schemes for easier Google auth and parity with Turtle v1.\n    if (config[applePlatform]?.bundleIdentifier) {\n      scheme.push(config[applePlatform]!.bundleIdentifier!);\n    }\n    if (scheme.length === 0) {\n      return infoPlist;\n    }\n\n    return {\n      ...infoPlist,\n      CFBundleURLTypes: [{ CFBundleURLSchemes: scheme }],\n    };\n  };\n\nexport function appendScheme(scheme: string | null, infoPlist: InfoPlist): InfoPlist {\n  if (!scheme) {\n    return infoPlist;\n  }\n\n  const existingSchemes = infoPlist.CFBundleURLTypes ?? [];\n  if (existingSchemes?.some(({ CFBundleURLSchemes }) => CFBundleURLSchemes.includes(scheme))) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    CFBundleURLTypes: [\n      ...existingSchemes,\n      {\n        CFBundleURLSchemes: [scheme],\n      },\n    ],\n  };\n}\n\nexport function removeScheme(scheme: string | null, infoPlist: InfoPlist): InfoPlist {\n  if (!scheme) {\n    return infoPlist;\n  }\n\n  // No need to remove if we don't have any\n  if (!infoPlist.CFBundleURLTypes) {\n    return infoPlist;\n  }\n\n  infoPlist.CFBundleURLTypes = infoPlist.CFBundleURLTypes.map((bundleUrlType) => {\n    const index = bundleUrlType.CFBundleURLSchemes.indexOf(scheme);\n    if (index > -1) {\n      bundleUrlType.CFBundleURLSchemes.splice(index, 1);\n      if (bundleUrlType.CFBundleURLSchemes.length === 0) {\n        return undefined;\n      }\n    }\n    return bundleUrlType;\n  }).filter(Boolean) as URLScheme[];\n\n  return infoPlist;\n}\n\nexport function hasScheme(scheme: string, infoPlist: InfoPlist): boolean {\n  const existingSchemes = infoPlist.CFBundleURLTypes;\n\n  if (!Array.isArray(existingSchemes)) return false;\n\n  return existingSchemes?.some(({ CFBundleURLSchemes: schemes }: any) =>\n    Array.isArray(schemes) ? schemes.includes(scheme) : false\n  );\n}\n\nexport function getSchemesFromPlist(infoPlist: InfoPlist): string[] {\n  if (Array.isArray(infoPlist.CFBundleURLTypes)) {\n    return infoPlist.CFBundleURLTypes.reduce<string[]>((schemes, { CFBundleURLSchemes }) => {\n      if (Array.isArray(CFBundleURLSchemes)) {\n        return [...schemes, ...CFBundleURLSchemes];\n      }\n      return schemes;\n    }, []);\n  }\n  return [];\n}\n"],"mappings":"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"}