{"version":3,"file":"Permissions.js","names":["_debug","data","_interopRequireDefault","require","_applePlugins","obj","__esModule","default","debug","Debug","applyPermissions","defaults","permissions","infoPlist","entries","Object","length","JSON","stringify","permission","description","exports","createPermissionsPlugin","applePlatform","name","withApplePermissions","config","withInfoPlist","modResults","defineProperty","value"],"sources":["../../src/apple/Permissions.ts"],"sourcesContent":["import Debug from 'debug';\n\nimport { InfoPlist } from './AppleConfig.types';\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withInfoPlist } from '../plugins/apple-plugins';\n\nconst debug = Debug(`expo:config-plugins:apple:permissions`);\n\nexport const applyPermissions = <Defaults extends Record<string, string> = Record<string, string>>(\n  defaults: Defaults,\n  permissions: Partial<Record<keyof Defaults, string | false>>,\n  infoPlist: InfoPlist\n): InfoPlist => {\n  const entries = Object.entries(defaults);\n  if (entries.length === 0) {\n    debug(`No defaults provided: ${JSON.stringify(permissions)}`);\n  }\n  for (const [permission, description] of entries) {\n    if (permissions[permission] === false) {\n      debug(`Deleting \"${permission}\"`);\n      delete infoPlist[permission];\n    } else {\n      infoPlist[permission] = permissions[permission] || infoPlist[permission] || description;\n      debug(`Setting \"${permission}\" to \"${infoPlist[permission]}\"`);\n    }\n  }\n  return infoPlist;\n};\n\n/**\n * Helper method for creating mods to apply default permissions.\n *\n * @param action\n */\nexport const createPermissionsPlugin =\n  (applePlatform: 'ios' | 'macos') =>\n  <Defaults extends Record<string, string> = Record<string, string>>(\n    defaults: Defaults,\n    name?: string\n  ) => {\n    const withApplePermissions: ConfigPlugin<Record<keyof Defaults, string | undefined | false>> = (\n      config,\n      permissions\n    ) =>\n      withInfoPlist(applePlatform)(config, async (config) => {\n        config.modResults = applyPermissions(defaults, permissions, config.modResults);\n        return config;\n      });\n    if (name) {\n      Object.defineProperty(withApplePermissions, 'name', {\n        value: name,\n      });\n    }\n    return withApplePermissions;\n  };\n"],"mappings":";;;;;;AAAA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAIA,SAAAG,cAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,aAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAyD,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEzD,MAAMG,KAAK,GAAG,IAAAC,gBAAK,EAAE,uCAAsC,CAAC;AAErD,MAAMC,gBAAgB,GAAGA,CAC9BC,QAAkB,EAClBC,WAA4D,EAC5DC,SAAoB,KACN;EACd,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACH,QAAQ,CAAC;EACxC,IAAIG,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IACxBR,KAAK,CAAE,yBAAwBS,IAAI,CAACC,SAAS,CAACN,WAAW,CAAE,EAAC,CAAC;EAC/D;EACA,KAAK,MAAM,CAACO,UAAU,EAAEC,WAAW,CAAC,IAAIN,OAAO,EAAE;IAC/C,IAAIF,WAAW,CAACO,UAAU,CAAC,KAAK,KAAK,EAAE;MACrCX,KAAK,CAAE,aAAYW,UAAW,GAAE,CAAC;MACjC,OAAON,SAAS,CAACM,UAAU,CAAC;IAC9B,CAAC,MAAM;MACLN,SAAS,CAACM,UAAU,CAAC,GAAGP,WAAW,CAACO,UAAU,CAAC,IAAIN,SAAS,CAACM,UAAU,CAAC,IAAIC,WAAW;MACvFZ,KAAK,CAAE,YAAWW,UAAW,SAAQN,SAAS,CAACM,UAAU,CAAE,GAAE,CAAC;IAChE;EACF;EACA,OAAON,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJAQ,OAAA,CAAAX,gBAAA,GAAAA,gBAAA;AAKO,MAAMY,uBAAuB,GACjCC,aAA8B,IAC/B,CACEZ,QAAkB,EAClBa,IAAa,KACV;EACH,MAAMC,oBAAsF,GAAGA,CAC7FC,MAAM,EACNd,WAAW,KAEX,IAAAe,6BAAa,EAACJ,aAAa,CAAC,CAACG,MAAM,EAAE,MAAOA,MAAM,IAAK;IACrDA,MAAM,CAACE,UAAU,GAAGlB,gBAAgB,CAACC,QAAQ,EAAEC,WAAW,EAAEc,MAAM,CAACE,UAAU,CAAC;IAC9E,OAAOF,MAAM;EACf,CAAC,CAAC;EACJ,IAAIF,IAAI,EAAE;IACRT,MAAM,CAACc,cAAc,CAACJ,oBAAoB,EAAE,MAAM,EAAE;MAClDK,KAAK,EAAEN;IACT,CAAC,CAAC;EACJ;EACA,OAAOC,oBAAoB;AAC7B,CAAC;AAACJ,OAAA,CAAAC,uBAAA,GAAAA,uBAAA"}