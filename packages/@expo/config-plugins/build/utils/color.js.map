{"version":3,"file":"color.js","names":["_path","data","_interopRequireDefault","require","_resolveFrom","obj","__esModule","default","normalizeColor","convertColor","projectRoot","color","normalizeColorPath","resolveNormalizeColor","Error","colorInt","reactNativePackageJsonPath","resolveFrom","silent","reactNativeDir","path","dirname"],"sources":["../../src/utils/color.ts"],"sourcesContent":["// @ts-expect-error: normalize-colors does not export types\nimport type normalizeColorType from '@react-native/normalize-colors';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nlet normalizeColor: typeof normalizeColorType | null = null;\n\n/**\n * Convert a color string to an integer.\n * @param projectRoot The project root directory.\n * @param color The color string to convert, e.g. '#ff0000', 'red', 'rgba(255, 0, 0, 1)'.\n */\nexport function convertColor(projectRoot: string, color: string): number {\n  if (!normalizeColor) {\n    const normalizeColorPath = resolveNormalizeColor(projectRoot);\n    if (!normalizeColorPath) {\n      throw new Error('Unable to resolve the @react-native/normalize-colors package');\n    }\n    normalizeColor = require(normalizeColorPath);\n  }\n\n  const colorInt = normalizeColor(color);\n  if (!colorInt) {\n    throw new Error(`Invalid color value: ${color}`);\n  }\n  return ((colorInt << 24) | (colorInt >>> 8)) >>> 0;\n}\n\nfunction resolveNormalizeColor(projectRoot: string): string | null {\n  const reactNativePackageJsonPath = resolveFrom.silent(projectRoot, 'react-native/package.json');\n  if (reactNativePackageJsonPath) {\n    const reactNativeDir = path.dirname(reactNativePackageJsonPath);\n    const normalizeColorPath = resolveFrom.silent(reactNativeDir, '@react-native/normalize-colors');\n    if (normalizeColorPath) {\n      return normalizeColorPath;\n    }\n  }\n  return null;\n}\n"],"mappings":";;;;;;AAEA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,aAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,YAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAuC,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAHvC;;AAKA,IAAIG,cAAgD,GAAG,IAAI;;AAE3D;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAACC,WAAmB,EAAEC,KAAa,EAAU;EACvE,IAAI,CAACH,cAAc,EAAE;IACnB,MAAMI,kBAAkB,GAAGC,qBAAqB,CAACH,WAAW,CAAC;IAC7D,IAAI,CAACE,kBAAkB,EAAE;MACvB,MAAM,IAAIE,KAAK,CAAC,8DAA8D,CAAC;IACjF;IACAN,cAAc,GAAGL,OAAO,CAACS,kBAAkB,CAAC;EAC9C;EAEA,MAAMG,QAAQ,GAAGP,cAAc,CAACG,KAAK,CAAC;EACtC,IAAI,CAACI,QAAQ,EAAE;IACb,MAAM,IAAID,KAAK,CAAE,wBAAuBH,KAAM,EAAC,CAAC;EAClD;EACA,OAAO,CAAEI,QAAQ,IAAI,EAAE,GAAKA,QAAQ,KAAK,CAAE,MAAM,CAAC;AACpD;AAEA,SAASF,qBAAqBA,CAACH,WAAmB,EAAiB;EACjE,MAAMM,0BAA0B,GAAGC,sBAAW,CAACC,MAAM,CAACR,WAAW,EAAE,2BAA2B,CAAC;EAC/F,IAAIM,0BAA0B,EAAE;IAC9B,MAAMG,cAAc,GAAGC,eAAI,CAACC,OAAO,CAACL,0BAA0B,CAAC;IAC/D,MAAMJ,kBAAkB,GAAGK,sBAAW,CAACC,MAAM,CAACC,cAAc,EAAE,gCAAgC,CAAC;IAC/F,IAAIP,kBAAkB,EAAE;MACtB,OAAOA,kBAAkB;IAC3B;EACF;EACA,OAAO,IAAI;AACb"}