{"version":3,"file":"gitPatch.js","names":["_spawnAsync","data","_interopRequireDefault","require","_getenv","obj","__esModule","default","EXPO_DEBUG","boolish","applyPatchAsync","projectRoot","patchFilePath","runGitAsync","cwd","getPatchChangedLinesAsync","stdout","lines","split","changedLines","line","added","deleted","Number","args","options","stderr","spawnAsync","console","log","e","code","message"],"sources":["../../src/utils/gitPatch.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { boolish } from 'getenv';\n\nconst EXPO_DEBUG = boolish('EXPO_DEBUG', false);\n\nexport async function applyPatchAsync(projectRoot: string, patchFilePath: string) {\n  return await runGitAsync(['apply', patchFilePath], { cwd: projectRoot });\n}\n\nexport async function getPatchChangedLinesAsync(patchFilePath: string): Promise<number> {\n  const stdout = await runGitAsync(['apply', '--numstat', patchFilePath]);\n  const lines = stdout.split('\\n');\n  let changedLines = 0;\n  for (const line of lines) {\n    const [added, deleted] = line.split('\\t', 2);\n    changedLines += Number(added) + Number(deleted);\n  }\n  return changedLines;\n}\n\nasync function runGitAsync(args: string[], options?: spawnAsync.SpawnOptions): Promise<string> {\n  try {\n    const { stdout, stderr } = await spawnAsync('git', args, options);\n    if (EXPO_DEBUG) {\n      console.log(`Running \\`git ${args}\\` outputs:\\nstdout:\\n${stdout}\\nstderr:\\n${stderr}`);\n    }\n    return stdout;\n  } catch (e: any) {\n    if (e.code === 'ENOENT') {\n      e.message += `\\nGit is required to apply patches. Install Git and try again.`;\n    } else if (e.stderr) {\n      e.message += `\\nstderr:\\n${e.stderr}`;\n    }\n    throw e;\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAAAA,YAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,WAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,QAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,OAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAiC,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEjC,MAAMG,UAAU,GAAG,IAAAC,iBAAO,EAAC,YAAY,EAAE,KAAK,CAAC;AAExC,eAAeC,eAAeA,CAACC,WAAmB,EAAEC,aAAqB,EAAE;EAChF,OAAO,MAAMC,WAAW,CAAC,CAAC,OAAO,EAAED,aAAa,CAAC,EAAE;IAAEE,GAAG,EAAEH;EAAY,CAAC,CAAC;AAC1E;AAEO,eAAeI,yBAAyBA,CAACH,aAAqB,EAAmB;EACtF,MAAMI,MAAM,GAAG,MAAMH,WAAW,CAAC,CAAC,OAAO,EAAE,WAAW,EAAED,aAAa,CAAC,CAAC;EACvE,MAAMK,KAAK,GAAGD,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC;EAChC,IAAIC,YAAY,GAAG,CAAC;EACpB,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;IACxB,MAAM,CAACI,KAAK,EAAEC,OAAO,CAAC,GAAGF,IAAI,CAACF,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5CC,YAAY,IAAII,MAAM,CAACF,KAAK,CAAC,GAAGE,MAAM,CAACD,OAAO,CAAC;EACjD;EACA,OAAOH,YAAY;AACrB;AAEA,eAAeN,WAAWA,CAACW,IAAc,EAAEC,OAAiC,EAAmB;EAC7F,IAAI;IACF,MAAM;MAAET,MAAM;MAAEU;IAAO,CAAC,GAAG,MAAM,IAAAC,qBAAU,EAAC,KAAK,EAAEH,IAAI,EAAEC,OAAO,CAAC;IACjE,IAAIjB,UAAU,EAAE;MACdoB,OAAO,CAACC,GAAG,CAAE,iBAAgBL,IAAK,yBAAwBR,MAAO,cAAaU,MAAO,EAAC,CAAC;IACzF;IACA,OAAOV,MAAM;EACf,CAAC,CAAC,OAAOc,CAAM,EAAE;IACf,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,EAAE;MACvBD,CAAC,CAACE,OAAO,IAAK,gEAA+D;IAC/E,CAAC,MAAM,IAAIF,CAAC,CAACJ,MAAM,EAAE;MACnBI,CAAC,CAACE,OAAO,IAAK,cAAaF,CAAC,CAACJ,MAAO,EAAC;IACvC;IACA,MAAMI,CAAC;EACT;AACF"}