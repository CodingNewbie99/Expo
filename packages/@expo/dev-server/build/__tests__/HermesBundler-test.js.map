{"version":3,"file":"HermesBundler-test.js","sourceRoot":"","sources":["../../src/__tests__/HermesBundler-test.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ExpoConfig } from '@expo/config';\nimport path from 'path';\n\nimport {\n  getHermesBytecodeBundleVersionAsync,\n  isEnableHermesManaged,\n  isHermesBytecodeBundleAsync,\n  parseGradleProperties,\n} from '../HermesBundler';\n\ndescribe('parseGradleProperties', () => {\n  it('should return array of key-value tuple', () => {\n    const content = `\n    keyFoo=valueFoo\n    keyBar=valueBar\n    `;\n\n    expect(parseGradleProperties(content)).toEqual({\n      keyFoo: 'valueFoo',\n      keyBar: 'valueBar',\n    });\n  });\n\n  it('should keep \"=\" in value if there are multiple \"=\"', () => {\n    const content = `\n    key=a=b=c\n    `;\n\n    expect(parseGradleProperties(content)).toEqual({\n      key: 'a=b=c',\n    });\n  });\n\n  it('should exclude comment', () => {\n    const content = `\n    # This is comment\n      # comment with space prefix\n    keyFoo=valueFoo\n    `;\n\n    expect(parseGradleProperties(content)).toEqual({\n      keyFoo: 'valueFoo',\n    });\n  });\n});\n\ndescribe('getHermesBytecodeBundleVersionAsync', () => {\n  it('should return hermes bytecode version 74 for plain.74.hbc', async () => {\n    const file = path.join(__dirname, 'fixtures', 'plain.74.hbc');\n    const result = await getHermesBytecodeBundleVersionAsync(file);\n    expect(result).toBe(74);\n  });\n\n  it('should throw exception for plain javascript file', async () => {\n    const file = path.join(__dirname, 'fixtures', 'plain.js');\n    await expect(getHermesBytecodeBundleVersionAsync(file)).rejects.toThrow();\n  });\n});\n\ndescribe(isEnableHermesManaged, () => {\n  it('should support shared jsEngine key', () => {\n    const config: ExpoConfig = {\n      name: 'foo',\n      slug: 'foo',\n      sdkVersion: 'UNVERSIONED',\n      jsEngine: 'hermes',\n    };\n    expect(isEnableHermesManaged(config, 'android')).toBe(true);\n    expect(isEnableHermesManaged(config, 'ios')).toBe(true);\n  });\n\n  it('platform jsEngine should override shared jsEngine', () => {\n    const config: ExpoConfig = {\n      name: 'foo',\n      slug: 'foo',\n      sdkVersion: 'UNVERSIONED',\n      jsEngine: 'hermes',\n      android: {\n        jsEngine: 'jsc',\n      },\n      ios: {\n        jsEngine: 'jsc',\n      },\n    };\n    expect(isEnableHermesManaged(config, 'android')).toBe(false);\n    expect(isEnableHermesManaged(config, 'ios')).toBe(false);\n  });\n\n  it('should exclude old SDK', () => {\n    const config: ExpoConfig = {\n      name: 'foo',\n      slug: 'foo',\n      jsEngine: 'hermes',\n    };\n    expect(isEnableHermesManaged({ ...config, sdkVersion: '41.0.0' }, 'android')).toBe(false);\n    expect(isEnableHermesManaged({ ...config, sdkVersion: '42.0.0' }, 'ios')).toBe(false);\n  });\n});\n\ndescribe('isHermesBytecodeBundleAsync', () => {\n  it('should return true for hermes bytecode bundle file', async () => {\n    const file = path.join(__dirname, 'fixtures', 'plain.74.hbc');\n    const result = await isHermesBytecodeBundleAsync(file);\n    expect(result).toBe(true);\n  });\n\n  it('should return false for plain javascript file', async () => {\n    const file = path.join(__dirname, 'fixtures', 'plain.js');\n    const result = await isHermesBytecodeBundleAsync(file);\n    expect(result).toBe(false);\n  });\n\n  it('should throw exception for nonexistent file', async () => {\n    const file = path.join(__dirname, 'fixtures', 'nonexistent.js');\n    await expect(isHermesBytecodeBundleAsync(file)).rejects.toThrow();\n  });\n});\n\ndescribe('maybeThrowFromInconsistentEngineAsync - common', () => {\n  // To customize fs-extra mock logic, instead of importing globally,\n  // we dynamically require `maybeThrowFromInconsistentEngineAsync`,\n  // so that fs-extra inside HermesBundler could honor our mock logic.\n  let fs = require('fs-extra');\n  let { maybeThrowFromInconsistentEngineAsync } = require('../HermesBundler');\n\n  beforeAll(() => {\n    jest.resetModules();\n    jest.doMock('fs-extra');\n    fs = require('fs-extra');\n    maybeThrowFromInconsistentEngineAsync = require('../HermesBundler')\n      .maybeThrowFromInconsistentEngineAsync;\n  });\n  afterAll(() => {\n    jest.dontMock('fs-extra');\n    jest.resetModules();\n  });\n\n  it('should resolve for managed project', async () => {\n    const mockFsExistSync = fs.existsSync as jest.MockedFunction<typeof fs.existsSync>;\n    mockFsExistSync.mockReturnValue(false);\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'android',\n        /* isHermesManaged */ true\n      )\n    ).resolves.toBeUndefined();\n  });\n});\n\ndescribe('maybeThrowFromInconsistentEngineAsync - android', () => {\n  // To customize fs-extra mock logic, instead of importing globally,\n  // we dynamically require `maybeThrowFromInconsistentEngineAsync`,\n  // so that fs-extra inside HermesBundler could honor our mock logic.\n  let fs = require('fs-extra');\n  let { maybeThrowFromInconsistentEngineAsync } = require('../HermesBundler');\n\n  beforeAll(() => {\n    jest.resetModules();\n    jest.doMock('fs-extra');\n    fs = require('fs-extra');\n    maybeThrowFromInconsistentEngineAsync = require('../HermesBundler')\n      .maybeThrowFromInconsistentEngineAsync;\n  });\n  afterAll(() => {\n    jest.dontMock('fs-extra');\n    jest.resetModules();\n  });\n\n  function addMockedFiles(fileContentMap: Record<string, string>) {\n    // add mock for `fs.existsSync`\n    const mockFsExistSync = fs.existsSync as jest.MockedFunction<typeof fs.existsSync>;\n    mockFsExistSync.mockImplementation((file: string) =>\n      Object.keys(fileContentMap).includes(file)\n    );\n\n    // add mock for `fs.readFile`\n    const mockFsReadFile = fs.readFile as jest.MockedFunction<typeof fs.readFile>;\n    mockFsReadFile.mockImplementation((file: string) => {\n      for (const [fileName, content] of Object.entries(fileContentMap)) {\n        if (file === fileName) {\n          return Promise.resolve(content);\n        }\n      }\n      return Promise.reject(new Error('File not found.'));\n    });\n  }\n\n  it('should resolve if \"enableHermes: true\" in app/build.gradle and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    const appBuildGradleTestCases = [\n      `\nproject.ext.react = [\n    enableHermes: true\n]`,\n      `\nproject.ext.react = [\n    foo: 123,\n    enableHermes: true\n]`,\n      `\nproject.ext.react = [\n    foo: 123,\n    enableHermes: true, // with comments\n    bar: 123\n]`,\n    ];\n\n    for (const content of appBuildGradleTestCases) {\n      addMockedFiles({\n        '/expo/android/app/build.gradle': content,\n      });\n\n      await expect(\n        maybeThrowFromInconsistentEngineAsync(\n          '/expo',\n          '/expo/app.json',\n          'android',\n          /* isHermesManaged */ true\n        )\n      ).resolves.toBeUndefined();\n    }\n  });\n\n  it('should throw if \"enableHermes: false\" in app/build.gradle and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    const appBuildGradleTestCases = [\n      `\n// empty build.gradle`,\n      `\nproject.ext.react = [\n]`,\n      `\nproject.ext.react = [\n    enableHermes: false\n]`,\n      `\nproject.ext.react = [\n    foo: 123,\n    enableHermes: false, // with comments\n    bar: 123\n]`,\n    ];\n\n    for (const content of appBuildGradleTestCases) {\n      addMockedFiles({\n        '/expo/android/app/build.gradle': content,\n      });\n\n      await expect(\n        maybeThrowFromInconsistentEngineAsync(\n          '/expo',\n          '/expo/app.json',\n          'android',\n          /* isHermesManaged */ true\n        )\n      ).rejects.toThrow();\n    }\n  });\n\n  it('should resolve if \"expo.jsEngine=hermes\" in gradle.properties and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    addMockedFiles({\n      '/expo/android/gradle.properties': 'expo.jsEngine=hermes',\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'android',\n        /* isHermesManaged */ true\n      )\n    ).resolves.toBeUndefined();\n  });\n\n  it('should resolve if \"expo.jsEngine=hermes\" in gradle.properties but no \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    addMockedFiles({\n      '/expo/android/app/build.gradle': `\nproject.ext.react = [\n    enableHermes: true\n]`,\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'android',\n        /* isHermesManaged */ false\n      )\n    ).rejects.toThrow();\n  });\n\n  it('should resolve for sdk 41 bare project', async () => {\n    addMockedFiles({\n      '/expo/android/app/build.gradle': `\nproject.ext.react = [\n    enableHermes: false\n]`,\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'android',\n        /* isHermesManaged */ false\n      )\n    ).resolves.toBeUndefined();\n  });\n\n  it('should handle the inconsistency between app/build.gradle and gradle.properties', async () => {\n    addMockedFiles({\n      '/expo/android/app/build.gradle': `\nproject.ext.react = [\n    enableHermes: false\n]`,\n      '/expo/android/gradle.properties': `expo.jsEngine=hermes`,\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'android',\n        /* isHermesManaged */ true\n      )\n    ).rejects.toThrow();\n  });\n});\n\ndescribe('maybeThrowFromInconsistentEngineAsync - ios', () => {\n  // To customize fs-extra mock logic, instead of importing globally,\n  // we dynamically require `maybeThrowFromInconsistentEngineAsync`,\n  // so that fs-extra inside HermesBundler could honor our mock logic.\n  let fs = require('fs-extra');\n  let { maybeThrowFromInconsistentEngineAsync } = require('../HermesBundler');\n\n  function addMockedFiles(fileContentMap: Record<string, string>) {\n    // add mock for `fs.existsSync`\n    const mockFsExistSync = fs.existsSync as jest.MockedFunction<typeof fs.existsSync>;\n    mockFsExistSync.mockImplementation((file: string) =>\n      Object.keys(fileContentMap).includes(file)\n    );\n\n    // add mock for `fs.readFile`\n    const mockFsReadFile = fs.readFile as jest.MockedFunction<typeof fs.readFile>;\n    mockFsReadFile.mockImplementation((file: string) => {\n      for (const [fileName, content] of Object.entries(fileContentMap)) {\n        if (file === fileName) {\n          return Promise.resolve(content);\n        }\n      }\n      return Promise.reject(new Error('File not found.'));\n    });\n  }\n\n  beforeAll(() => {\n    jest.resetModules();\n    jest.doMock('fs-extra');\n    fs = require('fs-extra');\n    maybeThrowFromInconsistentEngineAsync = require('../HermesBundler')\n      .maybeThrowFromInconsistentEngineAsync;\n  });\n  afterAll(() => {\n    jest.dontMock('fs-extra');\n    jest.resetModules();\n  });\n\n  it('should resolve if \":hermes_enabled => true\" in Podfile and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    const podfileTestCases = [\n      `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => true\n  )`,\n      `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => true, // with comments\n  )`,\n    ];\n\n    for (const content of podfileTestCases) {\n      addMockedFiles({\n        '/expo/ios/Podfile': content,\n      });\n\n      await expect(\n        maybeThrowFromInconsistentEngineAsync(\n          '/expo',\n          '/expo/app.json',\n          'ios',\n          /* isHermesManaged */ true\n        )\n      ).resolves.toBeUndefined();\n    }\n  });\n\n  it('should throw if \":hermes_enabled => true\" in Podfile but no \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    addMockedFiles({\n      '/expo/ios/Podfile': `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => true\n  )`,\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'ios',\n        /* isHermesManaged */ false\n      )\n    ).rejects.toThrow();\n  });\n\n  it('should throw if (\":hermes_enabled => false\" or not existed in Podfile) and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    const podfileTestCases = [\n      `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => false\n  )`,\n      `\n  use_react_native!(\n    :path => config[:reactNativePath],\n  )`,\n    ];\n\n    for (const content of podfileTestCases) {\n      addMockedFiles({\n        '/expo/ios/Podfile': content,\n      });\n\n      await expect(\n        maybeThrowFromInconsistentEngineAsync(\n          '/expo',\n          '/expo/app.json',\n          'ios',\n          /* isHermesManaged */ true\n        )\n      ).rejects.toThrow();\n    }\n  });\n\n  it('should resolve if \"expo.jsEngine\": \\'hermes\\' in Podfile.properties.json and \"jsEngine: \\'hermes\\'\" in app.json', async () => {\n    addMockedFiles({\n      '/expo/ios/Podfile.properties.json': '{\"expo.jsEngine\":\"hermes\"}',\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'ios',\n        /* isHermesManaged */ true\n      )\n    ).resolves.toBeUndefined();\n  });\n\n  it('should handle the inconsistency between Podfile and Podfile.properties.json', async () => {\n    addMockedFiles({\n      '/expo/ios/Podfile': `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => false\n  )`,\n      '/expo/ios/Podfile.properties.json': '{\"expo.jsEngine\":\"hermes\"}',\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'ios',\n        /* isHermesManaged */ true\n      )\n    ).rejects.toThrow();\n  });\n\n  it('should resolve from default sdk 45 template', async () => {\n    addMockedFiles({\n      '/expo/ios/Podfile': `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => flags[:hermes_enabled] || podfile_properties['expo.jsEngine'] == 'hermes',\n    :fabric_enabled => flags[:fabric_enabled],\n    # An absolute path to your application root.\n    :app_path => \"#{Dir.pwd}/..\"\n  )`,\n      '/expo/ios/Podfile.properties.json': '{\"expo.jsEngine\":\"hermes\"}',\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'ios',\n        /* isHermesManaged */ true\n      )\n    ).resolves.toBeUndefined();\n  });\n\n  it('should resolve from default sdk 44 template', async () => {\n    addMockedFiles({\n      '/expo/ios/Podfile': `\n  use_react_native!(\n    :path => config[:reactNativePath],\n    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes'\n  )`,\n      '/expo/ios/Podfile.properties.json': '{\"expo.jsEngine\":\"hermes\"}',\n    });\n\n    await expect(\n      maybeThrowFromInconsistentEngineAsync(\n        '/expo',\n        '/expo/app.json',\n        'ios',\n        /* isHermesManaged */ true\n      )\n    ).resolves.toBeUndefined();\n  });\n});\n"]}