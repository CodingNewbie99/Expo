{"version":3,"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashXcodeProject.ts"],"names":["debug","require","withIosSplashXcodeProject","config","modResults","setSplashStoryboardAsync","projectName","modRequest","project","storyboardFilePath","path","join","STORYBOARD_FILE_PATH","hasFile","IOSConfig","XcodeUtils","addResourceFileToGroup","filepath","groupName"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CACZ,uDADY,CAAd;;AAIO,MAAMC,yBAAuC,GAAGC,MAAM,IAAI;AAC/D,SAAO,uCAAiBA,MAAjB,EAAyB,MAAMA,MAAN,IAAgB;AAC9CA,IAAAA,MAAM,CAACC,UAAP,GAAoB,MAAMC,wBAAwB,CAAC;AACjDC,MAAAA,WAAW,EAAEH,MAAM,CAACI,UAAP,CAAkBD,WADkB;AAEjDE,MAAAA,OAAO,EAAEL,MAAM,CAACC;AAFiC,KAAD,CAAlD;AAIA,WAAOD,MAAP;AACD,GANM,CAAP;AAOD,CARM;AAUP;AACA;AACA;AACA;;;;;AACO,eAAeE,wBAAf,CAAwC;AAC7CC,EAAAA,WAD6C;AAE7CE,EAAAA;AAF6C,CAAxC,EAMmB;AACxB;AACA;AACA,QAAMC,kBAAkB,GAAGC,gBAAKC,IAAL,CAAUL,WAAV,EAAuBM,qDAAvB,CAA3B;;AACA,MAAI,CAACJ,OAAO,CAACK,OAAR,CAAgBJ,kBAAhB,CAAL,EAA0C;AACxCT,IAAAA,KAAK,CAAE,UAASS,kBAAmB,mBAA9B,CAAL;;AACAK,+BAAUC,UAAV,CAAqBC,sBAArB,CAA4C;AAC1CC,MAAAA,QAAQ,EAAER,kBADgC;AAE1CS,MAAAA,SAAS,EAAEZ,WAF+B;AAG1CE,MAAAA;AAH0C,KAA5C;AAKD;;AAED,SAAOA,OAAP;AACD","sourcesContent":["import { ConfigPlugin, IOSConfig, withXcodeProject } from '@expo/config-plugins';\nimport path from 'path';\nimport { XcodeProject } from 'xcode';\n\nimport { STORYBOARD_FILE_PATH } from './withIosSplashScreenStoryboard';\n\nconst debug = require('debug')(\n  'expo:prebuild-config:expo-splash-screen:ios:xcodeproj'\n) as typeof console.log;\n\nexport const withIosSplashXcodeProject: ConfigPlugin = config => {\n  return withXcodeProject(config, async config => {\n    config.modResults = await setSplashStoryboardAsync({\n      projectName: config.modRequest.projectName!,\n      project: config.modResults,\n    });\n    return config;\n  });\n};\n\n/**\n * Modifies `.pbxproj` by:\n * - adding reference for `.storyboard` file\n */\nexport async function setSplashStoryboardAsync({\n  projectName,\n  project,\n}: {\n  projectName: string;\n  project: XcodeProject;\n}): Promise<XcodeProject> {\n  // Check if `${projectName}/SplashScreen.storyboard` already exists\n  // Path relative to `ios` directory\n  const storyboardFilePath = path.join(projectName, STORYBOARD_FILE_PATH);\n  if (!project.hasFile(storyboardFilePath)) {\n    debug(`Adding ${storyboardFilePath} to Xcode project`);\n    IOSConfig.XcodeUtils.addResourceFileToGroup({\n      filepath: storyboardFilePath,\n      groupName: projectName,\n      project,\n    });\n  }\n\n  return project;\n}\n"],"file":"withIosSplashXcodeProject.js"}