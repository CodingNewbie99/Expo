{"version":3,"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashScreen.ts"],"names":["debug","withIosSplashScreen","config","splash","withIosSplashInfoPlist","withIosSplashAssets","withIosSplashScreenImage","withIosSplashXcodeProject","withIosSplashScreenStoryboardBaseMod"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,MAAMA,KAAK,GAAG,sBAAM,6CAAN,CAAd;;AAEO,MAAMC,mBAA4E,GAAG,CAC1FC,MAD0F,EAE1FC,MAF0F,KAGvF;AACH;AACA,6DAAgCD,MAAhC,EAFG,CAIH;;AACA,MAAI,CAACC,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,8CAAmBD,MAAnB,CAAT;AACD,GAFD,MAEO;AACLF,IAAAA,KAAK,CAAE,+BAAF,CAAL;AACD;;AAEDA,EAAAA,KAAK,CAAE,SAAF,EAAYG,MAAZ,CAAL;AAEA,SAAO,kCAAYD,MAAZ,EAAoB,CACzB,CAACE,gDAAD,EAAyBD,MAAzB,CADyB,EAEzB,CAACE,0CAAD,EAAsBF,MAAtB,CAFyB,EAGzB;AACA,GAACG,8DAAD,EAA2BH,MAA3B,CAJyB,EAKzB;AACA;AACAI,wDAPyB,EAQzB;AACAC,uEATyB,CAApB,CAAP;AAWD,CA3BM","sourcesContent":["import { ConfigPlugin, withPlugins } from '@expo/config-plugins';\nimport Debug from 'debug';\n\nimport {\n  getIosSplashConfig,\n  IOSSplashConfig,\n  warnUnsupportedSplashProperties,\n} from './getIosSplashConfig';\nimport { withIosSplashAssets } from './withIosSplashAssets';\nimport { withIosSplashInfoPlist } from './withIosSplashInfoPlist';\nimport { withIosSplashScreenStoryboardBaseMod } from './withIosSplashScreenStoryboard';\nimport { withIosSplashXcodeProject } from './withIosSplashXcodeProject';\nimport { withIosSplashScreenImage } from './wtihIosSplashScreenStoryboardImage';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios');\n\nexport const withIosSplashScreen: ConfigPlugin<IOSSplashConfig | undefined | null | void> = (\n  config,\n  splash\n) => {\n  // only warn once\n  warnUnsupportedSplashProperties(config);\n\n  // If the user didn't specify a splash object, infer the splash object from the Expo config.\n  if (!splash) {\n    splash = getIosSplashConfig(config);\n  } else {\n    debug(`custom splash config provided`);\n  }\n\n  debug(`config:`, splash);\n\n  return withPlugins(config, [\n    [withIosSplashInfoPlist, splash],\n    [withIosSplashAssets, splash],\n    // Add the image settings to the storyboard.\n    [withIosSplashScreenImage, splash],\n    // Link storyboard to xcode project.\n    // TODO: Maybe fold this into the base mod.\n    withIosSplashXcodeProject,\n    // Insert the base mod last, no other ios.splashScreenStoryboard mods can be added after this.\n    withIosSplashScreenStoryboardBaseMod,\n  ]);\n};\n"],"file":"withIosSplashScreen.js"}