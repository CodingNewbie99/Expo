{"version":3,"file":"buildAsyncRequire.test.js","sourceRoot":"","sources":["../../../src/async-require/__tests__/buildAsyncRequire.test.ts"],"names":[],"mappings":";;;AAAA,4DAAyD;AACzD,8CAAgD;AAEzC,MAAM,MAAM,GAAG,CACpB,EAAK,EACmB,EAAE,CAAC,EAA4B,CAAC;AAF7C,QAAA,MAAM,UAEuC;AAE1D,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC;IAChC,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,GAAE,CAAC,CAAC;CACzC,CAAC,CAAC,CAAC;AAEJ,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;AACzC,UAAU,CAAC,GAAG,EAAE;IACd,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,aAAa,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,GAAG,EAAE;IACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,WAAW,CAAC;AACrC,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,YAAY,GAAG,IAAA,qCAAiB,GAAE,CAAC;IACzC,MAAM,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,qFAAqF,EAAE,KAAK,IAAI,EAAE;IACnG,MAAM,YAAY,GAAG,IAAA,qCAAiB,GAAE,CAAC;IAEzC,MAAM,QAAQ,GAAG,YAAY,CAAC,4BAA4B,CAAC,CAAC;IAC5D,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAE9C,kCAAkC;IAClC,MAAM,CAAC,4BAAe,CAAC,CAAC,cAAc,CAAC,4BAA4B,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC","sourcesContent":["import { buildAsyncRequire } from \"../buildAsyncRequire\";\nimport { loadBundleAsync } from \"../loadBundle\";\n\nexport const asMock = <T extends (...args: any[]) => any>(\n  fn: T\n): jest.MockedFunction<T> => fn as jest.MockedFunction<T>;\n\njest.mock(\"../loadBundle\", () => ({\n  loadBundleAsync: jest.fn(async () => {}),\n}));\n\nconst originalEnv = process.env.NODE_ENV;\nbeforeEach(() => {\n  process.env.NODE_ENV = \"development\";\n});\n\nafterAll(() => {\n  process.env.NODE_ENV = originalEnv;\n});\n\nit(`builds required object`, async () => {\n  const asyncRequire = buildAsyncRequire();\n  expect(asyncRequire).toBeInstanceOf(Function);\n});\n\nit(`loads the module with \\`loadBundleAsync\\` if the module has not been loaded already`, async () => {\n  const asyncRequire = buildAsyncRequire();\n\n  const myModule = asyncRequire(\"/bacon.bundle?platform=ios\");\n  expect(myModule).toEqual(expect.any(Promise));\n\n  // Did attempt to fetch the bundle\n  expect(loadBundleAsync).toBeCalledWith(\"/bacon.bundle?platform=ios\");\n});\n"]}