{"version":3,"file":"loadBundle.test.ios.js","sourceRoot":"","sources":["../../../src/async-require/__tests__/loadBundle.test.ios.ts"],"names":[],"mappings":"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","sourcesContent":["import HMRClient from \"../../HMRClient\";\nimport LoadingView from \"../../LoadingView\";\nimport { fetchThenEvalAsync } from \"../fetchThenEval\";\nimport { loadBundleAsync } from \"../loadBundle\";\n\njest.mock(\"../../getDevServer\", () =>\n  jest.fn(() => ({\n    bundleLoadedFromServer: true,\n    fullBundleUrl:\n      \"http://localhost:19000?platform=android&modulesOnly=true&runModule=false&runtimeBytecodeVersion=null\",\n    url: \"http://localhost:19000/\",\n  }))\n);\n\njest.mock(\"../fetchThenEval\", () => ({\n  fetchThenEvalAsync: jest.fn(async (): Promise<void> => {}),\n}));\n\njest.mock(\"../../HMRClient\", () => ({\n  __esModule: true,\n  default: { registerBundle: jest.fn() },\n}));\n\njest.mock(\"../../LoadingView\", () => ({\n  showMessage: jest.fn(),\n  hide: jest.fn(),\n}));\n\nconst originalEnv = process.env.NODE_ENV;\n\nafterEach(() => {\n  process.env.NODE_ENV = originalEnv;\n\n  if (typeof location !== \"undefined\") {\n    delete (global as any).location;\n  }\n});\n\nit(\"loads a bundle\", async () => {\n  process.env.NODE_ENV = \"development\";\n  await loadBundleAsync(\n    \"Second.bundle?platform=ios&modulesOnly=true&runModule=false&runtimeBytecodeVersion=\"\n  );\n  expect(LoadingView.showMessage).toBeCalledWith(\"Downloading...\", \"load\");\n  expect(LoadingView.hide).toBeCalledWith();\n  const url =\n    \"http://localhost:19000/Second.bundle?platform=ios&modulesOnly=true&runModule=false&runtimeBytecodeVersion=\";\n  expect(HMRClient.registerBundle).toBeCalledWith(url);\n  expect(fetchThenEvalAsync).toBeCalledWith(url);\n});\n\nit(\"asserts in production when attempting to load a bundle and the user-defined origin is missing.\", async () => {\n  process.env.NODE_ENV = \"production\";\n\n  await expect(\n    loadBundleAsync(\n      \"Second.bundle?platform=ios&modulesOnly=true&runModule=false&runtimeBytecodeVersion=\"\n    )\n  ).rejects.toThrow();\n  expect(LoadingView.showMessage).not.toBeCalled();\n  expect(LoadingView.hide).not.toBeCalled();\n  expect(HMRClient.registerBundle).not.toBeCalled();\n  expect(fetchThenEvalAsync).not.toBeCalled();\n});\n\nit(\"loads a bundle in production with user-defined location.origin\", async () => {\n  process.env.NODE_ENV = \"production\";\n\n  (global as any).location = {\n    origin: \"https://example.com\",\n  };\n\n  await loadBundleAsync(\"/_expo/js/index.bundle\");\n  expect(LoadingView.showMessage).not.toBeCalled();\n  expect(LoadingView.hide).not.toBeCalled();\n  const url = \"https://example.com/_expo/js/index.bundle\";\n  expect(HMRClient.registerBundle).not.toBeCalled();\n  expect(fetchThenEvalAsync).toBeCalledWith(url);\n});\n"]}