// Generated by Expo CLI
import '@expo/metro-runtime';

import { useClient, WebContext } from 'expo/dom/internal';
// Add web error box
import { renderRootComponent } from 'expo-router/build/renderRootComponent';
import React from 'react';

function ActionsWrapper(props) {
  const client = useClient();
  const [nativeProps, setNativeProps] = React.useState({});
  const [context, setContext] = React.useState({ linkTo() {} });

  React.useEffect(() => {
    client.context.subscribe(async (context) => setContext(context));
    client.props.subscribe(async (props) => setNativeProps(props));
  }, [client]);

  const AppModule = React.useMemo(() => {
    return React.lazy(async () => {
      const AppModule = await import('[$$GENERATED_ENTRY]');

      if (!AppModule) {
        throw new Error('No exports from module: [$$GENERATED_ENTRY]');
      }

      if (!AppModule.default) {
        return {
          default: () =>
            React.createElement(
              'div',
              undefined,
              'Missing default export in module: [$$GENERATED_ENTRY]'
            ),
        };
      }

      return AppModule;
    });
  }, []);

  return (
    <React.Suspense fallback={null}>
      <WebContext.Provider value={context}>
        <AppModule {...props} {...nativeProps} />
      </WebContext.Provider>
    </React.Suspense>
  );
}

renderRootComponent(ActionsWrapper);
