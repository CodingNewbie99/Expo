/**
 * Automatically generated by expo-modules-test-core.
 *
 * This autogenerated file provides a mock for native Expo module,
 * and works out of the box with the expo jest preset.
 *  */

export type CalendarEntity = any;

export type CalendarRecord = any;

export type Event = any;

export type RecurringEventOptions = any;

export type Reminder = any;

export async function getCalendarsAsync(type: CalendarEntity | undefined): Promise<
  {
    [key: string]: any | undefined;
  }[]
> {
  return [];
}

export async function getDefaultCalendarAsync(): Promise<{
  [key: string]: any;
}> {
  return {};
}

export async function saveCalendarAsync(details: CalendarRecord): Promise<string> {
  return '';
}

export async function deleteCalendarAsync(calendarId: string): Promise<any> {}

export async function getEventsAsync(
  startDateStr: string | number,
  endDateStr: string | number,
  calendarIds: string[]
): Promise<
  {
    [key: string]: any | undefined;
  }[]
> {
  return [];
}

export async function getEventByIdAsync(
  eventId: string,
  startDateStr: (string | number) | undefined
): Promise<{
  [key: string]: any | undefined;
}> {
  return {};
}

export async function saveEventAsync(
  event: Event,
  options: RecurringEventOptions
): Promise<string> {
  return '';
}

export async function deleteEventAsync(
  event: Event,
  options: RecurringEventOptions
): Promise<any> {}

export async function getAttendeesForEventAsync(event: Event): Promise<
  {
    [key: string]: any | undefined;
  }[]
> {
  return [];
}

export async function getRemindersAsync(
  startDateStr: string,
  endDateStr: string,
  calendarIds: (string | undefined)[],
  status: string | undefined
): Promise<any> {}

export async function getReminderByIdAsync(reminderId: string): Promise<{
  [key: string]: any | undefined;
}> {
  return {};
}

export async function saveReminderAsync(details: Reminder): Promise<string> {
  return '';
}

export async function deleteReminderAsync(reminderId: string): Promise<any> {}

export async function getSourcesAsync(): Promise<any> {}

export async function getSourceByIdAsync(sourceId: string): Promise<{
  [key: string]: any | undefined;
}> {
  return {};
}

export async function getCalendarPermissionsAsync(): Promise<any> {}

export async function requestCalendarPermissionsAsync(): Promise<any> {}

export async function getRemindersPermissionsAsync(): Promise<any> {}

export async function requestRemindersPermissionsAsync(): Promise<any> {}
