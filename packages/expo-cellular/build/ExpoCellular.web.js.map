{"version":3,"file":"ExpoCellular.web.js","sourceRoot":"","sources":["../src/ExpoCellular.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAgB,MAAM,kBAAkB,CAAC;AAEpE,eAAe;IACb,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,0BAA0B;QAC9B,MAAM,UAAU,GACd,SAAS,CAAC,YAAY,CAAC;YACvB,SAAS,CAAC,eAAe,CAAC;YAC1B,SAAS,CAAC,kBAAkB,CAAC;YAC7B,IAAI,CAAC;QACP,IAAI,UAAU,KAAK,IAAI,EAAE;YACvB,QAAQ,UAAU,CAAC,aAAa,EAAE;gBAChC,KAAK,SAAS,CAAC;gBACf,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC;oBACE,OAAO,kBAAkB,CAAC,OAAO,CAAC;aACrC;SACF;aAAM;YACL,OAAO,kBAAkB,CAAC,OAAO,CAAC;SACnC;IACH,CAAC;IACD,KAAK,CAAC,2BAA2B;QAC/B,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,UAAU,EAAE,MAAM,IAAI,CAAC,0BAA0B,EAAE;SACpD,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { CellularGeneration, CellularInfo } from './Cellular.types';\n\nexport default {\n  get allowsVoip(): null {\n    return null;\n  },\n  get carrier(): null {\n    return null;\n  },\n  get isoCountryCode(): null {\n    return null;\n  },\n  get mobileCountryCode(): null {\n    return null;\n  },\n  get mobileNetworkCode(): null {\n    return null;\n  },\n  async getCellularGenerationAsync(): Promise<CellularGeneration> {\n    const connection =\n      navigator['connection'] ||\n      navigator['mozConnection'] ||\n      navigator['webkitConnection'] ||\n      null;\n    if (connection !== null) {\n      switch (connection.effectiveType) {\n        case 'slow-2g':\n        case '2g':\n          return CellularGeneration.CELLULAR_2G;\n        case '3g':\n          return CellularGeneration.CELLULAR_3G;\n        case '4g':\n          return CellularGeneration.CELLULAR_4G;\n        default:\n          return CellularGeneration.UNKNOWN;\n      }\n    } else {\n      return CellularGeneration.UNKNOWN;\n    }\n  },\n  async getCurrentCellularInfoAsync(): Promise<CellularInfo> {\n    return {\n      allowsVoip: this.allowsVoip,\n      isoCountryCode: this.isoCountryCode,\n      carrier: this.carrier,\n      mobileCountryCode: this.mobileCountryCode,\n      mobileNetworkCode: this.mobileNetworkCode,\n      generation: await this.getCellularGenerationAsync(),\n    };\n  },\n};\n"]}