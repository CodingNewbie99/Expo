{"version":3,"file":"ScreenCapture.js","sourceRoot":"","sources":["../src/ScreenCapture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAEpD;;;;;;;;;;;;;;;;;;GAkBG;AACH,MAAM,CAAC,KAAK,UAAU,yBAAyB,CAAC,GAAG,GAAG,SAAS;IAC7D,MAAM,iBAAiB,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;AACpD,CAAC;AAED;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,GAAG,GAAG,SAAS;IAC3D,MAAM,iBAAiB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAClD,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,uBAAuB,CAAC,GAAG,GAAG,SAAS;IACrD,SAAS,CAAC,GAAG,EAAE;QACb,yBAAyB,CAAC,GAAG,CAAC,CAAC;QAE/B,OAAO,GAAG,EAAE;YACV,uBAAuB,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC","sourcesContent":["import { useEffect } from 'react';\n\nimport ExpoScreenCapture from './ExpoScreenCapture';\n\n/**\n * Prevents screenshots and screen recordings. If you are\n * already preventing screen capture, this method does nothing.\n *\n * On iOS, this will only prevent screen recordings, and is only\n * available on iOS 11 and newer. On older iOS versions, this method\n * does nothing.\n *\n * @param tag Optional. This will prevent multiple instances of the\n * preventScreenCaptureAsync and allowScreenCaptureAsync methods\n * from conflicting with each other. If provided, you will need to call\n * allowScreenCaptureAsync with the same tag in order to re-enable\n * screen capturing. Defaults to 'default'.\n *\n * @example\n * ```typescript\n * preventScreenCaptureAsync();\n * ```\n */\nexport async function preventScreenCaptureAsync(tag = 'default'): Promise<void> {\n  await ExpoScreenCapture.preventScreenCapture(tag);\n}\n\n/**\n * Reallows screenshots and recordings. If you haven't called\n * `preventScreenCapture()` yet, this method does nothing.\n *\n * @param tag Optional. This will prevent multiple instances of the\n * preventScreenCaptureAsync and allowScreenCaptureAsync methods\n * from conflicting with each other. If provided, must be the same as the tag\n * passed to preventScreenCaptureAsync in order to re-enable\n * screen capturing. Defaults to 'default'.\n *\n * @example\n * ```typescript\n * allowScreenCaptureAsync();\n * ```\n */\nexport async function allowScreenCaptureAsync(tag = 'default'): Promise<void> {\n  await ExpoScreenCapture.allowScreenCapture(tag);\n}\n\n/**\n * React hook for preventing screenshots and screen recordings\n * while the component is mounted.\n *\n * @param tag Optional. If provided, this will prevent multiple instances of\n * this hook or the preventScreenCaptureAsync and allowScreenCaptureAsync\n * methods from conflicting with each other. Defaults to 'default'.\n *\n * @example\n * ```typescript\n * usePreventScreenCapture();\n * ```\n */\nexport function usePreventScreenCapture(tag = 'default'): void {\n  useEffect(() => {\n    preventScreenCaptureAsync(tag);\n\n    return () => {\n      allowScreenCaptureAsync(tag);\n    };\n  }, []);\n}\n"]}