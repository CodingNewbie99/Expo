{"version":3,"file":"FontLoader.web.js","sourceRoot":"","sources":["../src/FontLoader.web.ts"],"names":[],"mappings":"AACA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAG9C,MAAM,UAAU,sBAAsB,CAAC,IAAY;IACjD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,MAAkB;IAClD,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,KAAK,IAAI,MAAM,EAAE;QACjD,OAAO;YACL,aAAa;YACb,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,aAAa;YACb,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ;SACnC,CAAC;KACH;IAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,MAAM,IAAI,KAAK,CACb,mBAAmB,OAAO,MAAM,kDAAkD,CACnF,CAAC;KACH;IAED,OAAO;QACL,GAAG,EAAE,MAAM;KACZ,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,IAAY,EACZ,KAA2B;IAE3B,MAAM,KAAK,GAAG,KAAc,CAAC;IAC7B,IAAI,KAAK,CAAC,aAAa,EAAE;QACvB,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;KACjG;IAED,MAAM,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAY;IAC5C,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { Asset } from 'expo-asset';\nimport ExpoFontLoader from './ExpoFontLoader';\nimport { FontSource, FontResource } from './Font.types';\n\nexport function fontFamilyNeedsScoping(name: string): boolean {\n  return false;\n}\n\nexport function getAssetForSource(source: FontSource): Asset | FontResource {\n  if (typeof source === 'object' && 'uri' in source) {\n    return {\n      // @ts-ignore\n      display: source.display,\n      // @ts-ignore\n      uri: source.uri || source.localUri,\n    };\n  }\n\n  if (typeof source !== 'string') {\n    throw new Error(\n      `Unexpected type ${typeof source} expected a URI string or Asset from expo-asset.`\n    );\n  }\n\n  return {\n    uri: source,\n  };\n}\n\nexport async function loadSingleFontAsync(\n  name: string,\n  input: Asset | FontResource\n): Promise<void> {\n  const asset = input as Asset;\n  if (asset.downloadAsync) {\n    throw new Error('expo-font: loadSingleFontAsync expected an asset of type FontResource on web');\n  }\n\n  await ExpoFontLoader.loadAsync(name, input);\n}\n\nexport function getNativeFontName(name: string): string {\n  return name;\n}\n"]}