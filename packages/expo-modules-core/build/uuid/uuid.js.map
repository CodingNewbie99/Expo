{"version":3,"file":"uuid.js","sourceRoot":"","sources":["../../src/uuid/uuid.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EAAQ,eAAe,EAAE,MAAM,cAAc,CAAC;AAErD,MAAM,YAAY,GAAG,UAAU,EAAE,IAAI,EAAE,MAAM,CAAC;AAC9C,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,IAAY,EAAE,SAA8C;IACzF,MAAM,eAAe,GACnB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAE3F,sEAAsE;IACtE,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;QAClC,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;KAClF;IAED,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,KAAK,CAAC,iFAAiF,CAAC,CAAC;KAChG;IAED,OAAO,YAAY,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAS;IACxB,EAAE,EAAE,MAAM;IACV,SAAS,EAAE,eAAe;CAC3B,CAAC","sourcesContent":["import bytesToUuid from './lib/bytesToUuid';\nimport { Uuid, Uuidv5Namespace } from './uuid.types';\n\nconst nativeUuidv5 = globalThis?.expo?.uuidv5;\nexport default function uuidv5(name: string, namespace: Uuidv5Namespace | string | number[]) {\n  const parsedNamespace =\n    Array.isArray(namespace) && namespace.length === 16 ? bytesToUuid(namespace) : namespace;\n\n  // If parsed namespace is still an array it means that it wasn't valid\n  if (Array.isArray(parsedNamespace)) {\n    throw new Error('`namespace` must be uuid string or an Array of 16 byte values');\n  }\n\n  if (!nativeUuidv5) {\n    throw Error(\"Native UUID type 5 generator implementation wasn't found in `expo-modules-core`\");\n  }\n\n  return nativeUuidv5(name, parsedNamespace);\n}\n\nexport const uuid: Uuid = {\n  v5: uuidv5,\n  namespace: Uuidv5Namespace,\n};\n"]}