{"version":3,"file":"uuid.web.js","sourceRoot":"","sources":["../../src/uuid/uuid.web.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,YAAY,CAAC;AAC9B,OAAO,GAAG,MAAM,WAAW,CAAC;AAI5B,uEAAuE;AACvE,MAAM,YAAY,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAChF,MAAM,UAAU,GACd,YAAY,IAAI,YAAY,CAAC,UAAU,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAExF,SAAS,MAAM;IACb,IAAI,CAAC,UAAU,EAAE;QACf,MAAM,KAAK,CAAC,0DAA0D,CAAC,CAAC;KACzE;IACD,OAAO,UAAU,EAAE,CAAC;AACtB,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAS;IACxB,EAAE,EAAE,MAAM;IACV,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,CAAC","sourcesContent":["import sha1 from './lib/sha1';\nimport v35 from './lib/v35';\nimport { Uuid } from './uuid.types';\ntype UUID = string;\n\n// In some cases it is necessary to explicitly import the crypto module\nconst cryptoObject = typeof crypto === 'undefined' ? require('crypto') : crypto;\nconst randomUuid =\n  cryptoObject && cryptoObject.randomUUID && cryptoObject.randomUUID.bind(cryptoObject);\n\nfunction uuidv4(): UUID {\n  if (!randomUuid) {\n    throw Error(\"The browser doesn't support `crypto.randomUUID` function\");\n  }\n  return randomUuid();\n}\n\nexport const uuid: Uuid = {\n  v4: uuidv4,\n  v5: v35('v5', 0x50, sha1),\n};\n"]}