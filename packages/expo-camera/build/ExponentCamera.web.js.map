{"version":3,"file":"ExponentCamera.web.js","sourceRoot":"","sources":["../src/ExponentCamera.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError } from '@unimodules/core';\r\nimport * as React from 'react';\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\r\nimport createElement from 'react-native-web/dist/exports/createElement';\r\n\r\nimport {\r\n  CameraCapturedPicture,\r\n  CameraNativeProps,\r\n  CameraPictureOptions,\r\n  CameraType,\r\n} from './Camera.types';\r\nimport CameraManager from './ExponentCameraManager.web';\r\nimport { capture } from './WebCameraUtils';\r\nimport { PictureSizes } from './WebConstants';\r\nimport { useWebCameraStream } from './useWebCameraStream';\r\nimport { useWebQRScanner } from './useWebQRScanner';\r\n\r\nexport interface ExponentCameraRef {\r\n  getAvailablePictureSizes: (ratio: string) => Promise<string[]>;\r\n  takePicture: (options: CameraPictureOptions) => Promise<CameraCapturedPicture>;\r\n  resumePreview: () => Promise<void>;\r\n  pausePreview: () => Promise<void>;\r\n}\r\n\r\nconst ExponentCamera = React.forwardRef(\r\n  (\r\n    { type, pictureSize, poster, ...props }: CameraNativeProps & { children?: React.ReactNode },\r\n    ref: React.Ref<ExponentCameraRef>\r\n  ) => {\r\n    const video = React.useRef<HTMLVideoElement | null>(null);\r\n\r\n    const native = useWebCameraStream(video, type as CameraType, props, {\r\n      onCameraReady() {\r\n        if (props.onCameraReady) {\r\n          props.onCameraReady();\r\n        }\r\n      },\r\n      onMountError: props.onMountError,\r\n    });\r\n\r\n    const isQRScannerEnabled = React.useMemo<boolean>(() => {\r\n      return !!(\r\n        props.barCodeScannerSettings?.barCodeTypes?.includes('qr') && !!props.onBarCodeScanned\r\n      );\r\n    }, [props.barCodeScannerSettings?.barCodeTypes, props.onBarCodeScanned]);\r\n\r\n    useWebQRScanner(video, {\r\n      interval: props.barCodeScannerSettings?.interval,\r\n      isEnabled: isQRScannerEnabled,\r\n      captureOptions: { scale: 1, isImageMirror: native.type === CameraType.front },\r\n      onScanned(event) {\r\n        if (props.onBarCodeScanned) {\r\n          props.onBarCodeScanned(event);\r\n        }\r\n      },\r\n      // onError: props.onMountError,\r\n    });\r\n\r\n    // const [pause, setPaused]\r\n\r\n    React.useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        async getAvailablePictureSizes(ratio: string): Promise<string[]> {\r\n          return PictureSizes;\r\n        },\r\n        async takePicture(options: CameraPictureOptions): Promise<CameraCapturedPicture> {\r\n          if (!video.current || video.current?.readyState !== video.current?.HAVE_ENOUGH_DATA) {\r\n            throw new CodedError(\r\n              'ERR_CAMERA_NOT_READY',\r\n              'HTMLVideoElement does not have enough camera data to construct an image yet.'\r\n            );\r\n          }\r\n          const settings = native.mediaTrackSettings;\r\n          if (!settings) {\r\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\r\n          }\r\n\r\n          return capture(video.current, settings, {\r\n            ...options,\r\n            // This will always be defined, the option gets added to a queue in the upper-level. We should replace the original so it isn't called twice.\r\n            onPictureSaved(picture) {\r\n              if (options.onPictureSaved) {\r\n                options.onPictureSaved(picture);\r\n              }\r\n              if (props.onPictureSaved) {\r\n                props.onPictureSaved({ nativeEvent: { data: picture, id: -1 } });\r\n              }\r\n            },\r\n          });\r\n        },\r\n        async resumePreview(): Promise<void> {\r\n          if (video.current) {\r\n            video.current.play();\r\n          }\r\n        },\r\n        async pausePreview(): Promise<void> {\r\n          if (video.current) {\r\n            video.current.pause();\r\n          }\r\n        },\r\n      }),\r\n      [native.mediaTrackSettings, props.onPictureSaved]\r\n    );\r\n\r\n    // TODO(Bacon): Create a universal prop, on native the microphone is only used when recording videos.\r\n    // Because we don't support recording video in the browser we don't need the user to give microphone permissions.\r\n    const isMuted = true;\r\n\r\n    const style = React.useMemo<StyleProp<ViewStyle>>(() => {\r\n      const isFrontFacingCamera = native.type === CameraManager.Type.front;\r\n      return [\r\n        StyleSheet.absoluteFill,\r\n        styles.video,\r\n        {\r\n          // Flip the camera\r\n          transform: isFrontFacingCamera ? [{ scaleX: -1 }] : undefined,\r\n        },\r\n      ];\r\n    }, [native.type]);\r\n\r\n    return (\r\n      <View pointerEvents=\"box-none\" style={[styles.videoWrapper, props.style]}>\r\n        <Video\r\n          autoPlay\r\n          playsInline\r\n          muted={isMuted}\r\n          poster={poster}\r\n          // webkitPlaysinline\r\n          pointerEvents={props.pointerEvents}\r\n          ref={video}\r\n          style={style}\r\n        />\r\n        {props.children}\r\n      </View>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ExponentCamera;\r\n\r\nconst Video = React.forwardRef(\r\n  (\r\n    props: React.ComponentProps<typeof View> & {\r\n      autoPlay?: boolean;\r\n      playsInline?: boolean;\r\n      muted?: boolean;\r\n      poster?: string;\r\n    },\r\n    ref: React.Ref<HTMLVideoElement>\r\n  ) => createElement('video', { ...props, ref })\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  videoWrapper: {\r\n    flex: 1,\r\n    alignItems: 'stretch',\r\n  },\r\n  video: {\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n  },\r\n});\r\n"]}