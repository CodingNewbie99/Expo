{"version":3,"file":"CameraUtils.js","sourceRoot":"","sources":["../../src/CameraModule/CameraUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\r\n\r\nimport { PictureOptions } from './../Camera.types';\r\nimport { CameraType, CaptureOptions, ImageSize, ImageType } from './CameraModule.types';\r\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from './constants';\r\n\r\ninterface ConstrainLongRange {\r\n  max?: number;\r\n  min?: number;\r\n  exact?: number;\r\n  ideal?: number;\r\n}\r\n\r\nexport function getImageSize(videoWidth: number, videoHeight: number, scale: number): ImageSize {\r\n  const width = videoWidth * scale;\r\n  const ratio = videoWidth / width;\r\n  const height = videoHeight / ratio;\r\n\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function toDataURL(\r\n  canvas: HTMLCanvasElement,\r\n  imageType: ImageType,\r\n  quality: number\r\n): string {\r\n  invariant(\r\n    Object.values(ImageType).includes(imageType),\r\n    `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${Object.values(\r\n      ImageType\r\n    ).join(', ')}`\r\n  );\r\n\r\n  const format = ImageTypeFormat[imageType];\r\n  if (imageType === ImageType.jpg) {\r\n    invariant(\r\n      quality <= 1 && quality >= 0,\r\n      `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`\r\n    );\r\n    return canvas.toDataURL(format, quality);\r\n  } else {\r\n    return canvas.toDataURL(format);\r\n  }\r\n}\r\n\r\nexport function hasValidConstraints(\r\n  preferredCameraType?: CameraType,\r\n  width?: number | ConstrainLongRange,\r\n  height?: number | ConstrainLongRange\r\n): boolean {\r\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\r\n}\r\n\r\nfunction ensureCaptureOptions(config: any): CaptureOptions {\r\n  const captureOptions = {\r\n    scale: 1,\r\n    imageType: ImageType.png,\r\n    isImageMirror: false,\r\n  };\r\n\r\n  for (const key in config) {\r\n    if (key in config && config[key] !== undefined && key in captureOptions) {\r\n      captureOptions[key] = config[key];\r\n    }\r\n  }\r\n  return captureOptions;\r\n}\r\n\r\nconst DEFAULT_QUALITY = 0.92;\r\n\r\nexport function captureImage(video: HTMLVideoElement, pictureOptions: PictureOptions): string {\r\n  const config = ensureCaptureOptions(pictureOptions);\r\n  const { scale, imageType, quality = DEFAULT_QUALITY, isImageMirror } = config;\r\n\r\n  const { videoWidth, videoHeight } = video;\r\n  const { width, height } = getImageSize(videoWidth, videoHeight, scale);\r\n\r\n  // Build the canvas size and draw the camera image to the context from video\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  const context = canvas.getContext('2d');\r\n\r\n  //TODO: Bacon: useless\r\n  if (!context) throw new Error('Context is not defined');\r\n  // Flip horizontally (as css transform: rotateY(180deg))\r\n  if (isImageMirror) {\r\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\r\n  }\r\n\r\n  context.drawImage(video, 0, 0, width, height);\r\n\r\n  const base64 = toDataURL(canvas, imageType, quality);\r\n  return base64;\r\n}\r\n\r\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\r\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n    return navigator.mediaDevices.getUserMedia(constraints);\r\n  } else {\r\n    let _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'];\r\n    return new Promise((resolve, reject) =>\r\n      _getUserMedia.call(navigator, constraints, resolve, reject)\r\n    );\r\n  }\r\n}\r\n\r\nfunction getSupportedConstraints() {\r\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\r\n    return navigator.mediaDevices.getSupportedConstraints();\r\n  }\r\n  return {};\r\n}\r\n\r\nexport function getIdealConstraints(\r\n  preferredCameraType: CameraType,\r\n  width?: number | ConstrainLongRange,\r\n  height?: number | ConstrainLongRange\r\n): MediaStreamConstraints {\r\n  let preferredConstraints: MediaStreamConstraints = {\r\n    audio: false,\r\n    video: {},\r\n  };\r\n\r\n  if (hasValidConstraints(preferredCameraType, width, height)) {\r\n    return MinimumConstraints;\r\n  }\r\n\r\n  const supports = getSupportedConstraints();\r\n  if (!supports.facingMode || !supports.width || !supports.height) {\r\n    return MinimumConstraints;\r\n  }\r\n\r\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\r\n    (preferredConstraints.video as MediaTrackConstraints).facingMode = {\r\n      ideal: CameraTypeToFacingMode[preferredCameraType],\r\n      // exact: CameraTypeToFacingMode[preferredCameraType],\r\n    };\r\n  }\r\n\r\n  (preferredConstraints.video as MediaTrackConstraints).width = width;\r\n  (preferredConstraints.video as MediaTrackConstraints).height = height;\r\n\r\n  return preferredConstraints;\r\n}\r\n\r\nexport async function getStreamDevice(\r\n  preferredCameraType: CameraType,\r\n  preferredWidth?: number | ConstrainLongRange,\r\n  preferredHeight?: number | ConstrainLongRange\r\n): Promise<MediaStream> {\r\n  const constraints: MediaStreamConstraints = getIdealConstraints(\r\n    preferredCameraType,\r\n    preferredWidth,\r\n    preferredHeight\r\n  );\r\n  const stream: MediaStream = await getUserMedia(constraints);\r\n  return stream;\r\n}\r\n"]}