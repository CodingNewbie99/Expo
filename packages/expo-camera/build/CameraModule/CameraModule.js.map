{"version":3,"file":"CameraModule.js","sourceRoot":"","sources":["../../src/CameraModule/CameraModule.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\n\nimport { PictureOptions } from '../Camera.types';\nimport { CameraType, CapturedPicture, CaptureOptions, ImageType } from './CameraModule.types';\nimport * as Utils from './CameraUtils';\nimport { FacingModeToCameraType, PictureSizes } from './constants';\nimport * as CapabilityUtils from './CapabilityUtils';\n\nexport { ImageType, CameraType, CaptureOptions };\n\n/*\n * TODO: Bacon: Add more props for Android\n *\n * aspectRatio: { min (0.00033), max (4032) }\n * colorTemperature: MediaSettingsRange  (max: 7000, min: 2850, step: 50)\n * exposureCompensation: MediaSettingsRange (max: 2, min: -2, step: 0.1666666716337204)\n * exposureMode: 'continuous' | 'manual'\n * frameRate: { min: (1), max: (60) }\n * iso: MediaSettingsRange (max: 3200, min: 50, step: 1)\n * width: { min: 1, max}\n * height: { min: 1, max}\n */\n\ntype OnCameraReadyListener = () => void;\ntype OnMountErrorListener = ({ nativeEvent: Error }) => void;\n\nclass CameraModule {\n  videoElement: HTMLVideoElement;\n  stream: MediaStream | null = null;\n  settings: MediaTrackSettings | null = null;\n  onCameraReady: OnCameraReadyListener = () => {};\n  onMountError: OnMountErrorListener = () => {};\n  _pictureSize?: string;\n  _isStartingCamera = false;\n\n  _autoFocus: string = 'continuous';\n  get autoFocus(): string {\n    return this._autoFocus;\n  }\n  async setAutoFocusAsync(value: string): Promise<void> {\n    if (value === this.autoFocus) {\n      return;\n    }\n    this._autoFocus = value;\n    await this.syncTrackCapabilities();\n  }\n\n  _flashMode: string = 'off';\n  get flashMode(): string {\n    return this._flashMode;\n  }\n  async setFlashModeAsync(value: string): Promise<void> {\n    if (value === this.flashMode) {\n      return;\n    }\n    this._flashMode = value;\n    await this.syncTrackCapabilities();\n  }\n\n  _whiteBalance: string = 'continuous';\n\n  get whiteBalance(): string {\n    return this._whiteBalance;\n  }\n\n  async setWhiteBalanceAsync(value: string): Promise<void> {\n    if (value === this.whiteBalance) {\n      return;\n    }\n    this._whiteBalance = value;\n    await this.syncTrackCapabilities();\n  }\n\n  _cameraType: CameraType = CameraType.front;\n\n  get type(): CameraType {\n    return this._cameraType;\n  }\n\n  async setTypeAsync(value: CameraType) {\n    if (value === this._cameraType) {\n      return;\n    }\n    this._cameraType = value;\n\n    await this.resumePreview();\n  }\n\n  _zoom: number = 1;\n\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  async setZoomAsync(value: number): Promise<void> {\n    if (value === this.zoom) {\n      return;\n    }\n    //TODO: Bacon: IMP on non-android devices\n    this._zoom = value;\n    await this.syncTrackCapabilities();\n  }\n\n  setPictureSize(value: string) {\n    if (value === this._pictureSize) {\n      return;\n    }\n    invariant(\n      PictureSizes.includes(value),\n      `expo-camera: CameraModule.setPictureSize(): invalid size supplied ${value}, expected one of: ${PictureSizes.join(\n        ', '\n      )}`\n    );\n\n    const [width, height] = value.split('x');\n    //TODO: Bacon: IMP\n    // eslint-disable-next-line\n    const aspectRatio = parseFloat(width) / parseFloat(height);\n\n    this._pictureSize = value;\n  }\n\n  constructor(videoElement: HTMLVideoElement) {\n    this.videoElement = videoElement;\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this.syncTrackCapabilities();\n      });\n    }\n  }\n\n  public isTorchAvailable(): boolean {\n    return isCapabilityAvailable(this.videoElement, 'torch');\n  }\n\n  public isZoomAvailable(): boolean {\n    return isCapabilityAvailable(this.videoElement, 'zoom');\n  }\n\n  private async onCapabilitiesReady(track: MediaStreamTrack): Promise<void> {\n    const capabilities: any = track.getCapabilities();\n\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints: {\n      zoom?: number;\n      torch?: boolean;\n      whiteBalance?: string;\n      focusMode?: string;\n      height?: number;\n      aspectRatio?: number;\n    } = {};\n\n    if (capabilities.zoom) {\n      const { min, max } = capabilities.zoom;\n      const converted = convertRange(this._zoom, [min, max]);\n      constraints.zoom = Math.min(max, Math.max(min, converted));\n    }\n\n    if (capabilities.focusMode) {\n      constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(this.autoFocus);\n    }\n\n    if (capabilities.torch) {\n      constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(this.flashMode);\n    }\n    if (capabilities.whiteBalance) {\n      constraints.whiteBalance = this.whiteBalance;\n    }\n\n    // Create max-res camera\n    if (capabilities.height && capabilities.height.max) {\n      constraints.height = capabilities.height.max;\n    }\n\n    if (capabilities.aspectRatio && capabilities.aspectRatio.max) {\n      constraints.aspectRatio = capabilities.aspectRatio.max;\n    }\n\n    await track.applyConstraints({ advanced: [constraints] as any });\n  }\n\n  private async applyVideoConstraints(constraints: { [key: string]: any }): Promise<boolean> {\n    if (!this.stream || !this.stream.getVideoTracks) {\n      return false;\n    }\n    return await applyConstraints(this.stream.getVideoTracks(), constraints);\n  }\n  \n  private async applyAudioConstraints(constraints: { [key: string]: any }): Promise<boolean> {\n    if (!this.stream || !this.stream.getAudioTracks) {\n      return false;\n    }\n    return await applyConstraints(this.stream.getAudioTracks(), constraints);\n  }\n  \n  private async syncTrackCapabilities(): Promise<void> {\n    if (this.stream && this.stream.getVideoTracks) {\n      await Promise.all(this.stream.getVideoTracks().map(track => this.onCapabilitiesReady(track)));\n    }\n  }\n\n  setStream(stream: MediaStream | null): void {\n    this.stream = stream;\n    this.settings = stream ? stream.getTracks()[0].getSettings() : null;\n    setVideoSource(this.videoElement, stream);\n  }\n\n  getActualCameraType(): CameraType | null {\n    if (this.settings) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n\n  async ensureCameraIsRunningAsync(): Promise<void> {\n    if (!this.stream) {\n      await this.resumePreview();\n    }\n  }\n\n  async resumePreview(): Promise<MediaStream | null> {\n    if (this._isStartingCamera) {\n      return null;\n    }\n    this._isStartingCamera = true;\n    try {\n      this.stopAsync();\n      const stream = await Utils.getStreamDevice(this.type);\n      this.setStream(stream);\n      this._isStartingCamera = false;\n      this.onCameraReady();\n      return stream;\n    } catch (error) {\n      this._isStartingCamera = false;\n      this.onMountError({ nativeEvent: error });\n    }\n    return null;\n  }\n\n  takePicture(config: PictureOptions): CapturedPicture {\n    const base64 = Utils.captureImage(this.videoElement, config);\n\n    const capturedPicture: CapturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n    };\n\n    if (this.settings) {\n      const { width = 0, height = 0 } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      // TODO: Bacon: verify/enforce exif shape.\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({ nativeEvent: { data: capturedPicture, id: config.id } });\n    }\n    return capturedPicture;\n  }\n\n  stopAsync(): void {\n    stopMediaStream(this.stream);\n    this.setStream(null);\n  }\n\n  // TODO: Bacon: we don't even use ratio in native...\n  getAvailablePictureSizes = async (ratio: string): Promise<string[]> => {\n    return PictureSizes;\n  };\n}\n\nfunction stopMediaStream(stream: MediaStream | null) {\n  if (!stream) return;\n  if (stream.getAudioTracks) stream.getAudioTracks().forEach(track => track.stop());\n  if (stream.getVideoTracks) stream.getVideoTracks().forEach(track => track.stop());\n  if (isMediaStreamTrack(stream)) stream.stop();\n}\n\nfunction setVideoSource(video: HTMLVideoElement, stream: MediaStream | MediaSource | Blob | null): void {\n  try {\n    video.srcObject = stream;\n  } catch (_) {\n    if (stream) {\n      video.src = window.URL.createObjectURL(stream);      \n    } else if (typeof video.src === 'string') {\n      window.URL.revokeObjectURL(video.src);\n    }\n  }\n}\n\nasync function applyConstraints(tracks: MediaStreamTrack[], constraints: { [key: string]: any }): Promise<boolean> {\n  try {\n    await Promise.all(tracks.map(async track => {\n      await track.applyConstraints({ advanced: [constraints] as any });\n    }));\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction isCapabilityAvailable(video: HTMLVideoElement, keyName: string): boolean {\n  const stream = video.srcObject;\n\n  if (stream instanceof MediaStream) {\n    const videoTrack = stream.getVideoTracks()[0];\n\n    if (typeof videoTrack.getCapabilities === 'undefined') {\n      return false;\n    }\n\n    const capabilities: any = videoTrack.getCapabilities();\n\n    return !!capabilities[keyName];\n  }\n\n  return false;\n}\n\nfunction isMediaStreamTrack(input: any): input is MediaStreamTrack {\n  return (typeof input.stop === 'function');\n}\n\nfunction convertRange( value: number, r2: number[], r1: number[] = [0, 1] ): number { \n  return ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\n}\n\nexport default CameraModule;\n"]}