{"version":3,"file":"ExponentCameraManager.web.js","sourceRoot":"","sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\r\n\r\nimport {\r\n  CameraCapturedPicture,\r\n  CameraPictureOptions,\r\n  CameraType,\r\n  PermissionResponse,\r\n  PermissionStatus,\r\n} from './Camera.types';\r\nimport { ExponentCameraRef } from './ExponentCamera.web';\r\nimport {\r\n  canGetUserMedia,\r\n  isBackCameraAvailableAsync,\r\n  isFrontCameraAvailableAsync,\r\n} from './WebUserMediaManager';\r\n\r\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\r\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n    return navigator.mediaDevices.getUserMedia(constraints);\r\n  }\r\n\r\n  // Some browsers partially implement mediaDevices. We can't just assign an object\r\n  // with getUserMedia as it would overwrite existing properties.\r\n  // Here, we will just add the getUserMedia property if it's missing.\r\n\r\n  // First get ahold of the legacy getUserMedia, if present\r\n  const getUserMedia =\r\n    navigator.getUserMedia ||\r\n    (navigator as any).webkitGetUserMedia ||\r\n    (navigator as any).mozGetUserMedia ||\r\n    function() {\r\n      const error: any = new Error('Permission unimplemented');\r\n      error.code = 0;\r\n      error.name = 'NotAllowedError';\r\n      throw error;\r\n    };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    getUserMedia.call(navigator, constraints, resolve, reject);\r\n  });\r\n}\r\n\r\nexport default {\r\n  get name(): string {\r\n    return 'ExponentCameraManager';\r\n  },\r\n  get Type() {\r\n    return {\r\n      back: 'back',\r\n      front: 'front',\r\n    };\r\n  },\r\n  get FlashMode() {\r\n    return {\r\n      on: 'on',\r\n      off: 'off',\r\n      auto: 'auto',\r\n      torch: 'torch',\r\n    };\r\n  },\r\n  get AutoFocus() {\r\n    return {\r\n      on: 'on',\r\n      off: 'off',\r\n      auto: 'auto',\r\n      singleShot: 'singleShot',\r\n    };\r\n  },\r\n  get WhiteBalance() {\r\n    return {\r\n      auto: 'auto',\r\n      continuous: 'continuous',\r\n      manual: 'manual',\r\n    };\r\n  },\r\n  get VideoQuality() {\r\n    return {};\r\n  },\r\n  get VideoStabilization() {\r\n    return {};\r\n  },\r\n  async isAvailableAsync(): Promise<boolean> {\r\n    return canGetUserMedia();\r\n  },\r\n  async takePicture(\r\n    options: CameraPictureOptions,\r\n    camera: ExponentCameraRef\r\n  ): Promise<CameraCapturedPicture> {\r\n    return await camera.takePicture(options);\r\n  },\r\n  async pausePreview(camera: ExponentCameraRef): Promise<void> {\r\n    await camera.pausePreview();\r\n  },\r\n  async resumePreview(camera: ExponentCameraRef): Promise<void> {\r\n    return await camera.resumePreview();\r\n  },\r\n  async getAvailableCameraTypesAsync(): Promise<string[]> {\r\n    if (!canGetUserMedia() || !navigator.mediaDevices.enumerateDevices) return [];\r\n\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n    const types: (string | null)[] = await Promise.all([\r\n      (await isFrontCameraAvailableAsync(devices)) && CameraType.front,\r\n      (await isBackCameraAvailableAsync()) && CameraType.back,\r\n    ]);\r\n\r\n    return types.filter(Boolean) as string[];\r\n  },\r\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCameraRef): Promise<string[]> {\r\n    return await camera.getAvailablePictureSizes(ratio);\r\n  },\r\n  /* async getSupportedRatios(camera: ExponentCameraRef): Promise<string[]> {\r\n    // TODO: Support on web\r\n  },\r\n  async record(\r\n    options?: CameraRecordingOptions,\r\n    camera: ExponentCameraRef\r\n  ): Promise<{ uri: string }> {\r\n    // TODO: Support on web\r\n  },\r\n  async stopRecording(camera: ExponentCameraRef): Promise<void> {\r\n    // TODO: Support on web\r\n  }, */\r\n  async getPermissionsAsync(): Promise<PermissionResponse> {\r\n    if (!navigator?.permissions?.query) {\r\n      throw new UnavailabilityError('expo-camera', 'navigator.permissions API is not available');\r\n    }\r\n\r\n    const { state } = await navigator.permissions.query({ name: 'camera' });\r\n    switch (state) {\r\n      case 'prompt':\r\n        return {\r\n          status: PermissionStatus.UNDETERMINED,\r\n          expires: 'never',\r\n          canAskAgain: true,\r\n          granted: false,\r\n        };\r\n      case 'granted':\r\n        return {\r\n          status: PermissionStatus.GRANTED,\r\n          expires: 'never',\r\n          canAskAgain: true,\r\n          granted: true,\r\n        };\r\n      case 'denied':\r\n        return {\r\n          status: PermissionStatus.DENIED,\r\n          expires: 'never',\r\n          canAskAgain: true,\r\n          granted: false,\r\n        };\r\n    }\r\n  },\r\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\r\n    try {\r\n      await getUserMedia({\r\n        video: true,\r\n      });\r\n      return {\r\n        status: PermissionStatus.GRANTED,\r\n        expires: 'never',\r\n        canAskAgain: true,\r\n        granted: true,\r\n      };\r\n    } catch ({ message }) {\r\n      // name: NotAllowedError\r\n      // code: 0\r\n      if (message === 'Permission dismissed') {\r\n        return {\r\n          status: PermissionStatus.UNDETERMINED,\r\n          expires: 'never',\r\n          canAskAgain: true,\r\n          granted: false,\r\n        };\r\n      } else {\r\n        // TODO: Bacon: [OSX] The system could deny access to chrome.\r\n        // TODO: Bacon: add: { status: 'unimplemented' }\r\n        return {\r\n          status: PermissionStatus.DENIED,\r\n          expires: 'never',\r\n          canAskAgain: true,\r\n          granted: false,\r\n        };\r\n      }\r\n    }\r\n  },\r\n};\r\n"]}