{"version":3,"file":"ExponentCameraManager.web.js","sourceRoot":"","sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":"AAGA,eAAe;IACb,IAAI,IAAI;QACN,OAAO,uBAAuB,CAAC;IACjC,CAAC;IACD,IAAI,IAAI;QACN,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,OAAO;SACf,CAAC;IACJ,CAAC;IACD,IAAI,SAAS;QACX,OAAO;YACL,EAAE,EAAE,IAAI;YACR,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,OAAO;SACf,CAAC;IACJ,CAAC;IACD,IAAI,SAAS;QACX,OAAO;YACL,EAAE,EAAE,IAAI;YACR,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,YAAY;SACzB,CAAC;IACJ,CAAC;IACD,IAAI,YAAY;QACd,OAAO;YACL,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,QAAQ;SACjB,CAAC;IACJ,CAAC;IACD,IAAI,YAAY;QACd,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,kCAAkC;IAClC,2BAA2B;IAC3B,iCAAiC;IACjC,KAAK,CAAC,WAAW,CAAC,OAAuB,EAAE,MAAsB;QAC/D,OAAO,MAAM,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IACD,KAAK,CAAC,YAAY,CAAC,MAAsB;QACvC,MAAM,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,MAAsB;QACxC,OAAO,MAAM,MAAM,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IACD,KAAK,CAAC,wBAAwB,CAAC,KAAa,EAAE,MAAsB;QAClE,OAAO,MAAM,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;CACF,CAAC","sourcesContent":["import { CapturedPicture, PictureOptions } from './Camera.types';\r\nimport ExponentCamera from './ExponentCamera.web';\r\n\r\nexport default {\r\n  get name(): string {\r\n    return 'ExponentCameraManager';\r\n  },\r\n  get Type() {\r\n    return {\r\n      back: 'back',\r\n      front: 'front',\r\n    };\r\n  },\r\n  get FlashMode() {\r\n    return {\r\n      on: 'on',\r\n      off: 'off',\r\n      auto: 'auto',\r\n      torch: 'torch',\r\n    };\r\n  },\r\n  get AutoFocus() {\r\n    return {\r\n      on: 'on',\r\n      off: 'off',\r\n      auto: 'auto',\r\n      singleShot: 'singleShot',\r\n    };\r\n  },\r\n  get WhiteBalance() {\r\n    return {\r\n      auto: 'auto',\r\n      continuous: 'continuous',\r\n      manual: 'manual',\r\n    };\r\n  },\r\n  get VideoQuality() {\r\n    return {};\r\n  },\r\n\r\n  // TODO: Bacon: Is video possible?\r\n  // record(options): Promise\r\n  // stopRecording(): Promise<void>\r\n  async takePicture(options: PictureOptions, camera: ExponentCamera): Promise<CapturedPicture> {\r\n    return await camera.takePicture(options);\r\n  },\r\n  async pausePreview(camera: ExponentCamera): Promise<void> {\r\n    camera.pausePreview();\r\n  },\r\n  async resumePreview(camera: ExponentCamera): Promise<any> {\r\n    return await camera.resumePreview();\r\n  },\r\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCamera): Promise<string[]> {\r\n    return await camera.getAvailablePictureSizes(ratio);\r\n  },\r\n};\r\n"]}