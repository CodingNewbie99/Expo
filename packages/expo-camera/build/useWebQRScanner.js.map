{"version":3,"file":"useWebQRScanner.js","sourceRoot":"","sources":["../src/useWebQRScanner.ts"],"names":[],"mappings":"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","sourcesContent":["import { useWorker } from '@koale/useworker';\r\nimport * as React from 'react';\r\n\r\nimport { CameraPictureOptions } from './Camera';\r\nimport { BarCodeScanningResult, MountErrorListener } from './Camera.types';\r\nimport { captureImageData } from './WebCameraUtils';\r\n\r\nconst qrWorkerMethod = ({ data, width, height }: ImageData): any => {\r\n  // eslint-disable-next-line no-undef\r\n  const decoded = (self as any).jsQR(data, width, height, {\r\n    inversionAttempts: 'dontInvert',\r\n  });\r\n\r\n  let parsed;\r\n  try {\r\n    parsed = JSON.parse(decoded);\r\n  } catch (err) {\r\n    parsed = decoded;\r\n  }\r\n\r\n  if (parsed?.data) {\r\n    const nativeEvent: BarCodeScanningResult = {\r\n      type: 'qr',\r\n      data: parsed.data,\r\n    };\r\n    if (parsed.location) {\r\n      nativeEvent.cornerPoints = [\r\n        parsed.location.topLeftCorner,\r\n        parsed.location.bottomLeftCorner,\r\n        parsed.location.topRightCorner,\r\n        parsed.location.bottomRightCorner,\r\n      ];\r\n    }\r\n    return nativeEvent;\r\n  }\r\n  return parsed;\r\n};\r\n\r\nfunction useRemoteJsQR() {\r\n  return useWorker(qrWorkerMethod, {\r\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js'],\r\n    timeout: 5000,\r\n  });\r\n}\r\n\r\nexport function useWebQRScanner(\r\n  video: React.MutableRefObject<HTMLVideoElement | null>,\r\n  {\r\n    isEnabled,\r\n    captureOptions,\r\n    interval,\r\n    onScanned,\r\n    onError,\r\n  }: {\r\n    isEnabled: boolean;\r\n    captureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>;\r\n    interval?: number;\r\n    onScanned?: (scanningResult: { nativeEvent: BarCodeScanningResult }) => void;\r\n    onError?: MountErrorListener;\r\n  }\r\n) {\r\n  const isRunning = React.useRef<boolean>(false);\r\n  const timeout = React.useRef<number | undefined>(undefined);\r\n\r\n  const [decode, clearWorker] = useRemoteJsQR();\r\n\r\n  async function scanAsync() {\r\n    // If interval is 0 then only scan once.\r\n    if (!isRunning.current || !onScanned) {\r\n      stop();\r\n      return;\r\n    }\r\n    try {\r\n      const data = captureImageData(video.current, captureOptions);\r\n\r\n      if (data) {\r\n        const nativeEvent: BarCodeScanningResult | any = await decode(data);\r\n        if (nativeEvent?.data) {\r\n          onScanned({\r\n            nativeEvent,\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (onError) {\r\n        onError({ nativeEvent: error });\r\n      }\r\n    } finally {\r\n      // If interval is 0 then only scan once.\r\n      if (interval === 0) {\r\n        stop();\r\n        return;\r\n      }\r\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\r\n      // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\r\n      timeout.current = setTimeout(() => {\r\n        scanAsync();\r\n      }, intervalToUse);\r\n    }\r\n  }\r\n\r\n  function stop() {\r\n    isRunning.current = false;\r\n    clearTimeout(timeout.current);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (isEnabled) {\r\n      isRunning.current = true;\r\n      scanAsync();\r\n    } else {\r\n      stop();\r\n    }\r\n  }, [isEnabled]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      stop();\r\n      clearWorker.kill();\r\n    };\r\n  }, []);\r\n}\r\n"]}