{"version":3,"file":"Camera.js","sourceRoot":"","sources":["../src/Camera.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,SAAS,MAAM,kBAAkB,CAAC;AACzC,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAQvE,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAErD,iCAAiC;AACjC,MAAM,aAAa,GAAG,cAAqB,CAAC;AAE5C,MAAM,eAAe,GAAG,GAAG,CAAC;AAE5B,MAAM,wBAAwB,GAAG,EAAE,CAAC;AAEpC,IAAI,kBAAkB,GAAG,CAAC,CAAC;AAE3B,SAAS,oBAAoB,CAAC,OAAwB;IACpD,IAAI,cAAc,GAAG,OAAO,IAAI,EAAE,CAAC;IAEnC,IAAI,CAAC,cAAc,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;QACzD,cAAc,GAAG,EAAE,CAAC;KACrB;IAED,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;QAC3B,cAAc,CAAC,OAAO,GAAG,CAAC,CAAC;KAC5B;IACD,IAAI,cAAc,CAAC,cAAc,EAAE;QACjC,MAAM,EAAE,GAAG,kBAAkB,EAAE,CAAC;QAChC,wBAAwB,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,cAAc,CAAC;QAC7D,cAAc,CAAC,EAAE,GAAG,EAAE,CAAC;QACvB,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;KAChC;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,sBAAsB,CAAC,OAA0B;IACxD,IAAI,gBAAgB,GAAG,OAAO,IAAI,EAAE,CAAC;IAErC,IAAI,CAAC,gBAAgB,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;QAC7D,gBAAgB,GAAG,EAAE,CAAC;KACvB;SAAM,IAAI,OAAO,gBAAgB,CAAC,OAAO,KAAK,QAAQ,EAAE;QACvD,gBAAgB,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KACpF;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAe;IACxC,IAAI,KAAK,GAAG,OAAO,IAAI,EAAE,CAAC;IAE1B,IAAI,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACvC,KAAK,GAAG,EAAE,CAAC;KACZ;IAED,MAAM,QAAQ,GAAgB,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAE5D,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,6BAA6B;IAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,wBAAwB,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;QACvF,OAAO,CAAC,IAAI,CACV,uHAAuH,CACxH,CAAC;QACF,QAAQ,CAAC,sBAAsB,GAAG;YAChC,aAAa;YACb,YAAY,EAAE,QAAQ,CAAC,YAAY;SACpC,CAAC;KACH;IAED,IAAI,KAAK,CAAC,gBAAgB,EAAE;QAC1B,QAAQ,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACvC;IAED,IAAI,KAAK,CAAC,eAAe,EAAE;QACzB,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC;KACrC;IAED,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE;QAC7B,OAAO,QAAQ,CAAC,KAAK,CAAC;QACtB,OAAO,QAAQ,CAAC,aAAa,CAAC;KAC/B;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,WAAW,CAAC,KAAU,EAAE,GAAW;IAC1C,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;QAC7D,OAAO,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;KAC5C;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,eAAe,CAAC,EAAE,WAAW,EAA0D;IAC9F,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;IACjC,MAAM,QAAQ,GAAG,wBAAwB,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,QAAQ,EAAE;QACZ,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,OAAO,wBAAwB,CAAC,EAAE,CAAC,CAAC;KACrC;AACH,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,KAAK,CAAC,SAAgB;IAA1D;;QAmDE,gBAAW,GAAoC,EAAE,CAAC;QAClD,qBAAgB,GAAkC,EAAE,CAAC;QAyDrD,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;gBAC5B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,EAAE,WAAW,EAAwC,EAAE,EAAE;YACxE,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBAC3B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;aACtC;QACH,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,QAAmB,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAwB,EAAE,EAAE;YACrF,MAAM,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;YAC7B,IACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACtD,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,GAAG,eAAe,EAC9E;gBACA,OAAO;aACR;YAED,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;gBACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aACtD;QACH,CAAC,CAAC;QAEF,kBAAa,GAAG,CAAC,GAAqB,EAAE,EAAE;YACxC,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,gCAAgC;gBAChC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;oBACzB,IAAI,CAAC,aAAa,GAAG,GAAU,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;iBAC1C;aACF;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;QACH,CAAC,CAAC;IAoBJ,CAAC;IAtHC,KAAK,CAAC,gBAAgB,CAAC,OAAwB;QAC7C,MAAM,cAAc,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAErD,OAAO,MAAM,aAAa,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,uBAAuB;QAC3B,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE;YACrC,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,yBAAyB,CAAC,CAAC;SACpE;QAED,OAAO,MAAM,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,6BAA6B,CAAC,KAAc;QAChD,IAAI,CAAC,aAAa,CAAC,wBAAwB,EAAE;YAC3C,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,+BAA+B,CAAC,CAAC;SAC1E;QACD,OAAO,MAAM,aAAa,CAAC,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACjF,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,OAA0B;QAC1C,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YACzB,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;SACxD;QAED,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAEzD,OAAO,MAAM,aAAa,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAChC,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;SAC1D;QAED,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClD,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;YAC/B,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;SACzD;QAED,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,aAAa;QACX,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAChC,MAAM,IAAI,mBAAmB,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;SAC1D;QAED,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClD,CAAC;IA+CD,MAAM;QACJ,MAAM,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC7E,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAE3E,OAAO,CACL,CAAC,cAAc,CACb,IAAI,WAAW,CAAC,CAChB,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CACxB,aAAa,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACnC,YAAY,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CACjC,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CACnC,eAAe,CAAC,CAAC,eAAe,CAAC,CACjC,cAAc,CAAC,CAAC,eAAe,CAAC,EAChC,CACH,CAAC;IACJ,CAAC;;AA1KM,gBAAS,GAAG;IACjB,IAAI,EAAE,aAAa,CAAC,IAAI;IACxB,SAAS,EAAE,aAAa,CAAC,SAAS;IAClC,SAAS,EAAE,aAAa,CAAC,SAAS;IAClC,YAAY,EAAE,aAAa,CAAC,YAAY;IACxC,YAAY,EAAE,aAAa,CAAC,YAAY;IACxC,kBAAkB,EAAE,aAAa,CAAC,kBAAkB,IAAI,EAAE;CAC3D,CAAC;AAEF,2EAA2E;AACpE,uBAAgB,GAAG;IACxB,IAAI,EAAE,aAAa,CAAC,IAAI;IACxB,SAAS,EAAE,aAAa,CAAC,SAAS;IAClC,SAAS,EAAE,aAAa,CAAC,SAAS;IAClC,YAAY,EAAE,aAAa,CAAC,YAAY;CACzC,CAAC;AAEK,gBAAS,GAAG;IACjB,GAAG,aAAa;IAChB,IAAI,EAAE,SAAS,CAAC,MAAM;IACtB,KAAK,EAAE,SAAS,CAAC,MAAM;IACvB,UAAU,EAAE,SAAS,CAAC,MAAM;IAC5B,YAAY,EAAE,SAAS,CAAC,IAAI;IAC5B,WAAW,EAAE,SAAS,CAAC,MAAM;IAC7B,aAAa,EAAE,SAAS,CAAC,IAAI;IAC7B,aAAa,EAAE,SAAS,CAAC,IAAI;IAC7B,gBAAgB,EAAE,SAAS,CAAC,IAAI;IAChC,sBAAsB,EAAE,SAAS,CAAC,MAAM;IACxC,eAAe,EAAE,SAAS,CAAC,IAAI;IAC/B,oBAAoB,EAAE,SAAS,CAAC,MAAM;IACtC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/D,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACpE,sBAAsB,EAAE,SAAS,CAAC,MAAM;IACxC,YAAY,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACvE,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;CACrF,CAAC;AAEK,mBAAY,GAAU;IAC3B,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,KAAK;IACZ,UAAU,EAAE,CAAC;IACb,oBAAoB,EAAE,EAAE;IACxB,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,IAAI;IAC7B,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,EAAE;IACrC,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG;IACtC,YAAY,EAAE,aAAa,CAAC,YAAY,CAAC,IAAI;CAC9C,CAAC;AA+HJ,MAAM,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\r\nimport mapValues from 'lodash/mapValues';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { findNodeHandle, Platform, ViewPropTypes } from 'react-native';\r\nimport {\r\n  CapturedPicture,\r\n  NativeProps,\r\n  PictureOptions,\r\n  Props,\r\n  RecordingOptions,\r\n} from './Camera.types';\r\nimport ExponentCamera from './ExponentCamera';\r\nimport _CameraManager from './ExponentCameraManager';\r\n\r\n// TODO: Bacon: Fix multiplatform\r\nconst CameraManager = _CameraManager as any;\r\n\r\nconst EventThrottleMs = 500;\r\n\r\nconst _PICTURE_SAVED_CALLBACKS = {};\r\n\r\nlet _GLOBAL_PICTURE_ID = 1;\r\n\r\nfunction ensurePictureOptions(options?: PictureOptions): PictureOptions {\r\n  let pictureOptions = options || {};\r\n\r\n  if (!pictureOptions || typeof pictureOptions !== 'object') {\r\n    pictureOptions = {};\r\n  }\r\n\r\n  if (!pictureOptions.quality) {\r\n    pictureOptions.quality = 1;\r\n  }\r\n  if (pictureOptions.onPictureSaved) {\r\n    const id = _GLOBAL_PICTURE_ID++;\r\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\r\n    pictureOptions.id = id;\r\n    pictureOptions.fastMode = true;\r\n  }\r\n  return pictureOptions;\r\n}\r\n\r\nfunction ensureRecordingOptions(options?: RecordingOptions): RecordingOptions {\r\n  let recordingOptions = options || {};\r\n\r\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\r\n    recordingOptions = {};\r\n  } else if (typeof recordingOptions.quality === 'string') {\r\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\r\n  }\r\n\r\n  return recordingOptions;\r\n}\r\n\r\nfunction ensureNativeProps(options?: Props): NativeProps {\r\n  let props = options || {};\r\n\r\n  if (!props || typeof props !== 'object') {\r\n    props = {};\r\n  }\r\n\r\n  const newProps: NativeProps = mapValues(props, convertProp);\r\n\r\n  const propsKeys = Object.keys(newProps);\r\n  // barCodeTypes is deprecated\r\n  if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\r\n    console.warn(\r\n      `The \"barCodeTypes\" prop for Camera is deprecated and will be removed in SDK 34. Use \"barCodeScannerSettings\" instead.`\r\n    );\r\n    newProps.barCodeScannerSettings = {\r\n      // @ts-ignore\r\n      barCodeTypes: newProps.barCodeTypes,\r\n    };\r\n  }\r\n\r\n  if (props.onBarCodeScanned) {\r\n    newProps.barCodeScannerEnabled = true;\r\n  }\r\n\r\n  if (props.onFacesDetected) {\r\n    newProps.faceDetectorEnabled = true;\r\n  }\r\n\r\n  if (Platform.OS !== 'android') {\r\n    delete newProps.ratio;\r\n    delete newProps.useCamera2Api;\r\n  }\r\n\r\n  return newProps;\r\n}\r\n\r\nfunction convertProp(value: any, key: string): any {\r\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\r\n    return Camera.ConversionTables[key][value];\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction _onPictureSaved({ nativeEvent }: { nativeEvent: { data: CapturedPicture; id: number } }) {\r\n  const { id, data } = nativeEvent;\r\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\r\n  if (callback) {\r\n    callback(data);\r\n    delete _PICTURE_SAVED_CALLBACKS[id];\r\n  }\r\n}\r\n\r\nexport default class Camera extends React.Component<Props> {\r\n  static Constants = {\r\n    Type: CameraManager.Type,\r\n    FlashMode: CameraManager.FlashMode,\r\n    AutoFocus: CameraManager.AutoFocus,\r\n    WhiteBalance: CameraManager.WhiteBalance,\r\n    VideoQuality: CameraManager.VideoQuality,\r\n    VideoStabilization: CameraManager.VideoStabilization || {},\r\n  };\r\n\r\n  // Values under keys from this object will be transformed to native options\r\n  static ConversionTables = {\r\n    type: CameraManager.Type,\r\n    flashMode: CameraManager.FlashMode,\r\n    autoFocus: CameraManager.AutoFocus,\r\n    whiteBalance: CameraManager.WhiteBalance,\r\n  };\r\n\r\n  static propTypes = {\r\n    ...ViewPropTypes,\r\n    zoom: PropTypes.number,\r\n    ratio: PropTypes.string,\r\n    focusDepth: PropTypes.number,\r\n    onMountError: PropTypes.func,\r\n    pictureSize: PropTypes.string,\r\n    onCameraReady: PropTypes.func,\r\n    useCamera2Api: PropTypes.bool,\r\n    onBarCodeScanned: PropTypes.func,\r\n    barCodeScannerSettings: PropTypes.object,\r\n    onFacesDetected: PropTypes.func,\r\n    faceDetectorSettings: PropTypes.object,\r\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    videoStabilizationMode: PropTypes.number,\r\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\r\n  };\r\n\r\n  static defaultProps: Props = {\r\n    zoom: 0,\r\n    ratio: '4:3',\r\n    focusDepth: 0,\r\n    faceDetectorSettings: {},\r\n    type: CameraManager.Type.back,\r\n    autoFocus: CameraManager.AutoFocus.on,\r\n    flashMode: CameraManager.FlashMode.off,\r\n    whiteBalance: CameraManager.WhiteBalance.auto,\r\n  };\r\n\r\n  _cameraHandle?: number | null;\r\n  _cameraRef?: React.Component | null;\r\n  _lastEvents: { [eventName: string]: string } = {};\r\n  _lastEventsTimes: { [eventName: string]: Date } = {};\r\n\r\n  async takePictureAsync(options?: PictureOptions): Promise<CapturedPicture> {\r\n    const pictureOptions = ensurePictureOptions(options);\r\n\r\n    return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\r\n  }\r\n\r\n  async getSupportedRatiosAsync(): Promise<Array<string>> {\r\n    if (!CameraManager.getSupportedRatios) {\r\n      throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\r\n    }\r\n\r\n    return await CameraManager.getSupportedRatios(this._cameraHandle);\r\n  }\r\n\r\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<Array<string>> {\r\n    if (!CameraManager.getAvailablePictureSizes) {\r\n      throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\r\n    }\r\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\r\n  }\r\n\r\n  async recordAsync(options?: RecordingOptions): Promise<{ uri: string }> {\r\n    if (!CameraManager.record) {\r\n      throw new UnavailabilityError('Camera', 'recordAsync');\r\n    }\r\n\r\n    const recordingOptions = ensureRecordingOptions(options);\r\n\r\n    return await CameraManager.record(recordingOptions, this._cameraHandle);\r\n  }\r\n\r\n  stopRecording() {\r\n    if (!CameraManager.stopRecording) {\r\n      throw new UnavailabilityError('Camera', 'stopRecording');\r\n    }\r\n\r\n    CameraManager.stopRecording(this._cameraHandle);\r\n  }\r\n\r\n  pausePreview() {\r\n    if (!CameraManager.pausePreview) {\r\n      throw new UnavailabilityError('Camera', 'pausePreview');\r\n    }\r\n\r\n    CameraManager.pausePreview(this._cameraHandle);\r\n  }\r\n\r\n  resumePreview() {\r\n    if (!CameraManager.resumePreview) {\r\n      throw new UnavailabilityError('Camera', 'resumePreview');\r\n    }\r\n\r\n    CameraManager.resumePreview(this._cameraHandle);\r\n  }\r\n\r\n  _onCameraReady = () => {\r\n    if (this.props.onCameraReady) {\r\n      this.props.onCameraReady();\r\n    }\r\n  };\r\n\r\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\r\n    if (this.props.onMountError) {\r\n      this.props.onMountError(nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onObjectDetected = (callback?: Function) => ({ nativeEvent }: { nativeEvent: any }) => {\r\n    const { type } = nativeEvent;\r\n    if (\r\n      this._lastEvents[type] &&\r\n      this._lastEventsTimes[type] &&\r\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\r\n      new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (callback) {\r\n      callback(nativeEvent);\r\n      this._lastEventsTimes[type] = new Date();\r\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\r\n    }\r\n  };\r\n\r\n  _setReference = (ref?: React.Component) => {\r\n    if (ref) {\r\n      this._cameraRef = ref;\r\n      // TODO: Bacon: Make this one...\r\n      if (Platform.OS === 'web') {\r\n        this._cameraHandle = ref as any;\r\n      } else {\r\n        this._cameraHandle = findNodeHandle(ref);\r\n      }\r\n    } else {\r\n      this._cameraRef = null;\r\n      this._cameraHandle = null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const nativeProps = ensureNativeProps(this.props);\r\n\r\n    const onBarCodeScanned = this._onObjectDetected(this.props.onBarCodeScanned);\r\n    const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\r\n\r\n    return (\r\n      <ExponentCamera\r\n        {...nativeProps}\r\n        ref={this._setReference}\r\n        onCameraReady={this._onCameraReady}\r\n        onMountError={this._onMountError}\r\n        onBarCodeScanned={onBarCodeScanned}\r\n        onFacesDetected={onFacesDetected}\r\n        onPictureSaved={_onPictureSaved}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport const Constants = Camera.Constants;\r\n"]}