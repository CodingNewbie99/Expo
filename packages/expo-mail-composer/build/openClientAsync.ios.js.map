{"version":3,"file":"openClientAsync.ios.js","sourceRoot":"","sources":["../src/openClientAsync.ios.ts"],"names":[],"mappings":"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","sourcesContent":["import { canOpenURL, openURL } from 'expo-linking';\nimport { ActionSheetIOS } from 'react-native';\n\nimport type { MailClientOptions } from './MailComposer.types';\n\n/**\n * Represents a mail client with a name and a URL scheme.\n */\ntype TMailClient = { name: string; url: string };\n\n/**\n * A list of mail clients with their names and URL schemes.\n * These URLs are used to check if the mail clients are available on the device.\n * Keep the list in sync with those in the file `plugin/src/withMailComposer.ts`.\n */\nconst mailClients: TMailClient[] = [\n  { name: 'Airmail', url: 'airmail://' },\n  { name: 'Apple Mail', url: 'message://' },\n  { name: 'BlueMail', url: 'bluemail://' },\n  { name: 'Canary', url: 'canary://' },\n  { name: 'Edison Mail', url: 'edisonmail://' },\n  { name: 'Email.cz', url: 'szn-email://' },\n  { name: 'Fastmail', url: 'fastmail://' },\n  { name: 'GMX Mail', url: 'x-gmxmail-netid-v1://' },\n  { name: 'Gmail', url: 'googlegmail://' },\n  { name: 'Mail.ru', url: 'mailrumail://' },\n  { name: 'Outlook', url: 'ms-outlook://' },\n  { name: 'Proton Mail', url: 'protonmail://' },\n  { name: 'Secure Mail', url: 'ctxmail://' },\n  { name: 'Spark', url: 'readdle-spark://' },\n  { name: 'Superhuman', url: 'superhuman://' },\n  { name: 'Telekom Mail', url: 'telekommail:// ' },\n  { name: 'Tuta Mail', url: 'tutanota://' },\n  { name: 'WEB.DE Mail', url: 'x-webdemail-netid-v1://' },\n  { name: 'Yahoo Mail', url: 'ymail://' },\n  { name: 'Yandex Mail', url: 'yandexmail://' },\n  { name: 'freenet Mail', url: 'appcenter-f45b4c0b-75c9-2d01-7ab6-41f6a6015be2://' },\n  { name: 'myMail', url: 'mymail-mailto://' },\n];\n\n/**\n * Checks the availability of listed mail clients on the device.\n */\nconst getAvailableMailAppsAsync = async (): Promise<TMailClient[]> =>\n  (\n    await Promise.all(mailClients.map(async (app) => ((await canOpenURL(app.url)) ? app : null)))\n  ).filter(Boolean) as TMailClient[];\n\n/**\n * Prompts the user to choose a mail app from the list of available mail apps.\n * @param title\n * @param cancelLabel\n */\nasync function askMailAppChoiceAsync({\n  title,\n  cancelLabel,\n}: MailClientOptions): Promise<TMailClient | null> {\n  const availableMailApps = await getAvailableMailAppsAsync();\n\n  if (availableMailApps.length === 0) return null;\n  if (availableMailApps.length === 1) return availableMailApps[0];\n\n  return new Promise((resolve) => {\n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        title,\n        options: [...availableMailApps.map(({ name }) => name), cancelLabel ?? 'Cancel'],\n        cancelButtonIndex: availableMailApps.length,\n      },\n      (buttonIndex) =>\n        resolve(buttonIndex === availableMailApps.length ? null : availableMailApps[buttonIndex])\n    );\n  });\n}\n\n/**\n * Opens the chosen mail client using its URL scheme.\n * @param options\n */\nexport async function openClientAsyncIos(options: MailClientOptions): Promise<void> {\n  const mailApp = await askMailAppChoiceAsync(options);\n\n  if (mailApp) {\n    await openURL(mailApp.url);\n  }\n}\n"]}