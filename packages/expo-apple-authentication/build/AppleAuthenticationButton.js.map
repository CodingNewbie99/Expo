{"version":3,"file":"AppleAuthenticationButton.js","sourceRoot":"","sources":["../src/AppleAuthenticationButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,wCAAwC,EACxC,+CAA+C,EAC/C,wCAAwC,EACxC,0CAA0C,EAC1C,iDAAiD,EACjD,0CAA0C,GAC3C,MAAM,iCAAiC,CAAC;AAEzC,OAAO,EAEL,8BAA8B,EAC9B,6BAA6B,GAC9B,MAAM,6BAA6B,CAAC;AAErC;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,yBAAyB,GAA4D,CAAC,KAAK,EAAE,EAAE;IACnG,IAAI,CAAC,wCAAwC,EAAE;QAC7C,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAA;SAChE;QACD,OAAO,IAAI,CAAC;KACb;IAED,MAAM,EACJ,OAAO,EACP,WAAW,EACX,UAAU,EACV,GAAG,SAAS,EACb,GAAG,KAAK,CAAC;IAEV,MAAM,kCAAkC,GAAG,qBAAqB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAE1F,OAAO,CACL,CAAC,kCAAkC,CACjC,aAAa,CAAC,CAAC,OAAO,CAAC,CACvB,IAAI,SAAS,CAAC,EACd,CACH,CAAC;AACJ,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAgE;IACpF,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE;QACvC,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE,wCAAwC;QAChF,CAAC,8BAA8B,CAAC,aAAa,CAAC,EAAE,+CAA+C;QAC/F,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE,wCAAwC;KACjF;IACD,CAAC,6BAA6B,CAAC,QAAQ,CAAC,EAAE;QACxC,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE,0CAA0C;QAClF,CAAC,8BAA8B,CAAC,aAAa,CAAC,EAAE,iDAAiD;QACjG,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE,0CAA0C;KACnF;CACF,CAAC;AAEF,SAAS,qBAAqB,CAAC,IAAmC,EAAE,KAAqC;IACvG,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACvC,CAAC;AAED,eAAe,yBAAyB,CAAA","sourcesContent":["import React from 'react';\nimport {\n  ExpoAppleAuthenticationButtonSignInWhite,\n  ExpoAppleAuthenticationButtonSignInWhiteOutline,\n  ExpoAppleAuthenticationButtonSignInBlack,\n  ExpoAppleAuthenticationButtonContinueWhite,\n  ExpoAppleAuthenticationButtonContinueWhiteOutline,\n  ExpoAppleAuthenticationButtonContinueBlack,\n} from './ExpoAppleAuthenticationButton';\n\nimport {\n  AppleAuthenticationButtonProps,\n  AppleAuthenticationButtonStyle,\n  AppleAuthenticationButtonType,\n} from './AppleAuthentication.types';\n\n/**\n * This component displays the proprietary \"Sign In with Apple\" / \"Continue with\n * Apple\" button on your screen. The App Store Guidelines require you to use\n * this component to start the sign in process instead of a custom button. You\n * can customize the design of the button using the properties. You should start\n * the sign in process when the `onPress` property is called.\n *\n * You should only attempt to render this if\n * `AppleAuthentication.isAvailableAsync()` resolves to true. This component\n * will render nothing if it is not available and you will get a warning if\n * `__DEV__ === true`.\n *\n * The properties of this component extend from `View`; however, you should not\n * attempt to set `backgroundColor` or `borderRadius` with the `style` property.\n * This will not work and is against the App Store Guidelines. Instead, you\n * should use the `buttonStyle` property to choose one of the predefined color\n * styles and the `cornerRadius` property to change the border radius of the\n * button.\n *\n * @see [Apple\n * Documention](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\n * for more details.\n */\nconst AppleAuthenticationButton: React.FunctionComponent<AppleAuthenticationButtonProps> = (props) => {\n  if (!ExpoAppleAuthenticationButtonSignInWhite) {\n    if (__DEV__) {\n      console.warn('\\'AppleAuthenticationButton\\' is not available.')\n    }\n    return null;\n  }\n\n  const {\n    onPress,\n    buttonStyle,\n    buttonType,\n    ...restProps\n  } = props;\n\n  const AppleAuthenticationButtonComponent = selectButtonComponent(buttonType, buttonStyle);\n\n  return (\n    <AppleAuthenticationButtonComponent\n      onButtonPress={onPress}\n      {...restProps}\n    />\n  );\n}\n\nconst ButtonComponents: { [type : number]: { [style: number]: React.ElementType } } = {\n  [AppleAuthenticationButtonType.SIGN_IN]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonSignInWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonSignInWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonSignInBlack,\n  },\n  [AppleAuthenticationButtonType.CONTINUE]: {\n    [AppleAuthenticationButtonStyle.WHITE]: ExpoAppleAuthenticationButtonContinueWhite,\n    [AppleAuthenticationButtonStyle.WHITE_OUTLINE]: ExpoAppleAuthenticationButtonContinueWhiteOutline,\n    [AppleAuthenticationButtonStyle.BLACK]: ExpoAppleAuthenticationButtonContinueBlack,\n  },\n};\n\nfunction selectButtonComponent(type: AppleAuthenticationButtonType, style: AppleAuthenticationButtonStyle): React.ElementType {\n  return ButtonComponents[type][style];\n}\n\nexport default AppleAuthenticationButton\n"]}