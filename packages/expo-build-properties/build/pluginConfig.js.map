{"version":3,"file":"pluginConfig.js","sourceRoot":"","sources":["../src/pluginConfig.ts"],"names":[],"mappings":"AAAA,OAAO,GAAuB,MAAM,KAAK,CAAC;AA4B1C,MAAM,MAAM,GAAqC;IAC/C,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,OAAO,EAAE;YACP,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACV,iBAAiB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACtD,gBAAgB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,iBAAiB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACrD,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAEjD,6BAA6B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAClE,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAEtD,gBAAgB,EAAE;oBAChB,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;wBACvE,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;wBACrE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;wBACnE,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;qBACzE;oBACD,QAAQ,EAAE,IAAI;iBACf;aACF;YACD,QAAQ,EAAE,IAAI;SACf;QACD,GAAG,EAAE;YACH,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACV,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC5E,aAAa,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;aAC/E;YACD,QAAQ,EAAE,IAAI;SACf;KACF;CACF,CAAC;AAEF,MAAM,UAAU,cAAc,CAAC,MAAW;IACxC,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;KAC7F;IACD,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import Ajv, { JSONSchemaType } from 'ajv';\n\n/**\n * Configuration for `expo-build-properties`\n */\nexport interface PluginConfigType {\n  android?: {\n    compileSdkVersion?: number;\n    targetSdkVersion?: number;\n    buildToolsVersion?: string;\n    kotlinVersion?: string;\n\n    enableProguardInReleaseBuilds?: boolean;\n    extraProguardRules?: string;\n\n    packagingOptions?: {\n      pickFirst?: string[];\n      exclude?: string[];\n      merge?: string[];\n      doNotStrip?: string[];\n    };\n  };\n  ios?: {\n    deploymentTarget?: string;\n    useFrameworks?: 'static' | 'dynamic';\n  };\n}\n\nconst schema: JSONSchemaType<PluginConfigType> = {\n  type: 'object',\n  properties: {\n    android: {\n      type: 'object',\n      properties: {\n        compileSdkVersion: { type: 'integer', nullable: true },\n        targetSdkVersion: { type: 'integer', nullable: true },\n        buildToolsVersion: { type: 'string', nullable: true },\n        kotlinVersion: { type: 'string', nullable: true },\n\n        enableProguardInReleaseBuilds: { type: 'boolean', nullable: true },\n        extraProguardRules: { type: 'string', nullable: true },\n\n        packagingOptions: {\n          type: 'object',\n          properties: {\n            pickFirst: { type: 'array', items: { type: 'string' }, nullable: true },\n            exclude: { type: 'array', items: { type: 'string' }, nullable: true },\n            merge: { type: 'array', items: { type: 'string' }, nullable: true },\n            doNotStrip: { type: 'array', items: { type: 'string' }, nullable: true },\n          },\n          nullable: true,\n        },\n      },\n      nullable: true,\n    },\n    ios: {\n      type: 'object',\n      properties: {\n        deploymentTarget: { type: 'string', pattern: '\\\\d+\\\\.\\\\d+', nullable: true },\n        useFrameworks: { type: 'string', enum: ['static', 'dynamic'], nullable: true },\n      },\n      nullable: true,\n    },\n  },\n};\n\nexport function validateConfig(config: any): PluginConfigType {\n  const validate = new Ajv().compile(schema);\n  if (!validate(config)) {\n    throw new Error('Invalid expo-build-properties config: ' + JSON.stringify(validate.errors));\n  }\n  return config;\n}\n"]}