{"version":3,"file":"FileSystem.types.js","sourceRoot":"","sources":["../src/FileSystem.types.ts"],"names":[],"mappings":"AAoCA,MAAM,CAAN,IAAY,YAGX;AAHD,WAAY,YAAY;IACtB,6BAAa,CAAA;IACb,iCAAiB,CAAA;AACnB,CAAC,EAHW,YAAY,KAAZ,YAAY,QAGvB","sourcesContent":["export type DownloadOptions = {\n  md5?: boolean;\n  cache?: boolean;\n  headers?: { [name: string]: string };\n};\n\nexport type DownloadResult = {\n  uri: string;\n  status: number;\n  headers: { [name: string]: string };\n  md5?: string;\n};\n\nexport type DownloadProgressCallback = (data: DownloadProgressData) => void;\n\nexport type DownloadProgressData = {\n  totalBytesWritten: number;\n  totalBytesExpectedToWrite: number;\n};\n\nexport type DownloadPauseState = {\n  url: string;\n  fileUri: string;\n  options: DownloadOptions;\n  resumeData?: string;\n};\n\nexport type FileInfo = {\n  exists: boolean;\n  isDirectory: false;\n  uri?: string;\n  size?: number;\n  modificationTime?: number;\n  md5?: string;\n};\n\nexport enum EncodingType {\n  UTF8 = 'utf8',\n  Base64 = 'base64',\n}\n\nexport type ReadingOptions = {\n  encoding?: EncodingType | 'utf8' | 'base64';\n  position?: number;\n  length?: number;\n};\n\nexport type WritingOptions = {\n  encoding?: EncodingType | 'utf8' | 'base64';\n};\n\nexport type ProgressEvent = {\n  uuid: string;\n  data: {\n    totalBytesWritten: number;\n    totalBytesExpectedToWrite: number;\n  };\n};\n"]}