{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAGlD,MAAM,CAAC,KAAK,UAAU,6BAA6B,CACjD,KAAa,EACb,OAAyB;IAEzB,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,EAAE;QACnD,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;KAC5E;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAO,CAAC,IAAI,CACV,2EAA2E,OAAO,KAAK,KAAK,CAC7F,CAAC;QACF,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,IAAI,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC3C,OAAO,GAAG,EAAE,CAAC;KACd;IACD,OAAO,gBAAgB,CAAC,6BAA6B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACxE,CAAC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\r\n\r\nimport ExponentFacebook from './ExponentFacebook';\r\nimport { FacebookOptions, FacebookLoginResult } from './types';\r\n\r\nexport async function logInWithReadPermissionsAsync(\r\n  appId: string,\r\n  options?: FacebookOptions\r\n): Promise<FacebookLoginResult> {\r\n  if (!ExponentFacebook.logInWithReadPermissionsAsync) {\r\n    throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\r\n  }\r\n  if (typeof appId !== 'string') {\r\n    console.warn(\r\n      `logInWithReadPermissionsAsync: parameter 'appId' must be a string, was '${typeof appId}''.`\r\n    );\r\n    appId = String(appId);\r\n  }\r\n\r\n  if (!options || typeof options !== 'object') {\r\n    options = {};\r\n  }\r\n  return ExponentFacebook.logInWithReadPermissionsAsync(appId, options);\r\n}\r\n"]}