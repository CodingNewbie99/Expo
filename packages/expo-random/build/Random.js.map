{"version":3,"file":"Random.js","sourceRoot":"","sources":["../src/Random.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAExC,OAAO,UAAU,MAAM,cAAc,CAAC;AAEtC,MAAM,CAAC,KAAK,UAAU,qBAAqB,CAAC,MAAc;IACxD,IAAI,CAAC,UAAU,CAAC,qBAAqB,EAAE;QACrC,MAAM,IAAI,mBAAmB,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAAC;KACvE;IACD,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IAEnE,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\nimport { toByteArray } from 'base64-js';\n\nimport ExpoRandom from './ExpoRandom';\n\nexport async function getRandomIntegerAsync(length: number): Promise<Uint8Array> {\n  if (!ExpoRandom.getRandomIntegerAsync) {\n    throw new UnavailabilityError('expo-random', 'getRandomIntegerAsync');\n  }\n  const randomBytes = await ExpoRandom.getRandomIntegerAsync(length);\n\n  return toByteArray(randomBytes);\n}\n"]}