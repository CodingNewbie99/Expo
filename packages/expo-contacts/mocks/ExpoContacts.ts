/**
 * Automatically generated by expo-modules-test-core.
 *
 * This autogenerated file provides a mock for native Expo module,
 * and works out of the box with the expo jest preset.
 *  */

export type ContactsQuery = any;

export type Contact = any;

export type FormOptions = any;

export type ContainerQuery = any;

export type GroupQuery = any;

export async function getDefaultContainerIdentifierAsync(): Promise<any> {}

export async function writeContactToFileAsync(options: ContactsQuery): Promise<string | undefined> {
  return '';
}

export async function dismissFormAsync(): Promise<any> {}

export async function presentFormAsync(
  identifier: string | undefined,
  data: Contact | undefined,
  options: FormOptions
): Promise<any> {}

export async function presentContactPickerAsync(): Promise<any> {}

export async function addExistingContactToGroupAsync(
  identifier: string,
  groupId: string
): Promise<any> {}

export async function addContactAsync(
  contact: Contact,
  containerId: string | undefined
): Promise<string> {
  return '';
}

export async function updateContactAsync(contact: Contact): Promise<string> {
  return '';
}

export async function removeContactAsync(identifier: string): Promise<any> {}

export async function updateGroupNameAsync(groupName: string, groupId: string): Promise<any> {}

export async function addExistingGroupToContainerAsync(
  groupId: string,
  containerId: string
): Promise<
  | {
      [key: string]: any;
    }
  | undefined
> {
  return {};
}

export async function createGroupAsync(name: string, containerId: string): Promise<string> {
  return '';
}

export async function removeContactFromGroupAsync(
  identifier: string,
  groupId: string
): Promise<any> {}

export async function removeGroupAsync(groupId: string): Promise<any> {}

export async function getContainersAsync(options: ContainerQuery): Promise<
  {
    [key: string]: any;
  }[]
> {
  return [];
}

export async function getGroupsAsync(options: GroupQuery): Promise<
  | (
      | {
          [key: string]: any;
        }
      | undefined
    )[]
  | undefined
> {
  return [];
}

export async function getContactsAsync(options: ContactsQuery): Promise<
  | {
      [key: string]: any;
    }
  | undefined
> {
  return {};
}

export async function getPermissionsAsync(): Promise<any> {}

export async function requestPermissionsAsync(): Promise<any> {}
