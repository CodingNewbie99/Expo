{"version":3,"file":"Battery.js","sourceRoot":"","sources":["../src/Battery.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,MAAM,kBAAkB,CAAC;AAE9D,OAAO,EAGL,YAAY,GAMb,MAAM,iBAAiB,CAAC;AACzB,OAAO,WAAW,MAAM,eAAe,CAAC;AAExC,MAAM,mBAAmB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAE1D,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,OAAO,CAAC,CAAC,CAAC;KACX;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,OAAO,YAAY,CAAC,OAAO,CAAC;KAC7B;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,0BAA0B;IAC9C,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE;QAC3C,OAAO,KAAK,CAAC;KACd;IACD,OAAO,MAAM,WAAW,CAAC,0BAA0B,EAAE,CAAC;AACxD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB;IACtC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;QACnC,OAAO;YACL,YAAY,EAAE,CAAC,CAAC;YAChB,YAAY,EAAE,YAAY,CAAC,OAAO;YAClC,YAAY,EAAE,KAAK;SACpB,CAAC;KACH;IACD,OAAO,MAAM,WAAW,CAAC,kBAAkB,EAAE,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAiC;IACvE,OAAO,mBAAmB,CAAC,WAAW,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,EAGL,YAAY,GAOb,CAAC","sourcesContent":["import { EventEmitter, Subscription } from '@unimodules/core';\n\nimport {\n  BatteryLevelEvent,\n  BatteryLevelUpdateListener,\n  BatteryState,\n  BatteryStateEvent,\n  BatteryStateUpdateListener,\n  PowerModeEvent,\n  PowerModeUpdateListener,\n  PowerState,\n} from './Battery.types';\nimport ExpoBattery from './ExpoBattery';\n\nconst BatteryEventEmitter = new EventEmitter(ExpoBattery);\n\nexport async function getBatteryLevelAsync(): Promise<number> {\n  if (!ExpoBattery.getBatteryLevelAsync) {\n    return -1;\n  }\n  return await ExpoBattery.getBatteryLevelAsync();\n}\n\nexport async function getBatteryStateAsync(): Promise<BatteryState> {\n  if (!ExpoBattery.getBatteryStateAsync) {\n    return BatteryState.UNKNOWN;\n  }\n  return await ExpoBattery.getBatteryStateAsync();\n}\n\nexport async function isLowPowerModeEnabledAsync(): Promise<boolean> {\n  if (!ExpoBattery.isLowPowerModeEnabledAsync) {\n    return false;\n  }\n  return await ExpoBattery.isLowPowerModeEnabledAsync();\n}\n\nexport async function getPowerStateAsync(): Promise<PowerState> {\n  if (!ExpoBattery.getPowerStateAsync) {\n    return {\n      batteryLevel: -1,\n      batteryState: BatteryState.UNKNOWN,\n      lowPowerMode: false,\n    };\n  }\n  return await ExpoBattery.getPowerStateAsync();\n}\n\nexport function addBatteryLevelListener(listener: BatteryLevelUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.batteryLevelDidChange', listener);\n}\n\nexport function addBatteryStateListener(listener: BatteryStateUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.batteryStateDidChange', listener);\n}\n\nexport function addLowPowerModeListener(listener: PowerModeUpdateListener): Subscription {\n  return BatteryEventEmitter.addListener('Expo.powerModeDidChange', listener);\n}\n\nexport {\n  BatteryLevelEvent,\n  BatteryLevelUpdateListener,\n  BatteryState,\n  BatteryStateEvent,\n  BatteryStateUpdateListener,\n  PowerModeEvent,\n  PowerModeUpdateListener,\n  PowerState,\n  Subscription,\n};\n"]}