{"version":3,"file":"Battery.js","sourceRoot":"","sources":["../src/Battery.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAErE,OAAO,WAAW,MAAM,eAAe,CAAC;AAUxC,MAAM,mBAAmB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAE1D,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,MAAM,IAAI,mBAAmB,CAAC,cAAc,EAAE,sBAAsB,CAAC,CAAC;KACvE;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACxC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;QACrC,MAAM,IAAI,mBAAmB,CAAC,cAAc,EAAE,sBAAsB,CAAC,CAAC;KACvE;IACD,OAAO,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,0BAA0B;IAC9C,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE;QAC3C,MAAM,IAAI,mBAAmB,CAAC,cAAc,EAAE,4BAA4B,CAAC,CAAC;KAC7E;IACD,OAAO,MAAM,WAAW,CAAC,0BAA0B,EAAE,CAAC;AACxD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB;IACtC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;QACnC,MAAM,IAAI,mBAAmB,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;KACrE;IACD,OAAO,MAAM,WAAW,CAAC,kBAAkB,EAAE,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,OAAO,mBAAmB,CAAC,WAAW,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;AACjF,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAiC;IACvE,OAAO,mBAAmB,CAAC,WAAW,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC","sourcesContent":["import { UnavailabilityError, EventEmitter } from '@unimodules/core';\n\nimport ExpoBattery from './ExpoBattery';\nimport {\n  PowerState,\n  BatteryState,\n  BatteryLevelUpdateCallback,\n  BatteryListener,\n  BatteryStateUpdateCallback,\n  PowerModeUpdateCallback,\n} from './Battery.types';\n\nconst BatteryEventEmitter = new EventEmitter(ExpoBattery);\n\nexport async function getBatteryLevelAsync(): Promise<number> {\n  if (!ExpoBattery.getBatteryLevelAsync) {\n    throw new UnavailabilityError('expo-battery', 'getBatteryLevelAsync');\n  }\n  return await ExpoBattery.getBatteryLevelAsync();\n}\n\nexport async function getBatteryStateAsync(): Promise<BatteryState> {\n  if (!ExpoBattery.getBatteryStateAsync) {\n    throw new UnavailabilityError('expo-battery', 'getBatteryStateAsync');\n  }\n  return await ExpoBattery.getBatteryStateAsync();\n}\n\nexport async function isLowPowerModeEnabledAsync(): Promise<boolean> {\n  if (!ExpoBattery.isLowPowerModeEnabledAsync) {\n    throw new UnavailabilityError('expo-battery', 'isLowPowerModeEnabledAsync');\n  }\n  return await ExpoBattery.isLowPowerModeEnabledAsync();\n}\n\nexport async function getPowerStateAsync(): Promise<PowerState> {\n  if (!ExpoBattery.getPowerStateAsync) {\n    throw new UnavailabilityError('expo-battery', 'getPowerStateAsync');\n  }\n  return await ExpoBattery.getPowerStateAsync();\n}\n\nexport function addBatteryLevelListener(callback: BatteryLevelUpdateCallback): BatteryListener {\n  return BatteryEventEmitter.addListener('Expo.batteryLevelDidChange', callback);\n}\n\nexport function addBatteryStateListener(callback: BatteryStateUpdateCallback): BatteryListener {\n  return BatteryEventEmitter.addListener('Expo.batteryStateDidChange', callback);\n}\n\nexport function addLowPowerModeListener(callback: PowerModeUpdateCallback): BatteryListener {\n  return BatteryEventEmitter.addListener('Expo.powerModeDidChange', callback);\n}\n"]}