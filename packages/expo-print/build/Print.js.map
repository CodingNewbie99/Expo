{"version":3,"file":"Print.js","sourceRoot":"","sources":["../src/Print.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAC/C,MAAM,EAAE,aAAa,EAAE,GAAG,kBAAkB,CAAC;AAoC7C,MAAM,WAAW,GAAwB,aAAa,CAAC,WAAW,CAAA;AAElE,KAAK,UAAU,UAAU,CAAC,OAAqB;IAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;QAC3F,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;KACjE;IACD,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;KACzF;IACD,OAAO,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAED,KAAK,UAAU,kBAAkB;IAC7B,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,OAAO,aAAa,CAAC,aAAa,EAAE,CAAC;KACtC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;KAClF;AACL,CAAC;AAED,KAAK,UAAU,gBAAgB,CAAC,UAA4B,EAAE;IAC1D,OAAO,aAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACnD,CAAC;AAED,eAAe;IACb,WAAW;IACX,UAAU;IACV,kBAAkB;IAClB,gBAAgB;CACjB,CAAC","sourcesContent":["import { Platform } from 'react-native';\nimport { NativeModulesProxy } from 'expo-core';\nconst { ExponentPrint } = NativeModulesProxy;\n\ntype PrintOptions = {\n  uri: string,\n  html?: string,\n  printerUrl?: string,\n  markupFormatterIOS?: string,\n};\n\ntype SelectResult = {\n  name: string,\n  url: string,\n};\n\ntype OrientationConstant = {\n  portrait: string,\n  landscape: string,\n};\n\ntype FilePrintOptions = {\n  html?: string,\n  width?: number,\n  height?: number,\n  padding?: {\n    top: number,\n    right: number,\n    bottom: number,\n    left: number,\n  },\n};\n\ntype FilePrintResult = {\n  uri: string,\n  numberOfPages: number,\n};\n\nconst Orientation: OrientationConstant = ExponentPrint.Orientation\n\nasync function printAsync(options: PrintOptions): Promise<void> {\n    if (!options.uri && !options.html && (Platform.OS === 'ios' && !options.markupFormatterIOS)) {\n      throw new Error('Must provide either `html` or `uri` to print');\n    }\n    if (options.uri && options.html) {\n      throw new Error('Must provide exactly one of `html` and `uri` but both were specified');\n    }\n    return ExponentPrint.print(options);\n}\n\nasync function selectPrinterAsync(): Promise<SelectResult> {\n    if (Platform.OS === 'ios') {\n      return ExponentPrint.selectPrinter();\n    } else {\n      throw new Error('Selecting the printer in advance is not available on Android.');\n    }\n}\n\nasync function printToFileAsync(options: FilePrintOptions = {}): Promise<FilePrintResult> {\n    return ExponentPrint.printToFileAsync(options);\n}\n\nexport default {\n  Orientation,\n  printAsync,\n  selectPrinterAsync,\n  printToFileAsync,\n};\n"]}