{"version":3,"file":"Image.js","sourceRoot":"","sources":["../src/Image.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,OAAO,SAAS,EAAE,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EAAc,eAAe,EAAE,MAAM,eAAe,CAAC;AAE5D,MAAM,OAAO,KAAM,SAAQ,KAAK,CAAC,SAAqB;IACpD;;;;OAIG;IACH,MAAM,CAAC,QAAQ,CAAC,IAAuB;QACrC,OAAO,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,KAAK,CAAC,gBAAgB;QAC3B,OAAO,MAAM,eAAe,CAAC,gBAAgB,EAAE,CAAC;IAClD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc;QACzB,OAAO,MAAM,eAAe,CAAC,cAAc,EAAE,CAAC;IAChD,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,SAAS,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;QACxF,MAAM,UAAU,GAAG,cAAc,IAAI,eAAe,IAAI,eAAe,CAAC,KAAK,CAAC;QAE9E,OAAO,oBAAC,SAAS,OAAK,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,GAAI,CAAC;IAChF,CAAC;CACF","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport ExpoImage, { ExpoImageModule } from './ExpoImage';\nimport { ImageProps, ImageResizeMode } from './Image.types';\n\nexport class Image extends React.Component<ImageProps> {\n  /**\n   * Preloads images at the given urls that can be later used in the image view.\n   * Preloaded images are always cached on the disk, so make sure to use\n   * `disk` (default) or `memoryAndDisk` cache policy.\n   */\n  static prefetch(urls: string | string[]): void {\n    return ExpoImageModule.prefetch(Array.isArray(urls) ? urls : [urls]);\n  }\n\n  /**\n   * Asynchronously clears all images stored in memory.\n   * @return A promise resolving to `true` when the operation succeeds.\n   * It may resolve to `false` on Android when the activity is no longer available.\n   */\n  static async clearMemoryCache(): Promise<boolean> {\n    return await ExpoImageModule.clearMemoryCache();\n  }\n\n  /**\n   * Asynchronously clears all images from the disk cache.\n   * @return A promise resolving to `true` when the operation succeeds.\n   * It may resolve to `false` on Android when the activity is no longer available.\n   */\n  static async clearDiskCache(): Promise<boolean> {\n    return await ExpoImageModule.clearDiskCache();\n  }\n\n  render() {\n    const { style, resizeMode: resizeModeProp, ...restProps } = this.props;\n\n    const { resizeMode: resizeModeStyle, ...restStyle } = StyleSheet.flatten([style]) || {};\n    const resizeMode = resizeModeProp ?? resizeModeStyle ?? ImageResizeMode.COVER;\n\n    return <ExpoImage {...restProps} style={restStyle} resizeMode={resizeMode} />;\n  }\n}\n"]}