{"version":3,"file":"AnimationManager.js","sourceRoot":"","sources":["../../src/web/AnimationManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\ntype AnimationManagerNode = [\n  key: string,\n  renderFunction: (callbacks: {\n    onReady: () => void;\n    onAnimationFinished: () => void;\n    onMount: () => void;\n    ref: React.RefObject<HTMLImageElement>;\n  }) => React.ReactElement\n];\n\ntype Animation = null | {\n  run: (to: React.RefObject<HTMLImageElement>, from: React.RefObject<HTMLImageElement>[]) => void;\n  startingClass: string;\n};\n\nfunction setClassOnElement(element: HTMLImageElement | null, classes: string[]) {\n  if (!element) {\n    return;\n  }\n  element.setAttribute('class', classes.join(' '));\n}\n\nfunction useAnimationManagerNode(node: AnimationManagerNode | null) {\n  const callbackContainer: {\n    onReady: (() => void) | null;\n    onAnimationFinished: (() => void) | null;\n    onMount: (() => void) | null;\n  } = {\n    onReady: null,\n    onAnimationFinished: null,\n    onMount: null,\n  };\n  const newNode = React.useMemo(() => {\n    if (!node) {\n      return null;\n    }\n    const [animationKey, renderFunction] = node;\n    const ref = React.createRef<HTMLImageElement>();\n    const child = renderFunction({\n      onReady: () => {\n        callbackContainer.onReady?.();\n      },\n      onAnimationFinished: () => {\n        callbackContainer.onAnimationFinished?.();\n      },\n      onMount: () => {\n        callbackContainer.onMount?.();\n      },\n      ref,\n    });\n    // key, ReactElement, ref, callbacks\n    return { animationKey, child, ref, callbackContainer };\n  }, [node?.[1]]);\n  return newNode;\n}\n\nexport function getAnimatorFromClass(animationClass: string | null) {\n  if (!animationClass) return null;\n\n  const runAnimation = (\n    to: React.RefObject<HTMLImageElement>,\n    from: React.RefObject<HTMLImageElement>[]\n  ) => {\n    setClassOnElement(to.current, [animationClass, 'transitioning', `${animationClass}-active`]);\n    from.forEach((element) => {\n      if (!element.current?.classList.contains(`unmount`)) {\n        setClassOnElement(element.current, [animationClass, `${animationClass}-end`, 'unmount']);\n      }\n    });\n  };\n\n  return {\n    startingClass: `${animationClass}-start`,\n    run: runAnimation,\n  };\n}\n\ntype MountedAnimationNode = {\n  animationKey: string;\n  child: React.ReactElement;\n  ref: React.RefObject<HTMLImageElement>;\n  callbackContainer: {\n    onReady: (() => void) | null;\n    onAnimationFinished: ((forceUnmount?: boolean) => void) | null;\n    onMount: (() => void) | null;\n  };\n};\n\nexport default function AnimationManager({\n  children: renderFunction,\n  initial,\n  animation,\n}: {\n  children: AnimationManagerNode;\n  initial: AnimationManagerNode | null;\n  animation: null | Animation;\n}) {\n  const initialNode = useAnimationManagerNode(initial);\n  if (initialNode) {\n    initialNode.callbackContainer.onAnimationFinished = () =>\n      setNodes((n) =>\n        n.filter(\n          (node, index) => node.animationKey !== initialNode.animationKey || index === n.length - 1\n        )\n      );\n  }\n\n  const [nodes, setNodes] = React.useState<MountedAnimationNode[]>(\n    initialNode ? [initialNode] : []\n  );\n  const newNode = useAnimationManagerNode(renderFunction);\n  if (newNode) {\n    newNode.callbackContainer.onAnimationFinished = (forceUnmount = false) => {\n      if (newNode.ref.current?.classList.contains('unmount') || forceUnmount) {\n        setNodes((n) =>\n          n.filter(\n            (node, index) => node.animationKey !== newNode.animationKey || index === n.length - 1\n          )\n        );\n      }\n    };\n  }\n  React.useEffect(() => {\n    setNodes((n) => {\n      if (!newNode) {\n        return n;\n      }\n      const existingNodeIndex = n.findIndex((node) => node.animationKey === newNode.animationKey);\n      if (existingNodeIndex >= 0) {\n        const copy = [...n];\n        copy.splice(existingNodeIndex, 1, newNode);\n        return copy;\n      }\n\n      newNode.callbackContainer.onMount = () => {\n        if (!newNode?.ref.current || !animation?.startingClass) {\n          return;\n        }\n        if (!newNode?.ref.current.classList.contains('transitioning')) {\n          setClassOnElement(newNode?.ref.current, [animation?.startingClass]);\n        }\n      };\n\n      newNode.callbackContainer.onReady = () => {\n        if (animation) {\n          animation.run(\n            newNode.ref,\n            n.map((n2) => n2.ref)\n          );\n        } else {\n          n.forEach((oldNode) => oldNode.callbackContainer?.onAnimationFinished?.(true));\n        }\n      };\n      n.forEach((prevNode) => (prevNode.callbackContainer.onReady = () => null));\n      return [...n, newNode];\n    });\n  }, [newNode]);\n  return (\n    <>\n      {[...nodes].reverse().map((n, idx) => (\n        <div key={n.animationKey}>{n.child}</div>\n      ))}\n    </>\n  );\n}\n"]}