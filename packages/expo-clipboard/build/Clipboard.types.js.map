{"version":3,"file":"Clipboard.types.js","sourceRoot":"","sources":["../src/Clipboard.types.ts"],"names":[],"mappings":"","sourcesContent":["// @needsAudit\nexport interface GetImageOptions {\n  /**\n   * The format of the clipboard image to be converted to.\n   */\n  format: 'png' | 'jpeg';\n  /**\n   * Specift the quality of the returned image, between 0 and 1. Defaults to `1` (highest quality).\n   * Applicable only when `format` is set to `jpeg`, ignored otherwise.\n   * @default 1\n   */\n  jpegQuality?: number;\n}\n\n// @needsAudit\nexport interface ClipboardImage {\n  /**\n   * Base64-encoded string of the image data.\n   * Its format is dependent on the `format` option.\n   *\n   * > **NOTE:** The string is already prepended with `data:image/png;base64,` or `data:image/jpeg;base64,` prefix.\n   *\n   * You can use it directly as the source of an `Image` element; for example:\n   * ```ts\n   * <Image\n   *   source={{ uri: clipboardImage.data }}\n   *   style={{ width: 200, height: 200 }}\n   * />\n   * ```\n   */\n  data: string;\n  /**\n   * Dimensions (`width` and `height`) of the image pasted from clipboard.\n   */\n  size: {\n    width: number;\n    height: number;\n  };\n}\n"]}