{"version":3,"sources":["../../../cli/utils/errors.ts"],"sourcesContent":["const ERROR_PREFIX = 'Error: ';\n\n/**\n * General error, formatted as a message in red text when caught by expo-cli (no stack trace is printed). Should be used in favor of `log.error()` in most cases.\n */\nexport class CommandError extends Error {\n  name = 'CommandError';\n  readonly isCommandError = true;\n  code: string;\n\n  constructor(code: string, message: string = '') {\n    super('');\n    // If e.toString() was called to get `message` we don't want it to look\n    // like \"Error: Error:\".\n    if (message.startsWith(ERROR_PREFIX)) {\n      message = message.substring(ERROR_PREFIX.length);\n    }\n\n    this.message = message || code;\n    this.code = code;\n  }\n}\n"],"names":["ERROR_PREFIX","CommandError","Error","code","message","name","isCommandError","startsWith","substring","length"],"mappings":";;;;AAAA,KAAK,CAACA,YAAY,GAAG,CAAS;MAKjBC,YAAY,SAASC,KAAK;gBAKzBC,IAAY,EAAEC,OAAe,GAAG,CAAE,EAAE,CAAC;QAC/C,KAAK,CAAC,CAAE;QANL,IAgBN,CAfCC,IAAI,GAAG,CAAc;QADhB,IAgBN,CAdUC,cAAc,GAAG,IAAI;QAK5B,EAAuE,AAAvE,qEAAuE;QACvE,EAAwB,AAAxB,sBAAwB;QACxB,EAAE,EAAEF,OAAO,CAACG,UAAU,CAACP,YAAY,GAAG,CAAC;YACrCI,OAAO,GAAGA,OAAO,CAACI,SAAS,CAACR,YAAY,CAACS,MAAM;QACjD,CAAC;QAED,IAAI,CAACL,OAAO,GAAGA,OAAO,IAAID,IAAI;QAC9B,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC;;QAfUF,YAAY,GAAZA,YAAY"}