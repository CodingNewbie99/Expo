{"version":3,"sources":["../../../cli/utils/args.ts"],"sourcesContent":["import arg from 'arg';\nimport { existsSync } from 'fs';\nimport { resolve } from 'path';\n\nimport * as Log from '../log';\n\nexport function getProjectRoot(args: arg.Result<arg.Spec>) {\n  const projectRoot = resolve(args._[0] || '.');\n\n  if (!existsSync(projectRoot)) {\n    Log.exit(`Invalid project root: ${projectRoot}`);\n  }\n\n  return projectRoot;\n}\n\nexport function assertArgs(schema: arg.Spec, argv: string[]): arg.Result<arg.Spec> {\n  try {\n    return arg(schema, { argv });\n  } catch (error) {\n    if (error.code === 'ARG_UNKNOWN_OPTION') {\n      Log.exit(error.message, 1);\n    }\n    throw error;\n  }\n}\n"],"names":["getProjectRoot","assertArgs","Log","args","projectRoot","_","exit","schema","argv","error","code","message"],"mappings":";;;;QAMgBA,cAAc,GAAdA,cAAc;QAUdC,UAAU,GAAVA,UAAU;AAhBV,GAAK,CAAL,IAAK;AACM,GAAI,CAAJ,GAAI;AACP,GAAM,CAAN,KAAM;AAElBC,GAAG,CAAHA,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;SAECF,cAAc,CAACG,IAA0B,EAAE,CAAC;IAC1D,KAAK,CAACC,WAAW,OALK,KAAM,UAKAD,IAAI,CAACE,CAAC,CAAC,CAAC,KAAK,CAAG;IAE5C,EAAE,OARuB,GAAI,aAQbD,WAAW,GAAG,CAAC;QALrBF,GAAG,CAMPI,IAAI,EAAE,sBAAsB,EAAEF,WAAW;IAC/C,CAAC;IAED,MAAM,CAACA,WAAW;AACpB,CAAC;SAEeH,UAAU,CAACM,MAAgB,EAAEC,IAAc,EAAwB,CAAC;IAClF,GAAG,CAAC,CAAC;QACH,MAAM,KAlBM,IAAK,UAkBND,MAAM,EAAE,CAAC;YAACC,IAAI;QAAC,CAAC;IAC7B,CAAC,CAAC,KAAK,EAAEC,KAAK,EAAE,CAAC;QACf,EAAE,EAAEA,KAAK,CAACC,IAAI,KAAK,CAAoB,qBAAE,CAAC;YAhBlCR,GAAG,CAiBLI,IAAI,CAACG,KAAK,CAACE,OAAO,EAAE,CAAC;QAC3B,CAAC;QACD,KAAK,CAACF,KAAK;IACb,CAAC;AACH,CAAC"}