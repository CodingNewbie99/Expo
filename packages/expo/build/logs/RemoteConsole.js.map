{"version":3,"sources":["../../../src/logs/RemoteConsole.ts"],"sourcesContent":["import RemoteLogging, { LogEntryFields, LogLevel } from './RemoteLogging';\n\n/**\n * Creates a console object that delegates calls to the specified underlying console and also sends\n * the messages to the development environment over a remote connection.\n */\nexport function createRemoteConsole(originalConsole: Console): Console {\n  let groupDepth = 0;\n\n  const enhancedConsole: typeof originalConsole = Object.create(originalConsole);\n\n  // https://console.spec.whatwg.org/#debug\n  // Don't use a level below \"info\" because \"debug\" is intended for messages that shouldn't be shown\n  // to the developer\n  _defineConsoleLogMethod('debug', 'info');\n\n  // https://console.spec.whatwg.org/#log\n  _defineConsoleLogMethod('log', 'info');\n\n  // https://console.spec.whatwg.org/#info\n  _defineConsoleLogMethod('info', 'info');\n\n  // https://console.spec.whatwg.org/#warn\n  _defineConsoleLogMethod('warn', 'warn');\n\n  // https://console.spec.whatwg.org/#error\n  _defineConsoleLogMethod('error', 'error');\n\n  // https://console.spec.whatwg.org/#assert\n  enhancedConsole.assert = function assert(condition: unknown, ...data: unknown[]): void {\n    if (originalConsole.assert) {\n      // @ts-ignore\n      originalConsole.assert(!!condition, ...data);\n    }\n\n    if (condition) {\n      return;\n    }\n\n    const assertionMessage = 'Assertion failed';\n    if (!data.length) {\n      data.push(assertionMessage);\n    } else {\n      if (typeof data[0] !== 'string') {\n        data.unshift(assertionMessage);\n      } else {\n        data[0] = `${assertionMessage}: ${data[0]}`;\n      }\n    }\n\n    _enqueueRemoteLog('error', {}, data);\n  };\n\n  // https://console.spec.whatwg.org/#group\n  enhancedConsole.group = function group(...data: unknown[]): void {\n    if (originalConsole.group) {\n      // @ts-ignore\n      originalConsole.group(...data);\n    }\n\n    _enqueueRemoteLog('info', {}, data);\n    groupDepth++;\n  };\n\n  // https://console.spec.whatwg.org/#groupcollapsed\n  enhancedConsole.groupCollapsed = function groupCollapsed(...data: unknown[]): void {\n    if (originalConsole.groupCollapsed) {\n      // @ts-ignore\n      originalConsole.groupCollapsed(...data);\n    }\n\n    _enqueueRemoteLog('info', { groupCollapsed: true }, data);\n    groupDepth++;\n  };\n\n  // https://console.spec.whatwg.org/#groupend\n  enhancedConsole.groupEnd = function groupEnd(): void {\n    if (originalConsole.groupEnd) {\n      originalConsole.groupEnd();\n    }\n\n    if (groupDepth > 0) {\n      groupDepth--;\n    }\n\n    _enqueueRemoteLog('info', { shouldHide: true }, []);\n  };\n\n  /**\n   * Defines a method in the `console.log()` family on the enhanced console\n   * instance\n   */\n  function _defineConsoleLogMethod(name: keyof typeof console, level: LogLevel): void {\n    enhancedConsole[name] = function __expoConsoleLog(...data: unknown[]): void {\n      const originalMethod = originalConsole[name];\n      if (typeof originalMethod === 'function') {\n        originalMethod.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog(level, {}, data);\n    };\n  }\n\n  /**\n   * Schedules the given log entry to be sent remotely in a safe way that handles all errors. This\n   * function is responsible for error handling because the console methods are synchronous but\n   * sending log messages is asynchronous, so this code (instead of the console methods) needs to be\n   * responsible for asynchronous errors.\n   */\n  function _enqueueRemoteLog(\n    level: LogLevel,\n    additionalFields: LogEntryFields,\n    data: unknown[]\n  ): void {\n    RemoteLogging.enqueueRemoteLogAsync(level, { groupDepth, ...additionalFields }, data).catch(\n      (error) => {\n        originalConsole.error(\n          `There was a problem sending log messages to your development environment`,\n          error\n        );\n      }\n    );\n  }\n\n  return enhancedConsole;\n}\n"],"names":["RemoteLogging","createRemoteConsole","originalConsole","groupDepth","enhancedConsole","Object","create","_defineConsoleLogMethod","assert","condition","data","assertionMessage","length","push","unshift","_enqueueRemoteLog","group","groupCollapsed","groupEnd","shouldHide","name","level","__expoConsoleLog","originalMethod","apply","additionalFields","enqueueRemoteLogAsync","catch","error"],"mappings":"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"}