{"version":3,"file":"DevToolsPluginClientFactory.js","sourceRoot":"","sources":["../../src/devtools/DevToolsPluginClientFactory.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AAC5E,OAAO,EAAE,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AAGpF;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAC9C,cAA8B;IAE9B,IAAI,MAA4B,CAAC;IACjC,IAAI,cAAc,CAAC,MAAM,KAAK,KAAK,EAAE;QACnC,MAAM,GAAG,IAAI,2BAA2B,CAAC,cAAc,CAAC,CAAC;KAC1D;SAAM;QACL,MAAM,GAAG,IAAI,+BAA+B,CAAC,cAAc,CAAC,CAAC;KAC9D;IACD,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;IACzB,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import type { DevToolsPluginClient } from './DevToolsPluginClient';\nimport { DevToolsPluginClientImplApp } from './DevToolsPluginClientImplApp';\nimport { DevToolsPluginClientImplBrowser } from './DevToolsPluginClientImplBrowser';\nimport type { ConnectionInfo } from './devtools.types';\n\n/**\n * Factory of DevToolsPluginClient based on sender types.\n * @hidden\n */\nexport async function createDevToolsPluginClient(\n  connectionInfo: ConnectionInfo\n): Promise<DevToolsPluginClient> {\n  let client: DevToolsPluginClient;\n  if (connectionInfo.sender === 'app') {\n    client = new DevToolsPluginClientImplApp(connectionInfo);\n  } else {\n    client = new DevToolsPluginClientImplBrowser(connectionInfo);\n  }\n  await client.initAsync();\n  return client;\n}\n"]}