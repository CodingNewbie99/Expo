{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;AAAA,iDAAqC;AACrC,4CAAoB;AAEpB,MAAM,QAAQ,GAAG,2CAA2C,CAAC;AAE7D,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,UAAU,GAAG,OAAO,EAAE,WAAW,GAAG,KAAK,EAAE,EAAE;IAC5E,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,OAAO,QAAQ,UAAU,EAAE,CAAC;IAEpF,oBAAI,CACF,gBAAgB,KAAK,kBAAkB,OAAO,yBAAyB,QAAQ,IAAI,OAAO,eAAe,QAAQ,IAAI,OAAO,gBAAgB,EAC5I,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE;QACxB,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9B;aAAM,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO,CAAC,GAAG,CAAC,4BAA4B,UAAU,SAAS,OAAO,GAAG,CAAC,CAAC;QAEvE,uFAAuF;QACvF,MAAM,eAAe,GAAG,GAAG,QAAQ,IAAI,OAAO,EAAE,CAAC;QACjD,IAAI;YACF,YAAE,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,GAAG,eAAe,cAAc,CAAC,CAAC;SAC/C;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,wBAAwB,eAAe,GAAG,CAAC,CAAC;SAC3D;IACH,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,cAAc,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;AAExD,OAAO;AACP,oDAAoD;AACpD,gEAAgE;AAChE,8CAA8C","sourcesContent":["import { exec } from 'child_process';\nimport fs from 'fs';\n\nconst dataPath = '../../docs/public/static/data/unversioned';\n\nconst executeCommand = (pkgName, entryPoint = 'index', wholeModule = false) => {\n  const entry = wholeModule ? `../${pkgName}/src` : `../${pkgName}/src/${entryPoint}`;\n\n  exec(\n    `yarn command ${entry} --tsconfig ../${pkgName}/tsconfig.json --json ${dataPath}/${pkgName}.json --out ${dataPath}/${pkgName} --plugin none`,\n    (error, stdout, stderr) => {\n      if (error && error.message && error.message.length > 0) {\n        console.error(error.message);\n      } else if (stderr && stderr.length > 0) {\n        console.error(stderr);\n      }\n      console.log(`Successful extraction of ${entryPoint} from ${pkgName}!`);\n\n      // Currently there is no option to skip HTML generation, so we need to remove the files\n      const htmlContentPath = `${dataPath}/${pkgName}`;\n      try {\n        fs.rmdirSync(htmlContentPath, { recursive: true });\n        console.log(`${htmlContentPath} is deleted!`);\n      } catch (err) {\n        console.error(`Error while deleting ${htmlContentPath}.`);\n      }\n    }\n  );\n};\n\nexecuteCommand('expo-mail-composer', 'MailComposer.ts');\n\n// TODO\n// executeCommand('expo-sensors', 'index.ts', true);\n// executeCommand('expo-barcode-scanner', 'BarCodeScanner.tsx');\n// executeCommand('expo-random', 'Random.ts');\n"]}