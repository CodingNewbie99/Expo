{"version":3,"file":"PlatformSensorModule.js","sourceRoot":"","sources":["../src/PlatformSensorModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAEzC,MAAM,CAAC,OAAO,OAAO,oBAAoB;IAAzC;QACE,YAAO,GAAG,IAAI,YAAY,CAAC,EAAS,CAAC,CAAC;QAEtC,oBAAe,GAAW,CAAC,CAAC;QAU5B,gBAAW,GAAG,CAAC,SAAiB,EAAQ,EAAE,GAAE,CAAC,CAAC;QAE9C,oBAAe,GAAG,CAAC,KAAa,EAAQ,EAAE,GAAE,CAAC,CAAC;QAE9C,mBAAc,GAAG,GAAS,EAAE,GAAE,CAAC,CAAC;QAEhC,kBAAa,GAAG,GAAS,EAAE,GAAE,CAAC,CAAC;QAE/B,sBAAiB,GAAG,KAAK,EAAE,UAAkB,EAAiB,EAAE;YAC9D,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC;IAnBC,IAAI,IAAI;QACN,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,OAAO,KAAK,CAAC;IACf,CAAC;CAaF","sourcesContent":["import { EventEmitter } from 'expo-core';\n\nexport default class PlatformSensorModule {\n  emitter = new EventEmitter({} as any);\n\n  _updateInterval: number = 0;\n\n  get name(): string {\n    throw new Error('PlatformSensorModule.name should be implemented');\n  }\n\n  async isAvailableAsync(): Promise<boolean> {\n    return false;\n  }\n\n  addListener = (eventName: string): void => {};\n\n  removeListeners = (count: number): void => {};\n\n  startObserving = (): void => {};\n\n  stopObserving = (): void => {};\n\n  setUpdateInterval = async (intervalMs: number): Promise<void> => {\n    this._updateInterval = intervalMs;\n  };\n}\n"]}