{"version":3,"file":"isSensorEnabledAsync.web.js","sourceRoot":"","sources":["../../src/utils/isSensorEnabledAsync.web.ts"],"names":[],"mappings":"AAEA,gDAAgD;AAChD,qDAAqD;AACrD,MAAM,CAAC,KAAK,UAAU,6BAA6B,CACjD,SAA0B,EAC1B,OAAgB;IAEhB,IAAI,CAAC,KAAK,EAAE,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,IAAI,MAAM,oBAAoB,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;QAClD,OAAO,IAAI,CAAC;KACb;IAED,MAAM,IAAI,KAAK,CACb,yBAAyB,SAAS,GAAG;QACnC,gFAAgF;QAChF,kGAAkG,CACrG,CAAC;AACJ,CAAC;AAED,yCAAyC;AACzC,MAAM,UAAU,oBAAoB,CAClC,SAA0B,EAC1B,UAAkB,GAAG;IAErB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,MAAM,EAAE,GAAG,UAAU,CAAC,GAAG,EAAE;YACzB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAChD,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,EAAE,OAAO,CAAC,CAAC;QAEZ,MAAM,QAAQ,GAAG,GAAS,EAAE;YAC1B,YAAY,CAAC,EAAE,CAAC,CAAC;YACjB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAChD,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,8CAA8C;AAC9C,SAAS,KAAK;IACZ,MAAM,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAChE,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACpC,OAAO,OAAO,IAAI,CAAC,MAAM,CAAC;AAC5B,CAAC;AAED,eAAe,oBAAoB,CAAC","sourcesContent":["type SensorEventName = 'deviceorientation' | 'devicemotion';\n\n// iOS 12.2 disables DeviceMotion by default now\n// https://github.com/w3c/deviceorientation/issues/57\nexport async function assertSensorEventEnabledAsync(\n  eventName: SensorEventName,\n  timeout?: number\n): Promise<boolean> {\n  if (!isIOS()) {\n    return true;\n  }\n\n  if (await isSensorEnabledAsync(eventName, timeout)) {\n    return true;\n  }\n\n  throw new Error(\n    `Cannot observe event: ${eventName}.` +\n      '\\nEnable device orientation in Settings > Safari > Motion & Orientation Access' +\n      '\\nalso ensure that you are hosting with https as DeviceMotion is now a secure API on iOS Safari.'\n  );\n}\n\n// throw error if the sensor is disabled.\nexport function isSensorEnabledAsync(\n  eventName: SensorEventName,\n  timeout: number = 250\n): Promise<boolean> {\n  return new Promise(resolve => {\n    const id = setTimeout(() => {\n      window.removeEventListener(eventName, listener);\n      resolve(false);\n    }, timeout);\n\n    const listener = (): void => {\n      clearTimeout(id);\n      window.removeEventListener(eventName, listener);\n      resolve(true);\n    };\n\n    window.addEventListener(eventName, listener);\n  });\n}\n\n// https://stackoverflow.com/a/9039885/4047926\nfunction isIOS(): boolean {\n  const isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  const isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}\n\nexport default isSensorEnabledAsync;\n"]}