name: iOS Unit Tests

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - .github/workflows/ios-unit-tests.yml
      - ios/**
      - packages/**/ios/**
      - tools/src/dynamic-macros/**
      - tools/src/commands/IosGenerateDynamicMacros.ts
      - tools/src/commands/IosNativeUnitTests.ts
      - tools/src/commands/NativeUnitTests.ts
      - secrets/**
      - fastlane/**
      - Gemfile.lock
      - .ruby-version
  push:
    branches: [main]
    paths:
      - .github/workflows/ios-unit-tests.yml
      - ios/**
      - packages/**/ios/**
      - tools/src/dynamic-macros/**
      - tools/src/commands/IosGenerateDynamicMacros.ts
      - tools/src/commands/IosNativeUnitTests.ts
      - tools/src/commands/NativeUnitTests.ts
      - secrets/**
      - fastlane/**
      - Gemfile.lock
      - .ruby-version

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-11
    timeout-minutes: 60
    steps:
      - name: üëÄ Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: üî® Switch to Xcode 13.0
        run: sudo xcode-select --switch /Applications/Xcode_13.0.app
      - name: üç∫ Install git-crypt
        run: brew install git-crypt
      - name: üîì Decrypt secrets if possible
        env:
          GIT_CRYPT_KEY_BASE64: ${{ secrets.GIT_CRYPT_KEY_BASE64 }}
        run: |
          if [[ ${GIT_CRYPT_KEY_BASE64:-unset} = unset ]]; then
            echo 'git-crypt key not present in environment'
          else
            git crypt unlock <(echo $GIT_CRYPT_KEY_BASE64 | base64 --decode)
          fi
      - name: ‚ûï Add `bin` to GITHUB_PATH
        run: echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: üíé Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: ‚ôªÔ∏è Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'
          yarn-tools: 'true'
          ios-pods: 'true'
          bare-expo-pods: 'true'
      - name: üß∂ Yarn install
        if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: üè≠ Generating dynamic macros
        run: expotools ios-generate-dynamic-macros
      - name: ü•• Install CocoaPods in `ios`
        if: steps.expo-caches.outputs.ios-pods-hit != 'true'
        run: pod install
        working-directory: ios
      - name: ü•• Install CocoaPods in `apps/bare-expo/ios`
        if: steps.expo-caches.outputs.bare-expo-pods-hit != 'true'
        run: pod install
        working-directory: apps/bare-expo/ios
      - name: Run native iOS unit tests
        timeout-minutes: 45
        run: expotools native-unit-tests --platform ios
