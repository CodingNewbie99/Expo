
name: Docs Website Preview

defaults:
  run:
    shell: bash
    working-directory: docs

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'docs/**'
      - '.github/workflows/docs-preview.yml'
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
    types:
      - labeled
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docs-preview:
    if: contains(github.event.pull_request.labels.*.name, 'docs:preview')
    runs-on: ubuntu-20.04
    steps:
      - name: üëÄ Checkout
        uses: actions/checkout@v3
      - name: ‚¨¢ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: ‚ôªÔ∏è Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-docs: 'true'
      - name: ‚ûï Add `bin` to GITHUB_PATH
        run: echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: ü™£ Set up docs preview bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          aws s3api create-bucket --acl public-read --bucket docs.expo.dev-pr-${{ github.event.pull_request.number }}
          aws s3 website s3://docs.expo.dev-pr-${{ github.event.pull_request.number }}/ --index-document index.html
      - name: üß∂ Yarn install
        if: steps.expo-caches.outputs.yarn-docs-hit != 'true'
        run: yarn install --frozen-lockfile
      - run: yarn danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: üèóÔ∏è Build Docs website for deploy
        run: yarn export
        timeout-minutes: 20
        env:
          AWS_BUCKET: 'docs.expo.dev-preview/pr-${{ github.event.pull_request.number }}'
      - name: üöÄ Deploy Docs website
        run: ./deploy.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-2'
          AWS_BUCKET: docs.expo.dev-pr-${{ github.event.pull_request.number }}
      - name: üîç Find old comment if it exists
        uses: peter-evans/find-comment@v2
        id: old_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'expo-bot'
          body-includes: The documentation preview URL
      - name: üí¨ Add comment with preview URL
        if: steps.old_comment.outputs.comment-id == ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.EXPO_BOT_GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Docs preview created! View it [here](https://s3.us-east-2.amazonaws.com/docs.expo.dev-pr-${{ github.event.pull_request.number }}).'
            });
      - name: üí¨ Update comment with preview URL
        if: steps.old_comment.outputs.comment-id != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.EXPO_BOT_GITHUB_TOKEN }}
          script: |
            github.rest.issues.updateComment({
              issue_number: context.issue.number,
              comment_id: '${{ steps.old_comment.outputs.comment-id }}',
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Docs preview created! View it [here](https://s3.us-east-2.amazonaws.com/docs.expo.dev-pr-${{ github.event.pull_request.number }}).'
            });
